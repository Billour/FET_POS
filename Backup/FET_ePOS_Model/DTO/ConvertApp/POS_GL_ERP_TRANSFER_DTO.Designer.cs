//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:2.0.50727.3053
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace FET.POS.Model.DTO.ConvertApp {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("POS_GL_ERP_TRANSFER_DTO")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class POS_GL_ERP_TRANSFER_DTO : global::System.Data.DataSet {
        
        private ERP_GLDataTable tableERP_GL;
        
        private POS_GLDataTable tablePOS_GL;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public POS_GL_ERP_TRANSFER_DTO() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected POS_GL_ERP_TRANSFER_DTO(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ERP_GL"] != null)) {
                    base.Tables.Add(new ERP_GLDataTable(ds.Tables["ERP_GL"]));
                }
                if ((ds.Tables["POS_GL"] != null)) {
                    base.Tables.Add(new POS_GLDataTable(ds.Tables["POS_GL"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ERP_GLDataTable ERP_GL {
            get {
                return this.tableERP_GL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public POS_GLDataTable POS_GL {
            get {
                return this.tablePOS_GL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            POS_GL_ERP_TRANSFER_DTO cln = ((POS_GL_ERP_TRANSFER_DTO)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ERP_GL"] != null)) {
                    base.Tables.Add(new ERP_GLDataTable(ds.Tables["ERP_GL"]));
                }
                if ((ds.Tables["POS_GL"] != null)) {
                    base.Tables.Add(new POS_GLDataTable(ds.Tables["POS_GL"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableERP_GL = ((ERP_GLDataTable)(base.Tables["ERP_GL"]));
            if ((initTable == true)) {
                if ((this.tableERP_GL != null)) {
                    this.tableERP_GL.InitVars();
                }
            }
            this.tablePOS_GL = ((POS_GLDataTable)(base.Tables["POS_GL"]));
            if ((initTable == true)) {
                if ((this.tablePOS_GL != null)) {
                    this.tablePOS_GL.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "POS_GL_ERP_TRANSFER_DTO";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/POS_GL_ERP_TRANSFER_DTO.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableERP_GL = new ERP_GLDataTable();
            base.Tables.Add(this.tableERP_GL);
            this.tablePOS_GL = new POS_GLDataTable();
            base.Tables.Add(this.tablePOS_GL);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeERP_GL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePOS_GL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            POS_GL_ERP_TRANSFER_DTO ds = new POS_GL_ERP_TRANSFER_DTO();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void ERP_GLRowChangeEventHandler(object sender, ERP_GLRowChangeEvent e);
        
        public delegate void POS_GLRowChangeEventHandler(object sender, POS_GLRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ERP_GLDataTable : global::System.Data.TypedTableBase<ERP_GLRow> {
            
            private global::System.Data.DataColumn columnMYNO;
            
            private global::System.Data.DataColumn columnCOMPANYCODE;
            
            private global::System.Data.DataColumn columnIDENTIFIER;
            
            private global::System.Data.DataColumn columnBOOKSID;
            
            private global::System.Data.DataColumn columnACCDATE;
            
            private global::System.Data.DataColumn columnACCTYPE;
            
            private global::System.Data.DataColumn columnGLCODE1;
            
            private global::System.Data.DataColumn columnGLCODE2;
            
            private global::System.Data.DataColumn columnGLCODE3;
            
            private global::System.Data.DataColumn columnGLCODE4;
            
            private global::System.Data.DataColumn columnGLCODE5;
            
            private global::System.Data.DataColumn columnGLCODE6;
            
            private global::System.Data.DataColumn columnAMOUNT;
            
            private global::System.Data.DataColumn columnDWNFLAG;
            
            private global::System.Data.DataColumn columnDWNDATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ERP_GLDataTable() {
                this.TableName = "ERP_GL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ERP_GLDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ERP_GLDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MYNOColumn {
                get {
                    return this.columnMYNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANYCODEColumn {
                get {
                    return this.columnCOMPANYCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDENTIFIERColumn {
                get {
                    return this.columnIDENTIFIER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BOOKSIDColumn {
                get {
                    return this.columnBOOKSID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ACCDATEColumn {
                get {
                    return this.columnACCDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ACCTYPEColumn {
                get {
                    return this.columnACCTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GLCODE1Column {
                get {
                    return this.columnGLCODE1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GLCODE2Column {
                get {
                    return this.columnGLCODE2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GLCODE3Column {
                get {
                    return this.columnGLCODE3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GLCODE4Column {
                get {
                    return this.columnGLCODE4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GLCODE5Column {
                get {
                    return this.columnGLCODE5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GLCODE6Column {
                get {
                    return this.columnGLCODE6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AMOUNTColumn {
                get {
                    return this.columnAMOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DWNFLAGColumn {
                get {
                    return this.columnDWNFLAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DWNDATEColumn {
                get {
                    return this.columnDWNDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ERP_GLRow this[int index] {
                get {
                    return ((ERP_GLRow)(this.Rows[index]));
                }
            }
            
            public event ERP_GLRowChangeEventHandler ERP_GLRowChanging;
            
            public event ERP_GLRowChangeEventHandler ERP_GLRowChanged;
            
            public event ERP_GLRowChangeEventHandler ERP_GLRowDeleting;
            
            public event ERP_GLRowChangeEventHandler ERP_GLRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddERP_GLRow(ERP_GLRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ERP_GLRow AddERP_GLRow(string MYNO, string COMPANYCODE, string IDENTIFIER, string BOOKSID, System.DateTime ACCDATE, string ACCTYPE, string GLCODE1, string GLCODE2, string GLCODE3, string GLCODE4, string GLCODE5, string GLCODE6, decimal AMOUNT, string DWNFLAG, System.DateTime DWNDATE) {
                ERP_GLRow rowERP_GLRow = ((ERP_GLRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MYNO,
                        COMPANYCODE,
                        IDENTIFIER,
                        BOOKSID,
                        ACCDATE,
                        ACCTYPE,
                        GLCODE1,
                        GLCODE2,
                        GLCODE3,
                        GLCODE4,
                        GLCODE5,
                        GLCODE6,
                        AMOUNT,
                        DWNFLAG,
                        DWNDATE};
                rowERP_GLRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowERP_GLRow);
                return rowERP_GLRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ERP_GLRow FindByMYNOCOMPANYCODE(string MYNO, string COMPANYCODE) {
                return ((ERP_GLRow)(this.Rows.Find(new object[] {
                            MYNO,
                            COMPANYCODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ERP_GLDataTable cln = ((ERP_GLDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ERP_GLDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMYNO = base.Columns["MYNO"];
                this.columnCOMPANYCODE = base.Columns["COMPANYCODE"];
                this.columnIDENTIFIER = base.Columns["IDENTIFIER"];
                this.columnBOOKSID = base.Columns["BOOKSID"];
                this.columnACCDATE = base.Columns["ACCDATE"];
                this.columnACCTYPE = base.Columns["ACCTYPE"];
                this.columnGLCODE1 = base.Columns["GLCODE1"];
                this.columnGLCODE2 = base.Columns["GLCODE2"];
                this.columnGLCODE3 = base.Columns["GLCODE3"];
                this.columnGLCODE4 = base.Columns["GLCODE4"];
                this.columnGLCODE5 = base.Columns["GLCODE5"];
                this.columnGLCODE6 = base.Columns["GLCODE6"];
                this.columnAMOUNT = base.Columns["AMOUNT"];
                this.columnDWNFLAG = base.Columns["DWNFLAG"];
                this.columnDWNDATE = base.Columns["DWNDATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMYNO = new global::System.Data.DataColumn("MYNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMYNO);
                this.columnCOMPANYCODE = new global::System.Data.DataColumn("COMPANYCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANYCODE);
                this.columnIDENTIFIER = new global::System.Data.DataColumn("IDENTIFIER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDENTIFIER);
                this.columnBOOKSID = new global::System.Data.DataColumn("BOOKSID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOOKSID);
                this.columnACCDATE = new global::System.Data.DataColumn("ACCDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCDATE);
                this.columnACCTYPE = new global::System.Data.DataColumn("ACCTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCTYPE);
                this.columnGLCODE1 = new global::System.Data.DataColumn("GLCODE1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGLCODE1);
                this.columnGLCODE2 = new global::System.Data.DataColumn("GLCODE2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGLCODE2);
                this.columnGLCODE3 = new global::System.Data.DataColumn("GLCODE3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGLCODE3);
                this.columnGLCODE4 = new global::System.Data.DataColumn("GLCODE4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGLCODE4);
                this.columnGLCODE5 = new global::System.Data.DataColumn("GLCODE5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGLCODE5);
                this.columnGLCODE6 = new global::System.Data.DataColumn("GLCODE6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGLCODE6);
                this.columnAMOUNT = new global::System.Data.DataColumn("AMOUNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMOUNT);
                this.columnDWNFLAG = new global::System.Data.DataColumn("DWNFLAG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDWNFLAG);
                this.columnDWNDATE = new global::System.Data.DataColumn("DWNDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDWNDATE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMYNO,
                                this.columnCOMPANYCODE}, true));
                this.columnMYNO.AllowDBNull = false;
                this.columnMYNO.MaxLength = 40;
                this.columnCOMPANYCODE.AllowDBNull = false;
                this.columnCOMPANYCODE.MaxLength = 10;
                this.columnIDENTIFIER.MaxLength = 2;
                this.columnBOOKSID.MaxLength = 2;
                this.columnACCTYPE.MaxLength = 2;
                this.columnGLCODE1.MaxLength = 30;
                this.columnGLCODE2.MaxLength = 30;
                this.columnGLCODE3.MaxLength = 30;
                this.columnGLCODE4.MaxLength = 30;
                this.columnGLCODE5.MaxLength = 30;
                this.columnGLCODE6.MaxLength = 30;
                this.columnDWNFLAG.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ERP_GLRow NewERP_GLRow() {
                return ((ERP_GLRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ERP_GLRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ERP_GLRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ERP_GLRowChanged != null)) {
                    this.ERP_GLRowChanged(this, new ERP_GLRowChangeEvent(((ERP_GLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ERP_GLRowChanging != null)) {
                    this.ERP_GLRowChanging(this, new ERP_GLRowChangeEvent(((ERP_GLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ERP_GLRowDeleted != null)) {
                    this.ERP_GLRowDeleted(this, new ERP_GLRowChangeEvent(((ERP_GLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ERP_GLRowDeleting != null)) {
                    this.ERP_GLRowDeleting(this, new ERP_GLRowChangeEvent(((ERP_GLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveERP_GLRow(ERP_GLRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                POS_GL_ERP_TRANSFER_DTO ds = new POS_GL_ERP_TRANSFER_DTO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ERP_GLDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class POS_GLDataTable : global::System.Data.TypedTableBase<POS_GLRow> {
            
            private global::System.Data.DataColumn columnPOS_GL_ID;
            
            private global::System.Data.DataColumn columnGL_DATE;
            
            private global::System.Data.DataColumn columnSTORE_NO;
            
            private global::System.Data.DataColumn columnCOMPANYCODE;
            
            private global::System.Data.DataColumn columnDRCR;
            
            private global::System.Data.DataColumn columnACCOUNT_CODE;
            
            private global::System.Data.DataColumn columnAMT;
            
            private global::System.Data.DataColumn columnPOSUUID_MASTER;
            
            private global::System.Data.DataColumn columnCC2ERP_FLAG;
            
            private global::System.Data.DataColumn columnCC2ERP_ID;
            
            private global::System.Data.DataColumn columnCREATE_USER;
            
            private global::System.Data.DataColumn columnCC2ERP_DTM;
            
            private global::System.Data.DataColumn columnCREATE_DTM;
            
            private global::System.Data.DataColumn columnMODI_USER;
            
            private global::System.Data.DataColumn columnMODI_DTM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POS_GLDataTable() {
                this.TableName = "POS_GL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal POS_GLDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected POS_GLDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn POS_GL_IDColumn {
                get {
                    return this.columnPOS_GL_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GL_DATEColumn {
                get {
                    return this.columnGL_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STORE_NOColumn {
                get {
                    return this.columnSTORE_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANYCODEColumn {
                get {
                    return this.columnCOMPANYCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DRCRColumn {
                get {
                    return this.columnDRCR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ACCOUNT_CODEColumn {
                get {
                    return this.columnACCOUNT_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AMTColumn {
                get {
                    return this.columnAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn POSUUID_MASTERColumn {
                get {
                    return this.columnPOSUUID_MASTER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CC2ERP_FLAGColumn {
                get {
                    return this.columnCC2ERP_FLAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CC2ERP_IDColumn {
                get {
                    return this.columnCC2ERP_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_USERColumn {
                get {
                    return this.columnCREATE_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CC2ERP_DTMColumn {
                get {
                    return this.columnCC2ERP_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_DTMColumn {
                get {
                    return this.columnCREATE_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODI_USERColumn {
                get {
                    return this.columnMODI_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODI_DTMColumn {
                get {
                    return this.columnMODI_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POS_GLRow this[int index] {
                get {
                    return ((POS_GLRow)(this.Rows[index]));
                }
            }
            
            public event POS_GLRowChangeEventHandler POS_GLRowChanging;
            
            public event POS_GLRowChangeEventHandler POS_GLRowChanged;
            
            public event POS_GLRowChangeEventHandler POS_GLRowDeleting;
            
            public event POS_GLRowChangeEventHandler POS_GLRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPOS_GLRow(POS_GLRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POS_GLRow AddPOS_GLRow(string POS_GL_ID, string GL_DATE, string STORE_NO, string COMPANYCODE, string DRCR, string ACCOUNT_CODE, decimal AMT, string POSUUID_MASTER, string CC2ERP_FLAG, string CC2ERP_ID, string CREATE_USER, System.DateTime CC2ERP_DTM, System.DateTime CREATE_DTM, string MODI_USER, System.DateTime MODI_DTM) {
                POS_GLRow rowPOS_GLRow = ((POS_GLRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        POS_GL_ID,
                        GL_DATE,
                        STORE_NO,
                        COMPANYCODE,
                        DRCR,
                        ACCOUNT_CODE,
                        AMT,
                        POSUUID_MASTER,
                        CC2ERP_FLAG,
                        CC2ERP_ID,
                        CREATE_USER,
                        CC2ERP_DTM,
                        CREATE_DTM,
                        MODI_USER,
                        MODI_DTM};
                rowPOS_GLRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPOS_GLRow);
                return rowPOS_GLRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POS_GLRow FindByPOS_GL_ID(string POS_GL_ID) {
                return ((POS_GLRow)(this.Rows.Find(new object[] {
                            POS_GL_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                POS_GLDataTable cln = ((POS_GLDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new POS_GLDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPOS_GL_ID = base.Columns["POS_GL_ID"];
                this.columnGL_DATE = base.Columns["GL_DATE"];
                this.columnSTORE_NO = base.Columns["STORE_NO"];
                this.columnCOMPANYCODE = base.Columns["COMPANYCODE"];
                this.columnDRCR = base.Columns["DRCR"];
                this.columnACCOUNT_CODE = base.Columns["ACCOUNT_CODE"];
                this.columnAMT = base.Columns["AMT"];
                this.columnPOSUUID_MASTER = base.Columns["POSUUID_MASTER"];
                this.columnCC2ERP_FLAG = base.Columns["CC2ERP_FLAG"];
                this.columnCC2ERP_ID = base.Columns["CC2ERP_ID"];
                this.columnCREATE_USER = base.Columns["CREATE_USER"];
                this.columnCC2ERP_DTM = base.Columns["CC2ERP_DTM"];
                this.columnCREATE_DTM = base.Columns["CREATE_DTM"];
                this.columnMODI_USER = base.Columns["MODI_USER"];
                this.columnMODI_DTM = base.Columns["MODI_DTM"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPOS_GL_ID = new global::System.Data.DataColumn("POS_GL_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOS_GL_ID);
                this.columnGL_DATE = new global::System.Data.DataColumn("GL_DATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGL_DATE);
                this.columnSTORE_NO = new global::System.Data.DataColumn("STORE_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTORE_NO);
                this.columnCOMPANYCODE = new global::System.Data.DataColumn("COMPANYCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANYCODE);
                this.columnDRCR = new global::System.Data.DataColumn("DRCR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDRCR);
                this.columnACCOUNT_CODE = new global::System.Data.DataColumn("ACCOUNT_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCOUNT_CODE);
                this.columnAMT = new global::System.Data.DataColumn("AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMT);
                this.columnPOSUUID_MASTER = new global::System.Data.DataColumn("POSUUID_MASTER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOSUUID_MASTER);
                this.columnCC2ERP_FLAG = new global::System.Data.DataColumn("CC2ERP_FLAG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCC2ERP_FLAG);
                this.columnCC2ERP_ID = new global::System.Data.DataColumn("CC2ERP_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCC2ERP_ID);
                this.columnCREATE_USER = new global::System.Data.DataColumn("CREATE_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_USER);
                this.columnCC2ERP_DTM = new global::System.Data.DataColumn("CC2ERP_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCC2ERP_DTM);
                this.columnCREATE_DTM = new global::System.Data.DataColumn("CREATE_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_DTM);
                this.columnMODI_USER = new global::System.Data.DataColumn("MODI_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODI_USER);
                this.columnMODI_DTM = new global::System.Data.DataColumn("MODI_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODI_DTM);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPOS_GL_ID}, true));
                this.columnPOS_GL_ID.AllowDBNull = false;
                this.columnPOS_GL_ID.Unique = true;
                this.columnPOS_GL_ID.MaxLength = 32;
                this.columnGL_DATE.AllowDBNull = false;
                this.columnGL_DATE.MaxLength = 8;
                this.columnSTORE_NO.AllowDBNull = false;
                this.columnSTORE_NO.MaxLength = 6;
                this.columnCOMPANYCODE.AllowDBNull = false;
                this.columnCOMPANYCODE.MaxLength = 2;
                this.columnDRCR.AllowDBNull = false;
                this.columnDRCR.MaxLength = 2;
                this.columnACCOUNT_CODE.AllowDBNull = false;
                this.columnACCOUNT_CODE.MaxLength = 23;
                this.columnAMT.AllowDBNull = false;
                this.columnPOSUUID_MASTER.AllowDBNull = false;
                this.columnPOSUUID_MASTER.MaxLength = 32;
                this.columnCC2ERP_FLAG.AllowDBNull = false;
                this.columnCC2ERP_FLAG.MaxLength = 1;
                this.columnCC2ERP_ID.MaxLength = 40;
                this.columnCREATE_USER.AllowDBNull = false;
                this.columnCREATE_USER.MaxLength = 20;
                this.columnCREATE_DTM.AllowDBNull = false;
                this.columnMODI_USER.AllowDBNull = false;
                this.columnMODI_USER.MaxLength = 20;
                this.columnMODI_DTM.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POS_GLRow NewPOS_GLRow() {
                return ((POS_GLRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new POS_GLRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(POS_GLRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.POS_GLRowChanged != null)) {
                    this.POS_GLRowChanged(this, new POS_GLRowChangeEvent(((POS_GLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.POS_GLRowChanging != null)) {
                    this.POS_GLRowChanging(this, new POS_GLRowChangeEvent(((POS_GLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.POS_GLRowDeleted != null)) {
                    this.POS_GLRowDeleted(this, new POS_GLRowChangeEvent(((POS_GLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.POS_GLRowDeleting != null)) {
                    this.POS_GLRowDeleting(this, new POS_GLRowChangeEvent(((POS_GLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePOS_GLRow(POS_GLRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                POS_GL_ERP_TRANSFER_DTO ds = new POS_GL_ERP_TRANSFER_DTO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "POS_GLDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ERP_GLRow : global::System.Data.DataRow {
            
            private ERP_GLDataTable tableERP_GL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ERP_GLRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableERP_GL = ((ERP_GLDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MYNO {
                get {
                    return ((string)(this[this.tableERP_GL.MYNOColumn]));
                }
                set {
                    this[this.tableERP_GL.MYNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMPANYCODE {
                get {
                    return ((string)(this[this.tableERP_GL.COMPANYCODEColumn]));
                }
                set {
                    this[this.tableERP_GL.COMPANYCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IDENTIFIER {
                get {
                    try {
                        return ((string)(this[this.tableERP_GL.IDENTIFIERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ERP_GL\' 中資料行 \'IDENTIFIER\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableERP_GL.IDENTIFIERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BOOKSID {
                get {
                    try {
                        return ((string)(this[this.tableERP_GL.BOOKSIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ERP_GL\' 中資料行 \'BOOKSID\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableERP_GL.BOOKSIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ACCDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableERP_GL.ACCDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ERP_GL\' 中資料行 \'ACCDATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableERP_GL.ACCDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ACCTYPE {
                get {
                    try {
                        return ((string)(this[this.tableERP_GL.ACCTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ERP_GL\' 中資料行 \'ACCTYPE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableERP_GL.ACCTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GLCODE1 {
                get {
                    try {
                        return ((string)(this[this.tableERP_GL.GLCODE1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ERP_GL\' 中資料行 \'GLCODE1\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableERP_GL.GLCODE1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GLCODE2 {
                get {
                    try {
                        return ((string)(this[this.tableERP_GL.GLCODE2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ERP_GL\' 中資料行 \'GLCODE2\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableERP_GL.GLCODE2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GLCODE3 {
                get {
                    try {
                        return ((string)(this[this.tableERP_GL.GLCODE3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ERP_GL\' 中資料行 \'GLCODE3\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableERP_GL.GLCODE3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GLCODE4 {
                get {
                    try {
                        return ((string)(this[this.tableERP_GL.GLCODE4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ERP_GL\' 中資料行 \'GLCODE4\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableERP_GL.GLCODE4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GLCODE5 {
                get {
                    try {
                        return ((string)(this[this.tableERP_GL.GLCODE5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ERP_GL\' 中資料行 \'GLCODE5\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableERP_GL.GLCODE5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GLCODE6 {
                get {
                    try {
                        return ((string)(this[this.tableERP_GL.GLCODE6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ERP_GL\' 中資料行 \'GLCODE6\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableERP_GL.GLCODE6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AMOUNT {
                get {
                    try {
                        return ((decimal)(this[this.tableERP_GL.AMOUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ERP_GL\' 中資料行 \'AMOUNT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableERP_GL.AMOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DWNFLAG {
                get {
                    try {
                        return ((string)(this[this.tableERP_GL.DWNFLAGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ERP_GL\' 中資料行 \'DWNFLAG\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableERP_GL.DWNFLAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DWNDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableERP_GL.DWNDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ERP_GL\' 中資料行 \'DWNDATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableERP_GL.DWNDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDENTIFIERNull() {
                return this.IsNull(this.tableERP_GL.IDENTIFIERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDENTIFIERNull() {
                this[this.tableERP_GL.IDENTIFIERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBOOKSIDNull() {
                return this.IsNull(this.tableERP_GL.BOOKSIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBOOKSIDNull() {
                this[this.tableERP_GL.BOOKSIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsACCDATENull() {
                return this.IsNull(this.tableERP_GL.ACCDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetACCDATENull() {
                this[this.tableERP_GL.ACCDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsACCTYPENull() {
                return this.IsNull(this.tableERP_GL.ACCTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetACCTYPENull() {
                this[this.tableERP_GL.ACCTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGLCODE1Null() {
                return this.IsNull(this.tableERP_GL.GLCODE1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGLCODE1Null() {
                this[this.tableERP_GL.GLCODE1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGLCODE2Null() {
                return this.IsNull(this.tableERP_GL.GLCODE2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGLCODE2Null() {
                this[this.tableERP_GL.GLCODE2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGLCODE3Null() {
                return this.IsNull(this.tableERP_GL.GLCODE3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGLCODE3Null() {
                this[this.tableERP_GL.GLCODE3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGLCODE4Null() {
                return this.IsNull(this.tableERP_GL.GLCODE4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGLCODE4Null() {
                this[this.tableERP_GL.GLCODE4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGLCODE5Null() {
                return this.IsNull(this.tableERP_GL.GLCODE5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGLCODE5Null() {
                this[this.tableERP_GL.GLCODE5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGLCODE6Null() {
                return this.IsNull(this.tableERP_GL.GLCODE6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGLCODE6Null() {
                this[this.tableERP_GL.GLCODE6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAMOUNTNull() {
                return this.IsNull(this.tableERP_GL.AMOUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAMOUNTNull() {
                this[this.tableERP_GL.AMOUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDWNFLAGNull() {
                return this.IsNull(this.tableERP_GL.DWNFLAGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDWNFLAGNull() {
                this[this.tableERP_GL.DWNFLAGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDWNDATENull() {
                return this.IsNull(this.tableERP_GL.DWNDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDWNDATENull() {
                this[this.tableERP_GL.DWNDATEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class POS_GLRow : global::System.Data.DataRow {
            
            private POS_GLDataTable tablePOS_GL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal POS_GLRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePOS_GL = ((POS_GLDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string POS_GL_ID {
                get {
                    return ((string)(this[this.tablePOS_GL.POS_GL_IDColumn]));
                }
                set {
                    this[this.tablePOS_GL.POS_GL_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GL_DATE {
                get {
                    return ((string)(this[this.tablePOS_GL.GL_DATEColumn]));
                }
                set {
                    this[this.tablePOS_GL.GL_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STORE_NO {
                get {
                    return ((string)(this[this.tablePOS_GL.STORE_NOColumn]));
                }
                set {
                    this[this.tablePOS_GL.STORE_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMPANYCODE {
                get {
                    return ((string)(this[this.tablePOS_GL.COMPANYCODEColumn]));
                }
                set {
                    this[this.tablePOS_GL.COMPANYCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DRCR {
                get {
                    return ((string)(this[this.tablePOS_GL.DRCRColumn]));
                }
                set {
                    this[this.tablePOS_GL.DRCRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ACCOUNT_CODE {
                get {
                    return ((string)(this[this.tablePOS_GL.ACCOUNT_CODEColumn]));
                }
                set {
                    this[this.tablePOS_GL.ACCOUNT_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AMT {
                get {
                    return ((decimal)(this[this.tablePOS_GL.AMTColumn]));
                }
                set {
                    this[this.tablePOS_GL.AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string POSUUID_MASTER {
                get {
                    return ((string)(this[this.tablePOS_GL.POSUUID_MASTERColumn]));
                }
                set {
                    this[this.tablePOS_GL.POSUUID_MASTERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CC2ERP_FLAG {
                get {
                    return ((string)(this[this.tablePOS_GL.CC2ERP_FLAGColumn]));
                }
                set {
                    this[this.tablePOS_GL.CC2ERP_FLAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CC2ERP_ID {
                get {
                    try {
                        return ((string)(this[this.tablePOS_GL.CC2ERP_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'POS_GL\' 中資料行 \'CC2ERP_ID\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePOS_GL.CC2ERP_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CREATE_USER {
                get {
                    return ((string)(this[this.tablePOS_GL.CREATE_USERColumn]));
                }
                set {
                    this[this.tablePOS_GL.CREATE_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CC2ERP_DTM {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePOS_GL.CC2ERP_DTMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'POS_GL\' 中資料行 \'CC2ERP_DTM\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePOS_GL.CC2ERP_DTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CREATE_DTM {
                get {
                    return ((global::System.DateTime)(this[this.tablePOS_GL.CREATE_DTMColumn]));
                }
                set {
                    this[this.tablePOS_GL.CREATE_DTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODI_USER {
                get {
                    return ((string)(this[this.tablePOS_GL.MODI_USERColumn]));
                }
                set {
                    this[this.tablePOS_GL.MODI_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODI_DTM {
                get {
                    return ((global::System.DateTime)(this[this.tablePOS_GL.MODI_DTMColumn]));
                }
                set {
                    this[this.tablePOS_GL.MODI_DTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCC2ERP_IDNull() {
                return this.IsNull(this.tablePOS_GL.CC2ERP_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCC2ERP_IDNull() {
                this[this.tablePOS_GL.CC2ERP_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCC2ERP_DTMNull() {
                return this.IsNull(this.tablePOS_GL.CC2ERP_DTMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCC2ERP_DTMNull() {
                this[this.tablePOS_GL.CC2ERP_DTMColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ERP_GLRowChangeEvent : global::System.EventArgs {
            
            private ERP_GLRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ERP_GLRowChangeEvent(ERP_GLRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ERP_GLRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class POS_GLRowChangeEvent : global::System.EventArgs {
            
            private POS_GLRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POS_GLRowChangeEvent(POS_GLRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POS_GLRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace FET.POS.Model.DTO.ConvertApp.POS_GL_ERP_TRANSFER_DTOTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ERP_GLTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ERP_GLTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ERP_GL";
            tableMapping.ColumnMappings.Add("MYNO", "MYNO");
            tableMapping.ColumnMappings.Add("COMPANYCODE", "COMPANYCODE");
            tableMapping.ColumnMappings.Add("IDENTIFIER", "IDENTIFIER");
            tableMapping.ColumnMappings.Add("BOOKSID", "BOOKSID");
            tableMapping.ColumnMappings.Add("ACCDATE", "ACCDATE");
            tableMapping.ColumnMappings.Add("ACCTYPE", "ACCTYPE");
            tableMapping.ColumnMappings.Add("GLCODE1", "GLCODE1");
            tableMapping.ColumnMappings.Add("GLCODE2", "GLCODE2");
            tableMapping.ColumnMappings.Add("GLCODE3", "GLCODE3");
            tableMapping.ColumnMappings.Add("GLCODE4", "GLCODE4");
            tableMapping.ColumnMappings.Add("GLCODE5", "GLCODE5");
            tableMapping.ColumnMappings.Add("GLCODE6", "GLCODE6");
            tableMapping.ColumnMappings.Add("AMOUNT", "AMOUNT");
            tableMapping.ColumnMappings.Add("DWNFLAG", "DWNFLAG");
            tableMapping.ColumnMappings.Add("DWNDATE", "DWNDATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""WEBPOS"".""ERP_GL"" WHERE ((""MYNO"" = :Original_MYNO) AND (""COMPANYCODE"" = :Original_COMPANYCODE) AND ((:IsNull_IDENTIFIER = 1 AND ""IDENTIFIER"" IS NULL) OR (""IDENTIFIER"" = :Original_IDENTIFIER)) AND ((:IsNull_BOOKSID = 1 AND ""BOOKSID"" IS NULL) OR (""BOOKSID"" = :Original_BOOKSID)) AND ((:IsNull_ACCDATE = 1 AND ""ACCDATE"" IS NULL) OR (""ACCDATE"" = :Original_ACCDATE)) AND ((:IsNull_ACCTYPE = 1 AND ""ACCTYPE"" IS NULL) OR (""ACCTYPE"" = :Original_ACCTYPE)) AND ((:IsNull_GLCODE1 = 1 AND ""GLCODE1"" IS NULL) OR (""GLCODE1"" = :Original_GLCODE1)) AND ((:IsNull_GLCODE2 = 1 AND ""GLCODE2"" IS NULL) OR (""GLCODE2"" = :Original_GLCODE2)) AND ((:IsNull_GLCODE3 = 1 AND ""GLCODE3"" IS NULL) OR (""GLCODE3"" = :Original_GLCODE3)) AND ((:IsNull_GLCODE4 = 1 AND ""GLCODE4"" IS NULL) OR (""GLCODE4"" = :Original_GLCODE4)) AND ((:IsNull_GLCODE5 = 1 AND ""GLCODE5"" IS NULL) OR (""GLCODE5"" = :Original_GLCODE5)) AND ((:IsNull_GLCODE6 = 1 AND ""GLCODE6"" IS NULL) OR (""GLCODE6"" = :Original_GLCODE6)) AND ((:IsNull_AMOUNT = 1 AND ""AMOUNT"" IS NULL) OR (""AMOUNT"" = :Original_AMOUNT)) AND ((:IsNull_DWNFLAG = 1 AND ""DWNFLAG"" IS NULL) OR (""DWNFLAG"" = :Original_DWNFLAG)) AND ((:IsNull_DWNDATE = 1 AND ""DWNDATE"" IS NULL) OR (""DWNDATE"" = :Original_DWNDATE)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MYNO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MYNO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_COMPANYCODE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "COMPANYCODE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_IDENTIFIER", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "IDENTIFIER", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_IDENTIFIER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "IDENTIFIER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_BOOKSID", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "BOOKSID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_BOOKSID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "BOOKSID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_ACCDATE", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "ACCDATE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ACCDATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "ACCDATE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_ACCTYPE", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "ACCTYPE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ACCTYPE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ACCTYPE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_GLCODE1", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "GLCODE1", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_GLCODE1", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "GLCODE1", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_GLCODE2", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "GLCODE2", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_GLCODE2", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "GLCODE2", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_GLCODE3", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "GLCODE3", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_GLCODE3", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "GLCODE3", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_GLCODE4", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "GLCODE4", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_GLCODE4", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "GLCODE4", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_GLCODE5", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "GLCODE5", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_GLCODE5", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "GLCODE5", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_GLCODE6", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "GLCODE6", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_GLCODE6", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "GLCODE6", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_AMOUNT", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "AMOUNT", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_AMOUNT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "AMOUNT", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_DWNFLAG", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "DWNFLAG", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_DWNFLAG", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DWNFLAG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_DWNDATE", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "DWNDATE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_DWNDATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "DWNDATE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""WEBPOS"".""ERP_GL"" (""MYNO"", ""COMPANYCODE"", ""IDENTIFIER"", ""BOOKSID"", ""ACCDATE"", ""ACCTYPE"", ""GLCODE1"", ""GLCODE2"", ""GLCODE3"", ""GLCODE4"", ""GLCODE5"", ""GLCODE6"", ""AMOUNT"", ""DWNFLAG"", ""DWNDATE"") VALUES (:MYNO, :COMPANYCODE, :IDENTIFIER, :BOOKSID, :ACCDATE, :ACCTYPE, :GLCODE1, :GLCODE2, :GLCODE3, :GLCODE4, :GLCODE5, :GLCODE6, :AMOUNT, :DWNFLAG, :DWNDATE)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MYNO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MYNO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("COMPANYCODE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "COMPANYCODE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IDENTIFIER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "IDENTIFIER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BOOKSID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "BOOKSID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ACCDATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "ACCDATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ACCTYPE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ACCTYPE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GLCODE1", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "GLCODE1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GLCODE2", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "GLCODE2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GLCODE3", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "GLCODE3", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GLCODE4", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "GLCODE4", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GLCODE5", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "GLCODE5", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GLCODE6", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "GLCODE6", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("AMOUNT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "AMOUNT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DWNFLAG", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DWNFLAG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DWNDATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "DWNDATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE \"WEBPOS\".\"ERP_GL\" SET \"MYNO\" = :MYNO, \"COMPANYCODE\" = :COMPANYCODE, \"IDENT" +
                "IFIER\" = :IDENTIFIER, \"BOOKSID\" = :BOOKSID, \"ACCDATE\" = :ACCDATE, \"ACCTYPE\" = :A" +
                "CCTYPE, \"GLCODE1\" = :GLCODE1, \"GLCODE2\" = :GLCODE2, \"GLCODE3\" = :GLCODE3, \"GLCOD" +
                "E4\" = :GLCODE4, \"GLCODE5\" = :GLCODE5, \"GLCODE6\" = :GLCODE6, \"AMOUNT\" = :AMOUNT, " +
                "\"DWNFLAG\" = :DWNFLAG, \"DWNDATE\" = :DWNDATE WHERE ((\"MYNO\" = :Original_MYNO) AND " +
                "(\"COMPANYCODE\" = :Original_COMPANYCODE) AND ((:IsNull_IDENTIFIER = 1 AND \"IDENTI" +
                "FIER\" IS NULL) OR (\"IDENTIFIER\" = :Original_IDENTIFIER)) AND ((:IsNull_BOOKSID =" +
                " 1 AND \"BOOKSID\" IS NULL) OR (\"BOOKSID\" = :Original_BOOKSID)) AND ((:IsNull_ACCD" +
                "ATE = 1 AND \"ACCDATE\" IS NULL) OR (\"ACCDATE\" = :Original_ACCDATE)) AND ((:IsNull" +
                "_ACCTYPE = 1 AND \"ACCTYPE\" IS NULL) OR (\"ACCTYPE\" = :Original_ACCTYPE)) AND ((:I" +
                "sNull_GLCODE1 = 1 AND \"GLCODE1\" IS NULL) OR (\"GLCODE1\" = :Original_GLCODE1)) AND" +
                " ((:IsNull_GLCODE2 = 1 AND \"GLCODE2\" IS NULL) OR (\"GLCODE2\" = :Original_GLCODE2)" +
                ") AND ((:IsNull_GLCODE3 = 1 AND \"GLCODE3\" IS NULL) OR (\"GLCODE3\" = :Original_GLC" +
                "ODE3)) AND ((:IsNull_GLCODE4 = 1 AND \"GLCODE4\" IS NULL) OR (\"GLCODE4\" = :Origina" +
                "l_GLCODE4)) AND ((:IsNull_GLCODE5 = 1 AND \"GLCODE5\" IS NULL) OR (\"GLCODE5\" = :Or" +
                "iginal_GLCODE5)) AND ((:IsNull_GLCODE6 = 1 AND \"GLCODE6\" IS NULL) OR (\"GLCODE6\" " +
                "= :Original_GLCODE6)) AND ((:IsNull_AMOUNT = 1 AND \"AMOUNT\" IS NULL) OR (\"AMOUNT" +
                "\" = :Original_AMOUNT)) AND ((:IsNull_DWNFLAG = 1 AND \"DWNFLAG\" IS NULL) OR (\"DWN" +
                "FLAG\" = :Original_DWNFLAG)) AND ((:IsNull_DWNDATE = 1 AND \"DWNDATE\" IS NULL) OR " +
                "(\"DWNDATE\" = :Original_DWNDATE)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MYNO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MYNO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("COMPANYCODE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "COMPANYCODE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IDENTIFIER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "IDENTIFIER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BOOKSID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "BOOKSID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ACCDATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "ACCDATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ACCTYPE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ACCTYPE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GLCODE1", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "GLCODE1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GLCODE2", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "GLCODE2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GLCODE3", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "GLCODE3", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GLCODE4", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "GLCODE4", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GLCODE5", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "GLCODE5", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GLCODE6", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "GLCODE6", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("AMOUNT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "AMOUNT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DWNFLAG", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DWNFLAG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DWNDATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "DWNDATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MYNO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MYNO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_COMPANYCODE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "COMPANYCODE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_IDENTIFIER", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "IDENTIFIER", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_IDENTIFIER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "IDENTIFIER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_BOOKSID", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "BOOKSID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_BOOKSID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "BOOKSID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_ACCDATE", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "ACCDATE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ACCDATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "ACCDATE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_ACCTYPE", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "ACCTYPE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ACCTYPE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ACCTYPE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_GLCODE1", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "GLCODE1", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_GLCODE1", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "GLCODE1", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_GLCODE2", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "GLCODE2", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_GLCODE2", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "GLCODE2", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_GLCODE3", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "GLCODE3", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_GLCODE3", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "GLCODE3", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_GLCODE4", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "GLCODE4", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_GLCODE4", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "GLCODE4", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_GLCODE5", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "GLCODE5", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_GLCODE5", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "GLCODE5", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_GLCODE6", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "GLCODE6", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_GLCODE6", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "GLCODE6", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_AMOUNT", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "AMOUNT", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_AMOUNT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "AMOUNT", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_DWNFLAG", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "DWNFLAG", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_DWNFLAG", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DWNFLAG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_DWNDATE", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "DWNDATE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_DWNDATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "DWNDATE", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::FET.POS.Model.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MYNO, COMPANYCODE, IDENTIFIER, BOOKSID, ACCDATE, ACCTYPE, GLCODE1, GLCODE2" +
                ", GLCODE3, GLCODE4, GLCODE5, GLCODE6, AMOUNT, DWNFLAG, DWNDATE FROM WEBPOS.ERP_G" +
                "L";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POS_GL_ERP_TRANSFER_DTO.ERP_GLDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POS_GL_ERP_TRANSFER_DTO.ERP_GLDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POS_GL_ERP_TRANSFER_DTO.ERP_GLDataTable dataTable = new POS_GL_ERP_TRANSFER_DTO.ERP_GLDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POS_GL_ERP_TRANSFER_DTO.ERP_GLDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POS_GL_ERP_TRANSFER_DTO dataSet) {
            return this.Adapter.Update(dataSet, "ERP_GL");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_MYNO, string Original_COMPANYCODE, string Original_IDENTIFIER, string Original_BOOKSID, global::System.Nullable<global::System.DateTime> Original_ACCDATE, string Original_ACCTYPE, string Original_GLCODE1, string Original_GLCODE2, string Original_GLCODE3, string Original_GLCODE4, string Original_GLCODE5, string Original_GLCODE6, global::System.Nullable<decimal> Original_AMOUNT, string Original_DWNFLAG, global::System.Nullable<global::System.DateTime> Original_DWNDATE) {
            if ((Original_MYNO == null)) {
                throw new global::System.ArgumentNullException("Original_MYNO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_MYNO));
            }
            if ((Original_COMPANYCODE == null)) {
                throw new global::System.ArgumentNullException("Original_COMPANYCODE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_COMPANYCODE));
            }
            if ((Original_IDENTIFIER == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_IDENTIFIER));
            }
            if ((Original_BOOKSID == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_BOOKSID));
            }
            if ((Original_ACCDATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_ACCDATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_ACCTYPE == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_ACCTYPE));
            }
            if ((Original_GLCODE1 == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_GLCODE1));
            }
            if ((Original_GLCODE2 == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_GLCODE2));
            }
            if ((Original_GLCODE3 == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_GLCODE3));
            }
            if ((Original_GLCODE4 == null)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_GLCODE4));
            }
            if ((Original_GLCODE5 == null)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_GLCODE5));
            }
            if ((Original_GLCODE6 == null)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_GLCODE6));
            }
            if ((Original_AMOUNT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((decimal)(Original_AMOUNT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_DWNFLAG == null)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((string)(Original_DWNFLAG));
            }
            if ((Original_DWNDATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((System.DateTime)(Original_DWNDATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MYNO, string COMPANYCODE, string IDENTIFIER, string BOOKSID, global::System.Nullable<global::System.DateTime> ACCDATE, string ACCTYPE, string GLCODE1, string GLCODE2, string GLCODE3, string GLCODE4, string GLCODE5, string GLCODE6, global::System.Nullable<decimal> AMOUNT, string DWNFLAG, global::System.Nullable<global::System.DateTime> DWNDATE) {
            if ((MYNO == null)) {
                throw new global::System.ArgumentNullException("MYNO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MYNO));
            }
            if ((COMPANYCODE == null)) {
                throw new global::System.ArgumentNullException("COMPANYCODE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(COMPANYCODE));
            }
            if ((IDENTIFIER == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(IDENTIFIER));
            }
            if ((BOOKSID == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(BOOKSID));
            }
            if ((ACCDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(ACCDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((ACCTYPE == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(ACCTYPE));
            }
            if ((GLCODE1 == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(GLCODE1));
            }
            if ((GLCODE2 == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(GLCODE2));
            }
            if ((GLCODE3 == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(GLCODE3));
            }
            if ((GLCODE4 == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(GLCODE4));
            }
            if ((GLCODE5 == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(GLCODE5));
            }
            if ((GLCODE6 == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(GLCODE6));
            }
            if ((AMOUNT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(AMOUNT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((DWNFLAG == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(DWNFLAG));
            }
            if ((DWNDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(DWNDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string MYNO, 
                    string COMPANYCODE, 
                    string IDENTIFIER, 
                    string BOOKSID, 
                    global::System.Nullable<global::System.DateTime> ACCDATE, 
                    string ACCTYPE, 
                    string GLCODE1, 
                    string GLCODE2, 
                    string GLCODE3, 
                    string GLCODE4, 
                    string GLCODE5, 
                    string GLCODE6, 
                    global::System.Nullable<decimal> AMOUNT, 
                    string DWNFLAG, 
                    global::System.Nullable<global::System.DateTime> DWNDATE, 
                    string Original_MYNO, 
                    string Original_COMPANYCODE, 
                    string Original_IDENTIFIER, 
                    string Original_BOOKSID, 
                    global::System.Nullable<global::System.DateTime> Original_ACCDATE, 
                    string Original_ACCTYPE, 
                    string Original_GLCODE1, 
                    string Original_GLCODE2, 
                    string Original_GLCODE3, 
                    string Original_GLCODE4, 
                    string Original_GLCODE5, 
                    string Original_GLCODE6, 
                    global::System.Nullable<decimal> Original_AMOUNT, 
                    string Original_DWNFLAG, 
                    global::System.Nullable<global::System.DateTime> Original_DWNDATE) {
            if ((MYNO == null)) {
                throw new global::System.ArgumentNullException("MYNO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MYNO));
            }
            if ((COMPANYCODE == null)) {
                throw new global::System.ArgumentNullException("COMPANYCODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(COMPANYCODE));
            }
            if ((IDENTIFIER == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(IDENTIFIER));
            }
            if ((BOOKSID == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(BOOKSID));
            }
            if ((ACCDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(ACCDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((ACCTYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(ACCTYPE));
            }
            if ((GLCODE1 == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(GLCODE1));
            }
            if ((GLCODE2 == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(GLCODE2));
            }
            if ((GLCODE3 == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(GLCODE3));
            }
            if ((GLCODE4 == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(GLCODE4));
            }
            if ((GLCODE5 == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(GLCODE5));
            }
            if ((GLCODE6 == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(GLCODE6));
            }
            if ((AMOUNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(AMOUNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((DWNFLAG == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(DWNFLAG));
            }
            if ((DWNDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(DWNDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_MYNO == null)) {
                throw new global::System.ArgumentNullException("Original_MYNO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_MYNO));
            }
            if ((Original_COMPANYCODE == null)) {
                throw new global::System.ArgumentNullException("Original_COMPANYCODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_COMPANYCODE));
            }
            if ((Original_IDENTIFIER == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_IDENTIFIER));
            }
            if ((Original_BOOKSID == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_BOOKSID));
            }
            if ((Original_ACCDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((System.DateTime)(Original_ACCDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_ACCTYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_ACCTYPE));
            }
            if ((Original_GLCODE1 == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_GLCODE1));
            }
            if ((Original_GLCODE2 == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_GLCODE2));
            }
            if ((Original_GLCODE3 == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_GLCODE3));
            }
            if ((Original_GLCODE4 == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_GLCODE4));
            }
            if ((Original_GLCODE5 == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_GLCODE5));
            }
            if ((Original_GLCODE6 == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_GLCODE6));
            }
            if ((Original_AMOUNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((decimal)(Original_AMOUNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_DWNFLAG == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Original_DWNFLAG));
            }
            if ((Original_DWNDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((System.DateTime)(Original_DWNDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string IDENTIFIER, 
                    string BOOKSID, 
                    global::System.Nullable<global::System.DateTime> ACCDATE, 
                    string ACCTYPE, 
                    string GLCODE1, 
                    string GLCODE2, 
                    string GLCODE3, 
                    string GLCODE4, 
                    string GLCODE5, 
                    string GLCODE6, 
                    global::System.Nullable<decimal> AMOUNT, 
                    string DWNFLAG, 
                    global::System.Nullable<global::System.DateTime> DWNDATE, 
                    string Original_MYNO, 
                    string Original_COMPANYCODE, 
                    string Original_IDENTIFIER, 
                    string Original_BOOKSID, 
                    global::System.Nullable<global::System.DateTime> Original_ACCDATE, 
                    string Original_ACCTYPE, 
                    string Original_GLCODE1, 
                    string Original_GLCODE2, 
                    string Original_GLCODE3, 
                    string Original_GLCODE4, 
                    string Original_GLCODE5, 
                    string Original_GLCODE6, 
                    global::System.Nullable<decimal> Original_AMOUNT, 
                    string Original_DWNFLAG, 
                    global::System.Nullable<global::System.DateTime> Original_DWNDATE) {
            return this.Update(Original_MYNO, Original_COMPANYCODE, IDENTIFIER, BOOKSID, ACCDATE, ACCTYPE, GLCODE1, GLCODE2, GLCODE3, GLCODE4, GLCODE5, GLCODE6, AMOUNT, DWNFLAG, DWNDATE, Original_MYNO, Original_COMPANYCODE, Original_IDENTIFIER, Original_BOOKSID, Original_ACCDATE, Original_ACCTYPE, Original_GLCODE1, Original_GLCODE2, Original_GLCODE3, Original_GLCODE4, Original_GLCODE5, Original_GLCODE6, Original_AMOUNT, Original_DWNFLAG, Original_DWNDATE);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class POS_GLTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public POS_GLTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "POS_GL";
            tableMapping.ColumnMappings.Add("POS_GL_ID", "POS_GL_ID");
            tableMapping.ColumnMappings.Add("GL_DATE", "GL_DATE");
            tableMapping.ColumnMappings.Add("STORE_NO", "STORE_NO");
            tableMapping.ColumnMappings.Add("COMPANYCODE", "COMPANYCODE");
            tableMapping.ColumnMappings.Add("DRCR", "DRCR");
            tableMapping.ColumnMappings.Add("ACCOUNT_CODE", "ACCOUNT_CODE");
            tableMapping.ColumnMappings.Add("AMT", "AMT");
            tableMapping.ColumnMappings.Add("POSUUID_MASTER", "POSUUID_MASTER");
            tableMapping.ColumnMappings.Add("CC2ERP_FLAG", "CC2ERP_FLAG");
            tableMapping.ColumnMappings.Add("CC2ERP_ID", "CC2ERP_ID");
            tableMapping.ColumnMappings.Add("CREATE_USER", "CREATE_USER");
            tableMapping.ColumnMappings.Add("CC2ERP_DTM", "CC2ERP_DTM");
            tableMapping.ColumnMappings.Add("CREATE_DTM", "CREATE_DTM");
            tableMapping.ColumnMappings.Add("MODI_USER", "MODI_USER");
            tableMapping.ColumnMappings.Add("MODI_DTM", "MODI_DTM");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""WEBPOS"".""POS_GL"" WHERE ((""POS_GL_ID"" = :Original_POS_GL_ID) AND (""GL_DATE"" = :Original_GL_DATE) AND (""STORE_NO"" = :Original_STORE_NO) AND (""COMPANYCODE"" = :Original_COMPANYCODE) AND (""DRCR"" = :Original_DRCR) AND (""ACCOUNT_CODE"" = :Original_ACCOUNT_CODE) AND (""AMT"" = :Original_AMT) AND (""POSUUID_MASTER"" = :Original_POSUUID_MASTER) AND (""CC2ERP_FLAG"" = :Original_CC2ERP_FLAG) AND ((:IsNull_CC2ERP_ID = 1 AND ""CC2ERP_ID"" IS NULL) OR (""CC2ERP_ID"" = :Original_CC2ERP_ID)) AND (""CREATE_USER"" = :Original_CREATE_USER) AND ((:IsNull_CC2ERP_DTM = 1 AND ""CC2ERP_DTM"" IS NULL) OR (""CC2ERP_DTM"" = :Original_CC2ERP_DTM)) AND (""CREATE_DTM"" = :Original_CREATE_DTM) AND (""MODI_USER"" = :Original_MODI_USER) AND (""MODI_DTM"" = :Original_MODI_DTM))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_POS_GL_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "POS_GL_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_GL_DATE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "GL_DATE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_STORE_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "STORE_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_COMPANYCODE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "COMPANYCODE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_DRCR", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DRCR", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ACCOUNT_CODE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ACCOUNT_CODE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_AMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "AMT", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_POSUUID_MASTER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "POSUUID_MASTER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CC2ERP_FLAG", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CC2ERP_FLAG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_CC2ERP_ID", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "CC2ERP_ID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CC2ERP_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CC2ERP_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CREATE_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CREATE_USER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_CC2ERP_DTM", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "CC2ERP_DTM", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CC2ERP_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "CC2ERP_DTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CREATE_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "CREATE_DTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MODI_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MODI_USER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MODI_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "MODI_DTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""WEBPOS"".""POS_GL"" (""POS_GL_ID"", ""GL_DATE"", ""STORE_NO"", ""COMPANYCODE"", ""DRCR"", ""ACCOUNT_CODE"", ""AMT"", ""POSUUID_MASTER"", ""CC2ERP_FLAG"", ""CC2ERP_ID"", ""CREATE_USER"", ""CC2ERP_DTM"", ""CREATE_DTM"", ""MODI_USER"", ""MODI_DTM"") VALUES (:POS_GL_ID, :GL_DATE, :STORE_NO, :COMPANYCODE, :DRCR, :ACCOUNT_CODE, :AMT, :POSUUID_MASTER, :CC2ERP_FLAG, :CC2ERP_ID, :CREATE_USER, :CC2ERP_DTM, :CREATE_DTM, :MODI_USER, :MODI_DTM)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("POS_GL_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "POS_GL_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GL_DATE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "GL_DATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("STORE_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "STORE_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("COMPANYCODE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "COMPANYCODE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DRCR", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DRCR", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ACCOUNT_CODE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ACCOUNT_CODE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("AMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "AMT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("POSUUID_MASTER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "POSUUID_MASTER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CC2ERP_FLAG", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CC2ERP_FLAG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CC2ERP_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CC2ERP_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CREATE_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CREATE_USER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CC2ERP_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "CC2ERP_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CREATE_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "CREATE_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MODI_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MODI_USER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MODI_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "MODI_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""WEBPOS"".""POS_GL"" SET ""POS_GL_ID"" = :POS_GL_ID, ""GL_DATE"" = :GL_DATE, ""STORE_NO"" = :STORE_NO, ""COMPANYCODE"" = :COMPANYCODE, ""DRCR"" = :DRCR, ""ACCOUNT_CODE"" = :ACCOUNT_CODE, ""AMT"" = :AMT, ""POSUUID_MASTER"" = :POSUUID_MASTER, ""CC2ERP_FLAG"" = :CC2ERP_FLAG, ""CC2ERP_ID"" = :CC2ERP_ID, ""CREATE_USER"" = :CREATE_USER, ""CC2ERP_DTM"" = :CC2ERP_DTM, ""CREATE_DTM"" = :CREATE_DTM, ""MODI_USER"" = :MODI_USER, ""MODI_DTM"" = :MODI_DTM WHERE ((""POS_GL_ID"" = :Original_POS_GL_ID) AND (""GL_DATE"" = :Original_GL_DATE) AND (""STORE_NO"" = :Original_STORE_NO) AND (""COMPANYCODE"" = :Original_COMPANYCODE) AND (""DRCR"" = :Original_DRCR) AND (""ACCOUNT_CODE"" = :Original_ACCOUNT_CODE) AND (""AMT"" = :Original_AMT) AND (""POSUUID_MASTER"" = :Original_POSUUID_MASTER) AND (""CC2ERP_FLAG"" = :Original_CC2ERP_FLAG) AND ((:IsNull_CC2ERP_ID = 1 AND ""CC2ERP_ID"" IS NULL) OR (""CC2ERP_ID"" = :Original_CC2ERP_ID)) AND (""CREATE_USER"" = :Original_CREATE_USER) AND ((:IsNull_CC2ERP_DTM = 1 AND ""CC2ERP_DTM"" IS NULL) OR (""CC2ERP_DTM"" = :Original_CC2ERP_DTM)) AND (""CREATE_DTM"" = :Original_CREATE_DTM) AND (""MODI_USER"" = :Original_MODI_USER) AND (""MODI_DTM"" = :Original_MODI_DTM))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("POS_GL_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "POS_GL_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GL_DATE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "GL_DATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("STORE_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "STORE_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("COMPANYCODE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "COMPANYCODE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DRCR", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DRCR", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ACCOUNT_CODE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ACCOUNT_CODE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("AMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "AMT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("POSUUID_MASTER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "POSUUID_MASTER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CC2ERP_FLAG", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CC2ERP_FLAG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CC2ERP_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CC2ERP_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CREATE_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CREATE_USER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CC2ERP_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "CC2ERP_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CREATE_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "CREATE_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MODI_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MODI_USER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MODI_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "MODI_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_POS_GL_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "POS_GL_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_GL_DATE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "GL_DATE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_STORE_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "STORE_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_COMPANYCODE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "COMPANYCODE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_DRCR", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DRCR", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ACCOUNT_CODE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ACCOUNT_CODE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_AMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "AMT", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_POSUUID_MASTER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "POSUUID_MASTER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CC2ERP_FLAG", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CC2ERP_FLAG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_CC2ERP_ID", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "CC2ERP_ID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CC2ERP_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CC2ERP_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CREATE_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CREATE_USER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_CC2ERP_DTM", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "CC2ERP_DTM", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CC2ERP_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "CC2ERP_DTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CREATE_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "CREATE_DTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MODI_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MODI_USER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MODI_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "MODI_DTM", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::FET.POS.Model.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT POS_GL_ID, GL_DATE, STORE_NO, COMPANYCODE, DRCR, ACCOUNT_CODE, AMT, POSUUI" +
                "D_MASTER, CC2ERP_FLAG, CC2ERP_ID, CREATE_USER, CC2ERP_DTM, CREATE_DTM, MODI_USER" +
                ", MODI_DTM FROM WEBPOS.POS_GL";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POS_GL_ERP_TRANSFER_DTO.POS_GLDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POS_GL_ERP_TRANSFER_DTO.POS_GLDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POS_GL_ERP_TRANSFER_DTO.POS_GLDataTable dataTable = new POS_GL_ERP_TRANSFER_DTO.POS_GLDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POS_GL_ERP_TRANSFER_DTO.POS_GLDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POS_GL_ERP_TRANSFER_DTO dataSet) {
            return this.Adapter.Update(dataSet, "POS_GL");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_POS_GL_ID, string Original_GL_DATE, string Original_STORE_NO, string Original_COMPANYCODE, string Original_DRCR, string Original_ACCOUNT_CODE, decimal Original_AMT, string Original_POSUUID_MASTER, string Original_CC2ERP_FLAG, string Original_CC2ERP_ID, string Original_CREATE_USER, global::System.Nullable<global::System.DateTime> Original_CC2ERP_DTM, System.DateTime Original_CREATE_DTM, string Original_MODI_USER, System.DateTime Original_MODI_DTM) {
            if ((Original_POS_GL_ID == null)) {
                throw new global::System.ArgumentNullException("Original_POS_GL_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_POS_GL_ID));
            }
            if ((Original_GL_DATE == null)) {
                throw new global::System.ArgumentNullException("Original_GL_DATE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_GL_DATE));
            }
            if ((Original_STORE_NO == null)) {
                throw new global::System.ArgumentNullException("Original_STORE_NO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_STORE_NO));
            }
            if ((Original_COMPANYCODE == null)) {
                throw new global::System.ArgumentNullException("Original_COMPANYCODE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_COMPANYCODE));
            }
            if ((Original_DRCR == null)) {
                throw new global::System.ArgumentNullException("Original_DRCR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_DRCR));
            }
            if ((Original_ACCOUNT_CODE == null)) {
                throw new global::System.ArgumentNullException("Original_ACCOUNT_CODE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_ACCOUNT_CODE));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_AMT));
            if ((Original_POSUUID_MASTER == null)) {
                throw new global::System.ArgumentNullException("Original_POSUUID_MASTER");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_POSUUID_MASTER));
            }
            if ((Original_CC2ERP_FLAG == null)) {
                throw new global::System.ArgumentNullException("Original_CC2ERP_FLAG");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_CC2ERP_FLAG));
            }
            if ((Original_CC2ERP_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_CC2ERP_ID));
            }
            if ((Original_CREATE_USER == null)) {
                throw new global::System.ArgumentNullException("Original_CREATE_USER");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_CREATE_USER));
            }
            if ((Original_CC2ERP_DTM.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((System.DateTime)(Original_CC2ERP_DTM.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[14].Value = ((System.DateTime)(Original_CREATE_DTM));
            if ((Original_MODI_USER == null)) {
                throw new global::System.ArgumentNullException("Original_MODI_USER");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_MODI_USER));
            }
            this.Adapter.DeleteCommand.Parameters[16].Value = ((System.DateTime)(Original_MODI_DTM));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string POS_GL_ID, string GL_DATE, string STORE_NO, string COMPANYCODE, string DRCR, string ACCOUNT_CODE, decimal AMT, string POSUUID_MASTER, string CC2ERP_FLAG, string CC2ERP_ID, string CREATE_USER, global::System.Nullable<global::System.DateTime> CC2ERP_DTM, System.DateTime CREATE_DTM, string MODI_USER, System.DateTime MODI_DTM) {
            if ((POS_GL_ID == null)) {
                throw new global::System.ArgumentNullException("POS_GL_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(POS_GL_ID));
            }
            if ((GL_DATE == null)) {
                throw new global::System.ArgumentNullException("GL_DATE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(GL_DATE));
            }
            if ((STORE_NO == null)) {
                throw new global::System.ArgumentNullException("STORE_NO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(STORE_NO));
            }
            if ((COMPANYCODE == null)) {
                throw new global::System.ArgumentNullException("COMPANYCODE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(COMPANYCODE));
            }
            if ((DRCR == null)) {
                throw new global::System.ArgumentNullException("DRCR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(DRCR));
            }
            if ((ACCOUNT_CODE == null)) {
                throw new global::System.ArgumentNullException("ACCOUNT_CODE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(ACCOUNT_CODE));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(AMT));
            if ((POSUUID_MASTER == null)) {
                throw new global::System.ArgumentNullException("POSUUID_MASTER");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(POSUUID_MASTER));
            }
            if ((CC2ERP_FLAG == null)) {
                throw new global::System.ArgumentNullException("CC2ERP_FLAG");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(CC2ERP_FLAG));
            }
            if ((CC2ERP_ID == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(CC2ERP_ID));
            }
            if ((CREATE_USER == null)) {
                throw new global::System.ArgumentNullException("CREATE_USER");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(CREATE_USER));
            }
            if ((CC2ERP_DTM.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(CC2ERP_DTM.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[12].Value = ((System.DateTime)(CREATE_DTM));
            if ((MODI_USER == null)) {
                throw new global::System.ArgumentNullException("MODI_USER");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(MODI_USER));
            }
            this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(MODI_DTM));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string POS_GL_ID, 
                    string GL_DATE, 
                    string STORE_NO, 
                    string COMPANYCODE, 
                    string DRCR, 
                    string ACCOUNT_CODE, 
                    decimal AMT, 
                    string POSUUID_MASTER, 
                    string CC2ERP_FLAG, 
                    string CC2ERP_ID, 
                    string CREATE_USER, 
                    global::System.Nullable<global::System.DateTime> CC2ERP_DTM, 
                    System.DateTime CREATE_DTM, 
                    string MODI_USER, 
                    System.DateTime MODI_DTM, 
                    string Original_POS_GL_ID, 
                    string Original_GL_DATE, 
                    string Original_STORE_NO, 
                    string Original_COMPANYCODE, 
                    string Original_DRCR, 
                    string Original_ACCOUNT_CODE, 
                    decimal Original_AMT, 
                    string Original_POSUUID_MASTER, 
                    string Original_CC2ERP_FLAG, 
                    string Original_CC2ERP_ID, 
                    string Original_CREATE_USER, 
                    global::System.Nullable<global::System.DateTime> Original_CC2ERP_DTM, 
                    System.DateTime Original_CREATE_DTM, 
                    string Original_MODI_USER, 
                    System.DateTime Original_MODI_DTM) {
            if ((POS_GL_ID == null)) {
                throw new global::System.ArgumentNullException("POS_GL_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(POS_GL_ID));
            }
            if ((GL_DATE == null)) {
                throw new global::System.ArgumentNullException("GL_DATE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(GL_DATE));
            }
            if ((STORE_NO == null)) {
                throw new global::System.ArgumentNullException("STORE_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(STORE_NO));
            }
            if ((COMPANYCODE == null)) {
                throw new global::System.ArgumentNullException("COMPANYCODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(COMPANYCODE));
            }
            if ((DRCR == null)) {
                throw new global::System.ArgumentNullException("DRCR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(DRCR));
            }
            if ((ACCOUNT_CODE == null)) {
                throw new global::System.ArgumentNullException("ACCOUNT_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(ACCOUNT_CODE));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(AMT));
            if ((POSUUID_MASTER == null)) {
                throw new global::System.ArgumentNullException("POSUUID_MASTER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(POSUUID_MASTER));
            }
            if ((CC2ERP_FLAG == null)) {
                throw new global::System.ArgumentNullException("CC2ERP_FLAG");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(CC2ERP_FLAG));
            }
            if ((CC2ERP_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(CC2ERP_ID));
            }
            if ((CREATE_USER == null)) {
                throw new global::System.ArgumentNullException("CREATE_USER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(CREATE_USER));
            }
            if ((CC2ERP_DTM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(CC2ERP_DTM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(CREATE_DTM));
            if ((MODI_USER == null)) {
                throw new global::System.ArgumentNullException("MODI_USER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(MODI_USER));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(MODI_DTM));
            if ((Original_POS_GL_ID == null)) {
                throw new global::System.ArgumentNullException("Original_POS_GL_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_POS_GL_ID));
            }
            if ((Original_GL_DATE == null)) {
                throw new global::System.ArgumentNullException("Original_GL_DATE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_GL_DATE));
            }
            if ((Original_STORE_NO == null)) {
                throw new global::System.ArgumentNullException("Original_STORE_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_STORE_NO));
            }
            if ((Original_COMPANYCODE == null)) {
                throw new global::System.ArgumentNullException("Original_COMPANYCODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_COMPANYCODE));
            }
            if ((Original_DRCR == null)) {
                throw new global::System.ArgumentNullException("Original_DRCR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_DRCR));
            }
            if ((Original_ACCOUNT_CODE == null)) {
                throw new global::System.ArgumentNullException("Original_ACCOUNT_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_ACCOUNT_CODE));
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(Original_AMT));
            if ((Original_POSUUID_MASTER == null)) {
                throw new global::System.ArgumentNullException("Original_POSUUID_MASTER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_POSUUID_MASTER));
            }
            if ((Original_CC2ERP_FLAG == null)) {
                throw new global::System.ArgumentNullException("Original_CC2ERP_FLAG");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_CC2ERP_FLAG));
            }
            if ((Original_CC2ERP_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_CC2ERP_ID));
            }
            if ((Original_CREATE_USER == null)) {
                throw new global::System.ArgumentNullException("Original_CREATE_USER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_CREATE_USER));
            }
            if ((Original_CC2ERP_DTM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((System.DateTime)(Original_CC2ERP_DTM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[29].Value = ((System.DateTime)(Original_CREATE_DTM));
            if ((Original_MODI_USER == null)) {
                throw new global::System.ArgumentNullException("Original_MODI_USER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_MODI_USER));
            }
            this.Adapter.UpdateCommand.Parameters[31].Value = ((System.DateTime)(Original_MODI_DTM));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string GL_DATE, 
                    string STORE_NO, 
                    string COMPANYCODE, 
                    string DRCR, 
                    string ACCOUNT_CODE, 
                    decimal AMT, 
                    string POSUUID_MASTER, 
                    string CC2ERP_FLAG, 
                    string CC2ERP_ID, 
                    string CREATE_USER, 
                    global::System.Nullable<global::System.DateTime> CC2ERP_DTM, 
                    System.DateTime CREATE_DTM, 
                    string MODI_USER, 
                    System.DateTime MODI_DTM, 
                    string Original_POS_GL_ID, 
                    string Original_GL_DATE, 
                    string Original_STORE_NO, 
                    string Original_COMPANYCODE, 
                    string Original_DRCR, 
                    string Original_ACCOUNT_CODE, 
                    decimal Original_AMT, 
                    string Original_POSUUID_MASTER, 
                    string Original_CC2ERP_FLAG, 
                    string Original_CC2ERP_ID, 
                    string Original_CREATE_USER, 
                    global::System.Nullable<global::System.DateTime> Original_CC2ERP_DTM, 
                    System.DateTime Original_CREATE_DTM, 
                    string Original_MODI_USER, 
                    System.DateTime Original_MODI_DTM) {
            return this.Update(Original_POS_GL_ID, GL_DATE, STORE_NO, COMPANYCODE, DRCR, ACCOUNT_CODE, AMT, POSUUID_MASTER, CC2ERP_FLAG, CC2ERP_ID, CREATE_USER, CC2ERP_DTM, CREATE_DTM, MODI_USER, MODI_DTM, Original_POS_GL_ID, Original_GL_DATE, Original_STORE_NO, Original_COMPANYCODE, Original_DRCR, Original_ACCOUNT_CODE, Original_AMT, Original_POSUUID_MASTER, Original_CC2ERP_FLAG, Original_CC2ERP_ID, Original_CREATE_USER, Original_CC2ERP_DTM, Original_CREATE_DTM, Original_MODI_USER, Original_MODI_DTM);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private ERP_GLTableAdapter _eRP_GLTableAdapter;
        
        private POS_GLTableAdapter _pOS_GLTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public ERP_GLTableAdapter ERP_GLTableAdapter {
            get {
                return this._eRP_GLTableAdapter;
            }
            set {
                this._eRP_GLTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public POS_GLTableAdapter POS_GLTableAdapter {
            get {
                return this._pOS_GLTableAdapter;
            }
            set {
                this._pOS_GLTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._eRP_GLTableAdapter != null) 
                            && (this._eRP_GLTableAdapter.Connection != null))) {
                    return this._eRP_GLTableAdapter.Connection;
                }
                if (((this._pOS_GLTableAdapter != null) 
                            && (this._pOS_GLTableAdapter.Connection != null))) {
                    return this._pOS_GLTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._eRP_GLTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._pOS_GLTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(POS_GL_ERP_TRANSFER_DTO dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._pOS_GLTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.POS_GL.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._pOS_GLTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._eRP_GLTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ERP_GL.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._eRP_GLTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(POS_GL_ERP_TRANSFER_DTO dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._pOS_GLTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.POS_GL.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._pOS_GLTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._eRP_GLTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ERP_GL.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._eRP_GLTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(POS_GL_ERP_TRANSFER_DTO dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._eRP_GLTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ERP_GL.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._eRP_GLTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._pOS_GLTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.POS_GL.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._pOS_GLTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(POS_GL_ERP_TRANSFER_DTO dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._eRP_GLTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._eRP_GLTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._pOS_GLTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._pOS_GLTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager 未包含連接資訊。請將每個 TableAdapterManager 的 TableAdapter 屬性設成有效的 Table" +
                        "Adapter 執行個體。");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("無法開始交易。目前的資料連接不支援交易或是目前的狀態不允許交易開始。");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._eRP_GLTableAdapter != null)) {
                    revertConnections.Add(this._eRP_GLTableAdapter, this._eRP_GLTableAdapter.Connection);
                    this._eRP_GLTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(workConnection));
                    this._eRP_GLTableAdapter.Transaction = ((global::System.Data.OracleClient.OracleTransaction)(workTransaction));
                    if (this._eRP_GLTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._eRP_GLTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._eRP_GLTableAdapter.Adapter);
                    }
                }
                if ((this._pOS_GLTableAdapter != null)) {
                    revertConnections.Add(this._pOS_GLTableAdapter, this._pOS_GLTableAdapter.Connection);
                    this._pOS_GLTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(workConnection));
                    this._pOS_GLTableAdapter.Transaction = ((global::System.Data.OracleClient.OracleTransaction)(workTransaction));
                    if (this._pOS_GLTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._pOS_GLTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._pOS_GLTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._eRP_GLTableAdapter != null)) {
                    this._eRP_GLTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(revertConnections[this._eRP_GLTableAdapter]));
                    this._eRP_GLTableAdapter.Transaction = null;
                }
                if ((this._pOS_GLTableAdapter != null)) {
                    this._pOS_GLTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(revertConnections[this._pOS_GLTableAdapter]));
                    this._pOS_GLTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591