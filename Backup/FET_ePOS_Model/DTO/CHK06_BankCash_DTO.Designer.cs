//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:2.0.50727.4206
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace FET.POS.Model.DTO {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("CHK06_BankCash_DTO")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class CHK06_BankCash_DTO : global::System.Data.DataSet {
        
        private UPLOAD_TEMPDataTable tableUPLOAD_TEMP;
        
        private BANK_CASH_DETAILDataTable tableBANK_CASH_DETAIL;
        
        private BANK_CASH_DETAIL_TEMPDataTable tableBANK_CASH_DETAIL_TEMP;
        
        private BANK_CASH_MASTER_TEMPDataTable tableBANK_CASH_MASTER_TEMP;
        
        private BANK_CASH_MASTERDataTable tableBANK_CASH_MASTER;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CHK06_BankCash_DTO() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected CHK06_BankCash_DTO(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["UPLOAD_TEMP"] != null)) {
                    base.Tables.Add(new UPLOAD_TEMPDataTable(ds.Tables["UPLOAD_TEMP"]));
                }
                if ((ds.Tables["BANK_CASH_DETAIL"] != null)) {
                    base.Tables.Add(new BANK_CASH_DETAILDataTable(ds.Tables["BANK_CASH_DETAIL"]));
                }
                if ((ds.Tables["BANK_CASH_DETAIL_TEMP"] != null)) {
                    base.Tables.Add(new BANK_CASH_DETAIL_TEMPDataTable(ds.Tables["BANK_CASH_DETAIL_TEMP"]));
                }
                if ((ds.Tables["BANK_CASH_MASTER_TEMP"] != null)) {
                    base.Tables.Add(new BANK_CASH_MASTER_TEMPDataTable(ds.Tables["BANK_CASH_MASTER_TEMP"]));
                }
                if ((ds.Tables["BANK_CASH_MASTER"] != null)) {
                    base.Tables.Add(new BANK_CASH_MASTERDataTable(ds.Tables["BANK_CASH_MASTER"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UPLOAD_TEMPDataTable UPLOAD_TEMP {
            get {
                return this.tableUPLOAD_TEMP;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BANK_CASH_DETAILDataTable BANK_CASH_DETAIL {
            get {
                return this.tableBANK_CASH_DETAIL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BANK_CASH_DETAIL_TEMPDataTable BANK_CASH_DETAIL_TEMP {
            get {
                return this.tableBANK_CASH_DETAIL_TEMP;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BANK_CASH_MASTER_TEMPDataTable BANK_CASH_MASTER_TEMP {
            get {
                return this.tableBANK_CASH_MASTER_TEMP;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BANK_CASH_MASTERDataTable BANK_CASH_MASTER {
            get {
                return this.tableBANK_CASH_MASTER;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            CHK06_BankCash_DTO cln = ((CHK06_BankCash_DTO)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["UPLOAD_TEMP"] != null)) {
                    base.Tables.Add(new UPLOAD_TEMPDataTable(ds.Tables["UPLOAD_TEMP"]));
                }
                if ((ds.Tables["BANK_CASH_DETAIL"] != null)) {
                    base.Tables.Add(new BANK_CASH_DETAILDataTable(ds.Tables["BANK_CASH_DETAIL"]));
                }
                if ((ds.Tables["BANK_CASH_DETAIL_TEMP"] != null)) {
                    base.Tables.Add(new BANK_CASH_DETAIL_TEMPDataTable(ds.Tables["BANK_CASH_DETAIL_TEMP"]));
                }
                if ((ds.Tables["BANK_CASH_MASTER_TEMP"] != null)) {
                    base.Tables.Add(new BANK_CASH_MASTER_TEMPDataTable(ds.Tables["BANK_CASH_MASTER_TEMP"]));
                }
                if ((ds.Tables["BANK_CASH_MASTER"] != null)) {
                    base.Tables.Add(new BANK_CASH_MASTERDataTable(ds.Tables["BANK_CASH_MASTER"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableUPLOAD_TEMP = ((UPLOAD_TEMPDataTable)(base.Tables["UPLOAD_TEMP"]));
            if ((initTable == true)) {
                if ((this.tableUPLOAD_TEMP != null)) {
                    this.tableUPLOAD_TEMP.InitVars();
                }
            }
            this.tableBANK_CASH_DETAIL = ((BANK_CASH_DETAILDataTable)(base.Tables["BANK_CASH_DETAIL"]));
            if ((initTable == true)) {
                if ((this.tableBANK_CASH_DETAIL != null)) {
                    this.tableBANK_CASH_DETAIL.InitVars();
                }
            }
            this.tableBANK_CASH_DETAIL_TEMP = ((BANK_CASH_DETAIL_TEMPDataTable)(base.Tables["BANK_CASH_DETAIL_TEMP"]));
            if ((initTable == true)) {
                if ((this.tableBANK_CASH_DETAIL_TEMP != null)) {
                    this.tableBANK_CASH_DETAIL_TEMP.InitVars();
                }
            }
            this.tableBANK_CASH_MASTER_TEMP = ((BANK_CASH_MASTER_TEMPDataTable)(base.Tables["BANK_CASH_MASTER_TEMP"]));
            if ((initTable == true)) {
                if ((this.tableBANK_CASH_MASTER_TEMP != null)) {
                    this.tableBANK_CASH_MASTER_TEMP.InitVars();
                }
            }
            this.tableBANK_CASH_MASTER = ((BANK_CASH_MASTERDataTable)(base.Tables["BANK_CASH_MASTER"]));
            if ((initTable == true)) {
                if ((this.tableBANK_CASH_MASTER != null)) {
                    this.tableBANK_CASH_MASTER.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "CHK06_BankCash_DTO";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/CHK06_BankCash_DTO.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableUPLOAD_TEMP = new UPLOAD_TEMPDataTable();
            base.Tables.Add(this.tableUPLOAD_TEMP);
            this.tableBANK_CASH_DETAIL = new BANK_CASH_DETAILDataTable();
            base.Tables.Add(this.tableBANK_CASH_DETAIL);
            this.tableBANK_CASH_DETAIL_TEMP = new BANK_CASH_DETAIL_TEMPDataTable();
            base.Tables.Add(this.tableBANK_CASH_DETAIL_TEMP);
            this.tableBANK_CASH_MASTER_TEMP = new BANK_CASH_MASTER_TEMPDataTable();
            base.Tables.Add(this.tableBANK_CASH_MASTER_TEMP);
            this.tableBANK_CASH_MASTER = new BANK_CASH_MASTERDataTable();
            base.Tables.Add(this.tableBANK_CASH_MASTER);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeUPLOAD_TEMP() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeBANK_CASH_DETAIL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeBANK_CASH_DETAIL_TEMP() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeBANK_CASH_MASTER_TEMP() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeBANK_CASH_MASTER() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            CHK06_BankCash_DTO ds = new CHK06_BankCash_DTO();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void UPLOAD_TEMPRowChangeEventHandler(object sender, UPLOAD_TEMPRowChangeEvent e);
        
        public delegate void BANK_CASH_DETAILRowChangeEventHandler(object sender, BANK_CASH_DETAILRowChangeEvent e);
        
        public delegate void BANK_CASH_DETAIL_TEMPRowChangeEventHandler(object sender, BANK_CASH_DETAIL_TEMPRowChangeEvent e);
        
        public delegate void BANK_CASH_MASTER_TEMPRowChangeEventHandler(object sender, BANK_CASH_MASTER_TEMPRowChangeEvent e);
        
        public delegate void BANK_CASH_MASTERRowChangeEventHandler(object sender, BANK_CASH_MASTERRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UPLOAD_TEMPDataTable : global::System.Data.TypedTableBase<UPLOAD_TEMPRow> {
            
            private global::System.Data.DataColumn columnBATCH_NO;
            
            private global::System.Data.DataColumn columnUSER_ID;
            
            private global::System.Data.DataColumn columnFINC_ID;
            
            private global::System.Data.DataColumn columnSTATUS;
            
            private global::System.Data.DataColumn columnF1;
            
            private global::System.Data.DataColumn columnF2;
            
            private global::System.Data.DataColumn columnF3;
            
            private global::System.Data.DataColumn columnF4;
            
            private global::System.Data.DataColumn columnF5;
            
            private global::System.Data.DataColumn columnF6;
            
            private global::System.Data.DataColumn columnF7;
            
            private global::System.Data.DataColumn columnF8;
            
            private global::System.Data.DataColumn columnF9;
            
            private global::System.Data.DataColumn columnF10;
            
            private global::System.Data.DataColumn columnF11;
            
            private global::System.Data.DataColumn columnF12;
            
            private global::System.Data.DataColumn columnF13;
            
            private global::System.Data.DataColumn columnF14;
            
            private global::System.Data.DataColumn columnF15;
            
            private global::System.Data.DataColumn columnF16;
            
            private global::System.Data.DataColumn columnF17;
            
            private global::System.Data.DataColumn columnF18;
            
            private global::System.Data.DataColumn columnF19;
            
            private global::System.Data.DataColumn columnF20;
            
            private global::System.Data.DataColumn columnF21;
            
            private global::System.Data.DataColumn columnF22;
            
            private global::System.Data.DataColumn columnF23;
            
            private global::System.Data.DataColumn columnF24;
            
            private global::System.Data.DataColumn columnF25;
            
            private global::System.Data.DataColumn columnF26;
            
            private global::System.Data.DataColumn columnF27;
            
            private global::System.Data.DataColumn columnF28;
            
            private global::System.Data.DataColumn columnF29;
            
            private global::System.Data.DataColumn columnF30;
            
            private global::System.Data.DataColumn columnSID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UPLOAD_TEMPDataTable() {
                this.TableName = "UPLOAD_TEMP";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UPLOAD_TEMPDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected UPLOAD_TEMPDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BATCH_NOColumn {
                get {
                    return this.columnBATCH_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USER_IDColumn {
                get {
                    return this.columnUSER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FINC_IDColumn {
                get {
                    return this.columnFINC_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STATUSColumn {
                get {
                    return this.columnSTATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F1Column {
                get {
                    return this.columnF1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F2Column {
                get {
                    return this.columnF2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F3Column {
                get {
                    return this.columnF3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F4Column {
                get {
                    return this.columnF4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F5Column {
                get {
                    return this.columnF5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F6Column {
                get {
                    return this.columnF6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F7Column {
                get {
                    return this.columnF7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F8Column {
                get {
                    return this.columnF8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F9Column {
                get {
                    return this.columnF9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F10Column {
                get {
                    return this.columnF10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F11Column {
                get {
                    return this.columnF11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F12Column {
                get {
                    return this.columnF12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F13Column {
                get {
                    return this.columnF13;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F14Column {
                get {
                    return this.columnF14;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F15Column {
                get {
                    return this.columnF15;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F16Column {
                get {
                    return this.columnF16;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F17Column {
                get {
                    return this.columnF17;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F18Column {
                get {
                    return this.columnF18;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F19Column {
                get {
                    return this.columnF19;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F20Column {
                get {
                    return this.columnF20;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F21Column {
                get {
                    return this.columnF21;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F22Column {
                get {
                    return this.columnF22;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F23Column {
                get {
                    return this.columnF23;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F24Column {
                get {
                    return this.columnF24;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F25Column {
                get {
                    return this.columnF25;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F26Column {
                get {
                    return this.columnF26;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F27Column {
                get {
                    return this.columnF27;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F28Column {
                get {
                    return this.columnF28;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F29Column {
                get {
                    return this.columnF29;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F30Column {
                get {
                    return this.columnF30;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SIDColumn {
                get {
                    return this.columnSID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UPLOAD_TEMPRow this[int index] {
                get {
                    return ((UPLOAD_TEMPRow)(this.Rows[index]));
                }
            }
            
            public event UPLOAD_TEMPRowChangeEventHandler UPLOAD_TEMPRowChanging;
            
            public event UPLOAD_TEMPRowChangeEventHandler UPLOAD_TEMPRowChanged;
            
            public event UPLOAD_TEMPRowChangeEventHandler UPLOAD_TEMPRowDeleting;
            
            public event UPLOAD_TEMPRowChangeEventHandler UPLOAD_TEMPRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddUPLOAD_TEMPRow(UPLOAD_TEMPRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UPLOAD_TEMPRow AddUPLOAD_TEMPRow(
                        string BATCH_NO, 
                        string USER_ID, 
                        string FINC_ID, 
                        string STATUS, 
                        string F1, 
                        string F2, 
                        string F3, 
                        string F4, 
                        string F5, 
                        string F6, 
                        string F7, 
                        string F8, 
                        string F9, 
                        string F10, 
                        string F11, 
                        string F12, 
                        string F13, 
                        string F14, 
                        string F15, 
                        string F16, 
                        string F17, 
                        string F18, 
                        string F19, 
                        string F20, 
                        string F21, 
                        string F22, 
                        string F23, 
                        string F24, 
                        string F25, 
                        string F26, 
                        string F27, 
                        string F28, 
                        string F29, 
                        string F30, 
                        string SID) {
                UPLOAD_TEMPRow rowUPLOAD_TEMPRow = ((UPLOAD_TEMPRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BATCH_NO,
                        USER_ID,
                        FINC_ID,
                        STATUS,
                        F1,
                        F2,
                        F3,
                        F4,
                        F5,
                        F6,
                        F7,
                        F8,
                        F9,
                        F10,
                        F11,
                        F12,
                        F13,
                        F14,
                        F15,
                        F16,
                        F17,
                        F18,
                        F19,
                        F20,
                        F21,
                        F22,
                        F23,
                        F24,
                        F25,
                        F26,
                        F27,
                        F28,
                        F29,
                        F30,
                        SID};
                rowUPLOAD_TEMPRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUPLOAD_TEMPRow);
                return rowUPLOAD_TEMPRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                UPLOAD_TEMPDataTable cln = ((UPLOAD_TEMPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new UPLOAD_TEMPDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBATCH_NO = base.Columns["BATCH_NO"];
                this.columnUSER_ID = base.Columns["USER_ID"];
                this.columnFINC_ID = base.Columns["FINC_ID"];
                this.columnSTATUS = base.Columns["STATUS"];
                this.columnF1 = base.Columns["F1"];
                this.columnF2 = base.Columns["F2"];
                this.columnF3 = base.Columns["F3"];
                this.columnF4 = base.Columns["F4"];
                this.columnF5 = base.Columns["F5"];
                this.columnF6 = base.Columns["F6"];
                this.columnF7 = base.Columns["F7"];
                this.columnF8 = base.Columns["F8"];
                this.columnF9 = base.Columns["F9"];
                this.columnF10 = base.Columns["F10"];
                this.columnF11 = base.Columns["F11"];
                this.columnF12 = base.Columns["F12"];
                this.columnF13 = base.Columns["F13"];
                this.columnF14 = base.Columns["F14"];
                this.columnF15 = base.Columns["F15"];
                this.columnF16 = base.Columns["F16"];
                this.columnF17 = base.Columns["F17"];
                this.columnF18 = base.Columns["F18"];
                this.columnF19 = base.Columns["F19"];
                this.columnF20 = base.Columns["F20"];
                this.columnF21 = base.Columns["F21"];
                this.columnF22 = base.Columns["F22"];
                this.columnF23 = base.Columns["F23"];
                this.columnF24 = base.Columns["F24"];
                this.columnF25 = base.Columns["F25"];
                this.columnF26 = base.Columns["F26"];
                this.columnF27 = base.Columns["F27"];
                this.columnF28 = base.Columns["F28"];
                this.columnF29 = base.Columns["F29"];
                this.columnF30 = base.Columns["F30"];
                this.columnSID = base.Columns["SID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBATCH_NO = new global::System.Data.DataColumn("BATCH_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBATCH_NO);
                this.columnUSER_ID = new global::System.Data.DataColumn("USER_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_ID);
                this.columnFINC_ID = new global::System.Data.DataColumn("FINC_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFINC_ID);
                this.columnSTATUS = new global::System.Data.DataColumn("STATUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATUS);
                this.columnF1 = new global::System.Data.DataColumn("F1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF1);
                this.columnF2 = new global::System.Data.DataColumn("F2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF2);
                this.columnF3 = new global::System.Data.DataColumn("F3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF3);
                this.columnF4 = new global::System.Data.DataColumn("F4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF4);
                this.columnF5 = new global::System.Data.DataColumn("F5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF5);
                this.columnF6 = new global::System.Data.DataColumn("F6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF6);
                this.columnF7 = new global::System.Data.DataColumn("F7", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF7);
                this.columnF8 = new global::System.Data.DataColumn("F8", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF8);
                this.columnF9 = new global::System.Data.DataColumn("F9", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF9);
                this.columnF10 = new global::System.Data.DataColumn("F10", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF10);
                this.columnF11 = new global::System.Data.DataColumn("F11", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF11);
                this.columnF12 = new global::System.Data.DataColumn("F12", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF12);
                this.columnF13 = new global::System.Data.DataColumn("F13", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF13);
                this.columnF14 = new global::System.Data.DataColumn("F14", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF14);
                this.columnF15 = new global::System.Data.DataColumn("F15", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF15);
                this.columnF16 = new global::System.Data.DataColumn("F16", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF16);
                this.columnF17 = new global::System.Data.DataColumn("F17", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF17);
                this.columnF18 = new global::System.Data.DataColumn("F18", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF18);
                this.columnF19 = new global::System.Data.DataColumn("F19", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF19);
                this.columnF20 = new global::System.Data.DataColumn("F20", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF20);
                this.columnF21 = new global::System.Data.DataColumn("F21", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF21);
                this.columnF22 = new global::System.Data.DataColumn("F22", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF22);
                this.columnF23 = new global::System.Data.DataColumn("F23", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF23);
                this.columnF24 = new global::System.Data.DataColumn("F24", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF24);
                this.columnF25 = new global::System.Data.DataColumn("F25", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF25);
                this.columnF26 = new global::System.Data.DataColumn("F26", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF26);
                this.columnF27 = new global::System.Data.DataColumn("F27", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF27);
                this.columnF28 = new global::System.Data.DataColumn("F28", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF28);
                this.columnF29 = new global::System.Data.DataColumn("F29", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF29);
                this.columnF30 = new global::System.Data.DataColumn("F30", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF30);
                this.columnSID = new global::System.Data.DataColumn("SID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSID);
                this.columnBATCH_NO.AllowDBNull = false;
                this.columnBATCH_NO.MaxLength = 32;
                this.columnUSER_ID.AllowDBNull = false;
                this.columnUSER_ID.MaxLength = 20;
                this.columnFINC_ID.AllowDBNull = false;
                this.columnFINC_ID.MaxLength = 20;
                this.columnSTATUS.MaxLength = 1;
                this.columnF1.MaxLength = 200;
                this.columnF2.MaxLength = 200;
                this.columnF3.MaxLength = 200;
                this.columnF4.MaxLength = 200;
                this.columnF5.MaxLength = 200;
                this.columnF6.MaxLength = 200;
                this.columnF7.MaxLength = 200;
                this.columnF8.MaxLength = 200;
                this.columnF9.MaxLength = 200;
                this.columnF10.MaxLength = 200;
                this.columnF11.MaxLength = 200;
                this.columnF12.MaxLength = 200;
                this.columnF13.MaxLength = 200;
                this.columnF14.MaxLength = 200;
                this.columnF15.MaxLength = 200;
                this.columnF16.MaxLength = 200;
                this.columnF17.MaxLength = 200;
                this.columnF18.MaxLength = 200;
                this.columnF19.MaxLength = 200;
                this.columnF20.MaxLength = 200;
                this.columnF21.MaxLength = 200;
                this.columnF22.MaxLength = 200;
                this.columnF23.MaxLength = 200;
                this.columnF24.MaxLength = 200;
                this.columnF25.MaxLength = 200;
                this.columnF26.MaxLength = 200;
                this.columnF27.MaxLength = 200;
                this.columnF28.MaxLength = 200;
                this.columnF29.MaxLength = 200;
                this.columnF30.MaxLength = 200;
                this.columnSID.MaxLength = 32;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UPLOAD_TEMPRow NewUPLOAD_TEMPRow() {
                return ((UPLOAD_TEMPRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new UPLOAD_TEMPRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(UPLOAD_TEMPRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.UPLOAD_TEMPRowChanged != null)) {
                    this.UPLOAD_TEMPRowChanged(this, new UPLOAD_TEMPRowChangeEvent(((UPLOAD_TEMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.UPLOAD_TEMPRowChanging != null)) {
                    this.UPLOAD_TEMPRowChanging(this, new UPLOAD_TEMPRowChangeEvent(((UPLOAD_TEMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.UPLOAD_TEMPRowDeleted != null)) {
                    this.UPLOAD_TEMPRowDeleted(this, new UPLOAD_TEMPRowChangeEvent(((UPLOAD_TEMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.UPLOAD_TEMPRowDeleting != null)) {
                    this.UPLOAD_TEMPRowDeleting(this, new UPLOAD_TEMPRowChangeEvent(((UPLOAD_TEMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveUPLOAD_TEMPRow(UPLOAD_TEMPRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                CHK06_BankCash_DTO ds = new CHK06_BankCash_DTO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UPLOAD_TEMPDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BANK_CASH_DETAILDataTable : global::System.Data.TypedTableBase<BANK_CASH_DETAILRow> {
            
            private global::System.Data.DataColumn columnBANK_CASH_D_ID;
            
            private global::System.Data.DataColumn columnTRADE_DATE;
            
            private global::System.Data.DataColumn columnBANK_CASH_IN;
            
            private global::System.Data.DataColumn columnSTORE_NO;
            
            private global::System.Data.DataColumn columnPOS_CASH_IN;
            
            private global::System.Data.DataColumn columnUL_BATCH_NO;
            
            private global::System.Data.DataColumn columnCASH_DIFF_AMT;
            
            private global::System.Data.DataColumn columnUL_DTM;
            
            private global::System.Data.DataColumn columnNCCC_CC_IN;
            
            private global::System.Data.DataColumn columnCREATE_USER;
            
            private global::System.Data.DataColumn columnPOS_CC_IN;
            
            private global::System.Data.DataColumn columnCREATE_DTM;
            
            private global::System.Data.DataColumn columnCC_DIFF_AMT;
            
            private global::System.Data.DataColumn columnMODI_USER;
            
            private global::System.Data.DataColumn columnEXCEPTION_CAUSE;
            
            private global::System.Data.DataColumn columnMODI_DTM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BANK_CASH_DETAILDataTable() {
                this.TableName = "BANK_CASH_DETAIL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BANK_CASH_DETAILDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected BANK_CASH_DETAILDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BANK_CASH_D_IDColumn {
                get {
                    return this.columnBANK_CASH_D_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRADE_DATEColumn {
                get {
                    return this.columnTRADE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BANK_CASH_INColumn {
                get {
                    return this.columnBANK_CASH_IN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STORE_NOColumn {
                get {
                    return this.columnSTORE_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn POS_CASH_INColumn {
                get {
                    return this.columnPOS_CASH_IN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UL_BATCH_NOColumn {
                get {
                    return this.columnUL_BATCH_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CASH_DIFF_AMTColumn {
                get {
                    return this.columnCASH_DIFF_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UL_DTMColumn {
                get {
                    return this.columnUL_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NCCC_CC_INColumn {
                get {
                    return this.columnNCCC_CC_IN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_USERColumn {
                get {
                    return this.columnCREATE_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn POS_CC_INColumn {
                get {
                    return this.columnPOS_CC_IN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_DTMColumn {
                get {
                    return this.columnCREATE_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CC_DIFF_AMTColumn {
                get {
                    return this.columnCC_DIFF_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODI_USERColumn {
                get {
                    return this.columnMODI_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EXCEPTION_CAUSEColumn {
                get {
                    return this.columnEXCEPTION_CAUSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODI_DTMColumn {
                get {
                    return this.columnMODI_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BANK_CASH_DETAILRow this[int index] {
                get {
                    return ((BANK_CASH_DETAILRow)(this.Rows[index]));
                }
            }
            
            public event BANK_CASH_DETAILRowChangeEventHandler BANK_CASH_DETAILRowChanging;
            
            public event BANK_CASH_DETAILRowChangeEventHandler BANK_CASH_DETAILRowChanged;
            
            public event BANK_CASH_DETAILRowChangeEventHandler BANK_CASH_DETAILRowDeleting;
            
            public event BANK_CASH_DETAILRowChangeEventHandler BANK_CASH_DETAILRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddBANK_CASH_DETAILRow(BANK_CASH_DETAILRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BANK_CASH_DETAILRow AddBANK_CASH_DETAILRow(
                        string BANK_CASH_D_ID, 
                        System.DateTime TRADE_DATE, 
                        decimal BANK_CASH_IN, 
                        string STORE_NO, 
                        decimal POS_CASH_IN, 
                        string UL_BATCH_NO, 
                        decimal CASH_DIFF_AMT, 
                        System.DateTime UL_DTM, 
                        decimal NCCC_CC_IN, 
                        string CREATE_USER, 
                        decimal POS_CC_IN, 
                        System.DateTime CREATE_DTM, 
                        decimal CC_DIFF_AMT, 
                        string MODI_USER, 
                        string EXCEPTION_CAUSE, 
                        System.DateTime MODI_DTM) {
                BANK_CASH_DETAILRow rowBANK_CASH_DETAILRow = ((BANK_CASH_DETAILRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BANK_CASH_D_ID,
                        TRADE_DATE,
                        BANK_CASH_IN,
                        STORE_NO,
                        POS_CASH_IN,
                        UL_BATCH_NO,
                        CASH_DIFF_AMT,
                        UL_DTM,
                        NCCC_CC_IN,
                        CREATE_USER,
                        POS_CC_IN,
                        CREATE_DTM,
                        CC_DIFF_AMT,
                        MODI_USER,
                        EXCEPTION_CAUSE,
                        MODI_DTM};
                rowBANK_CASH_DETAILRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBANK_CASH_DETAILRow);
                return rowBANK_CASH_DETAILRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BANK_CASH_DETAILRow FindByBANK_CASH_D_ID(string BANK_CASH_D_ID) {
                return ((BANK_CASH_DETAILRow)(this.Rows.Find(new object[] {
                            BANK_CASH_D_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                BANK_CASH_DETAILDataTable cln = ((BANK_CASH_DETAILDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BANK_CASH_DETAILDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBANK_CASH_D_ID = base.Columns["BANK_CASH_D_ID"];
                this.columnTRADE_DATE = base.Columns["TRADE_DATE"];
                this.columnBANK_CASH_IN = base.Columns["BANK_CASH_IN"];
                this.columnSTORE_NO = base.Columns["STORE_NO"];
                this.columnPOS_CASH_IN = base.Columns["POS_CASH_IN"];
                this.columnUL_BATCH_NO = base.Columns["UL_BATCH_NO"];
                this.columnCASH_DIFF_AMT = base.Columns["CASH_DIFF_AMT"];
                this.columnUL_DTM = base.Columns["UL_DTM"];
                this.columnNCCC_CC_IN = base.Columns["NCCC_CC_IN"];
                this.columnCREATE_USER = base.Columns["CREATE_USER"];
                this.columnPOS_CC_IN = base.Columns["POS_CC_IN"];
                this.columnCREATE_DTM = base.Columns["CREATE_DTM"];
                this.columnCC_DIFF_AMT = base.Columns["CC_DIFF_AMT"];
                this.columnMODI_USER = base.Columns["MODI_USER"];
                this.columnEXCEPTION_CAUSE = base.Columns["EXCEPTION_CAUSE"];
                this.columnMODI_DTM = base.Columns["MODI_DTM"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBANK_CASH_D_ID = new global::System.Data.DataColumn("BANK_CASH_D_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBANK_CASH_D_ID);
                this.columnTRADE_DATE = new global::System.Data.DataColumn("TRADE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRADE_DATE);
                this.columnBANK_CASH_IN = new global::System.Data.DataColumn("BANK_CASH_IN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBANK_CASH_IN);
                this.columnSTORE_NO = new global::System.Data.DataColumn("STORE_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTORE_NO);
                this.columnPOS_CASH_IN = new global::System.Data.DataColumn("POS_CASH_IN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOS_CASH_IN);
                this.columnUL_BATCH_NO = new global::System.Data.DataColumn("UL_BATCH_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUL_BATCH_NO);
                this.columnCASH_DIFF_AMT = new global::System.Data.DataColumn("CASH_DIFF_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCASH_DIFF_AMT);
                this.columnUL_DTM = new global::System.Data.DataColumn("UL_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUL_DTM);
                this.columnNCCC_CC_IN = new global::System.Data.DataColumn("NCCC_CC_IN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNCCC_CC_IN);
                this.columnCREATE_USER = new global::System.Data.DataColumn("CREATE_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_USER);
                this.columnPOS_CC_IN = new global::System.Data.DataColumn("POS_CC_IN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOS_CC_IN);
                this.columnCREATE_DTM = new global::System.Data.DataColumn("CREATE_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_DTM);
                this.columnCC_DIFF_AMT = new global::System.Data.DataColumn("CC_DIFF_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCC_DIFF_AMT);
                this.columnMODI_USER = new global::System.Data.DataColumn("MODI_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODI_USER);
                this.columnEXCEPTION_CAUSE = new global::System.Data.DataColumn("EXCEPTION_CAUSE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXCEPTION_CAUSE);
                this.columnMODI_DTM = new global::System.Data.DataColumn("MODI_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODI_DTM);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnBANK_CASH_D_ID}, true));
                this.columnBANK_CASH_D_ID.AllowDBNull = false;
                this.columnBANK_CASH_D_ID.Unique = true;
                this.columnBANK_CASH_D_ID.MaxLength = 50;
                this.columnTRADE_DATE.AllowDBNull = false;
                this.columnBANK_CASH_IN.AllowDBNull = false;
                this.columnSTORE_NO.AllowDBNull = false;
                this.columnSTORE_NO.MaxLength = 10;
                this.columnUL_BATCH_NO.AllowDBNull = false;
                this.columnUL_BATCH_NO.MaxLength = 50;
                this.columnCASH_DIFF_AMT.AllowDBNull = false;
                this.columnUL_DTM.AllowDBNull = false;
                this.columnCREATE_USER.AllowDBNull = false;
                this.columnCREATE_USER.MaxLength = 50;
                this.columnPOS_CC_IN.AllowDBNull = false;
                this.columnCREATE_DTM.AllowDBNull = false;
                this.columnMODI_USER.AllowDBNull = false;
                this.columnMODI_USER.MaxLength = 50;
                this.columnEXCEPTION_CAUSE.MaxLength = 150;
                this.columnMODI_DTM.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BANK_CASH_DETAILRow NewBANK_CASH_DETAILRow() {
                return ((BANK_CASH_DETAILRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BANK_CASH_DETAILRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(BANK_CASH_DETAILRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BANK_CASH_DETAILRowChanged != null)) {
                    this.BANK_CASH_DETAILRowChanged(this, new BANK_CASH_DETAILRowChangeEvent(((BANK_CASH_DETAILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BANK_CASH_DETAILRowChanging != null)) {
                    this.BANK_CASH_DETAILRowChanging(this, new BANK_CASH_DETAILRowChangeEvent(((BANK_CASH_DETAILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BANK_CASH_DETAILRowDeleted != null)) {
                    this.BANK_CASH_DETAILRowDeleted(this, new BANK_CASH_DETAILRowChangeEvent(((BANK_CASH_DETAILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BANK_CASH_DETAILRowDeleting != null)) {
                    this.BANK_CASH_DETAILRowDeleting(this, new BANK_CASH_DETAILRowChangeEvent(((BANK_CASH_DETAILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveBANK_CASH_DETAILRow(BANK_CASH_DETAILRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                CHK06_BankCash_DTO ds = new CHK06_BankCash_DTO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BANK_CASH_DETAILDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BANK_CASH_DETAIL_TEMPDataTable : global::System.Data.TypedTableBase<BANK_CASH_DETAIL_TEMPRow> {
            
            private global::System.Data.DataColumn columnBANK_CASH_D_ID;
            
            private global::System.Data.DataColumn columnTRADE_DATE;
            
            private global::System.Data.DataColumn columnBANK_CASH_IN;
            
            private global::System.Data.DataColumn columnSTORE_NO;
            
            private global::System.Data.DataColumn columnPOS_CASH_IN;
            
            private global::System.Data.DataColumn columnUL_BATCH_NO;
            
            private global::System.Data.DataColumn columnCASH_DIFF_AMT;
            
            private global::System.Data.DataColumn columnUL_DTM;
            
            private global::System.Data.DataColumn columnNCCC_CC_IN;
            
            private global::System.Data.DataColumn columnCREATE_USER;
            
            private global::System.Data.DataColumn columnPOS_CC_IN;
            
            private global::System.Data.DataColumn columnCREATE_DTM;
            
            private global::System.Data.DataColumn columnCC_DIFF_AMT;
            
            private global::System.Data.DataColumn columnMODI_USER;
            
            private global::System.Data.DataColumn columnEXCEPTION_CAUSE;
            
            private global::System.Data.DataColumn columnMODI_DTM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BANK_CASH_DETAIL_TEMPDataTable() {
                this.TableName = "BANK_CASH_DETAIL_TEMP";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BANK_CASH_DETAIL_TEMPDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected BANK_CASH_DETAIL_TEMPDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BANK_CASH_D_IDColumn {
                get {
                    return this.columnBANK_CASH_D_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRADE_DATEColumn {
                get {
                    return this.columnTRADE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BANK_CASH_INColumn {
                get {
                    return this.columnBANK_CASH_IN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STORE_NOColumn {
                get {
                    return this.columnSTORE_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn POS_CASH_INColumn {
                get {
                    return this.columnPOS_CASH_IN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UL_BATCH_NOColumn {
                get {
                    return this.columnUL_BATCH_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CASH_DIFF_AMTColumn {
                get {
                    return this.columnCASH_DIFF_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UL_DTMColumn {
                get {
                    return this.columnUL_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NCCC_CC_INColumn {
                get {
                    return this.columnNCCC_CC_IN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_USERColumn {
                get {
                    return this.columnCREATE_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn POS_CC_INColumn {
                get {
                    return this.columnPOS_CC_IN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_DTMColumn {
                get {
                    return this.columnCREATE_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CC_DIFF_AMTColumn {
                get {
                    return this.columnCC_DIFF_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODI_USERColumn {
                get {
                    return this.columnMODI_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EXCEPTION_CAUSEColumn {
                get {
                    return this.columnEXCEPTION_CAUSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODI_DTMColumn {
                get {
                    return this.columnMODI_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BANK_CASH_DETAIL_TEMPRow this[int index] {
                get {
                    return ((BANK_CASH_DETAIL_TEMPRow)(this.Rows[index]));
                }
            }
            
            public event BANK_CASH_DETAIL_TEMPRowChangeEventHandler BANK_CASH_DETAIL_TEMPRowChanging;
            
            public event BANK_CASH_DETAIL_TEMPRowChangeEventHandler BANK_CASH_DETAIL_TEMPRowChanged;
            
            public event BANK_CASH_DETAIL_TEMPRowChangeEventHandler BANK_CASH_DETAIL_TEMPRowDeleting;
            
            public event BANK_CASH_DETAIL_TEMPRowChangeEventHandler BANK_CASH_DETAIL_TEMPRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddBANK_CASH_DETAIL_TEMPRow(BANK_CASH_DETAIL_TEMPRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BANK_CASH_DETAIL_TEMPRow AddBANK_CASH_DETAIL_TEMPRow(
                        string BANK_CASH_D_ID, 
                        System.DateTime TRADE_DATE, 
                        decimal BANK_CASH_IN, 
                        string STORE_NO, 
                        decimal POS_CASH_IN, 
                        string UL_BATCH_NO, 
                        decimal CASH_DIFF_AMT, 
                        System.DateTime UL_DTM, 
                        decimal NCCC_CC_IN, 
                        string CREATE_USER, 
                        decimal POS_CC_IN, 
                        System.DateTime CREATE_DTM, 
                        decimal CC_DIFF_AMT, 
                        string MODI_USER, 
                        string EXCEPTION_CAUSE, 
                        System.DateTime MODI_DTM) {
                BANK_CASH_DETAIL_TEMPRow rowBANK_CASH_DETAIL_TEMPRow = ((BANK_CASH_DETAIL_TEMPRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BANK_CASH_D_ID,
                        TRADE_DATE,
                        BANK_CASH_IN,
                        STORE_NO,
                        POS_CASH_IN,
                        UL_BATCH_NO,
                        CASH_DIFF_AMT,
                        UL_DTM,
                        NCCC_CC_IN,
                        CREATE_USER,
                        POS_CC_IN,
                        CREATE_DTM,
                        CC_DIFF_AMT,
                        MODI_USER,
                        EXCEPTION_CAUSE,
                        MODI_DTM};
                rowBANK_CASH_DETAIL_TEMPRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBANK_CASH_DETAIL_TEMPRow);
                return rowBANK_CASH_DETAIL_TEMPRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BANK_CASH_DETAIL_TEMPRow FindByBANK_CASH_D_ID(string BANK_CASH_D_ID) {
                return ((BANK_CASH_DETAIL_TEMPRow)(this.Rows.Find(new object[] {
                            BANK_CASH_D_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                BANK_CASH_DETAIL_TEMPDataTable cln = ((BANK_CASH_DETAIL_TEMPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BANK_CASH_DETAIL_TEMPDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBANK_CASH_D_ID = base.Columns["BANK_CASH_D_ID"];
                this.columnTRADE_DATE = base.Columns["TRADE_DATE"];
                this.columnBANK_CASH_IN = base.Columns["BANK_CASH_IN"];
                this.columnSTORE_NO = base.Columns["STORE_NO"];
                this.columnPOS_CASH_IN = base.Columns["POS_CASH_IN"];
                this.columnUL_BATCH_NO = base.Columns["UL_BATCH_NO"];
                this.columnCASH_DIFF_AMT = base.Columns["CASH_DIFF_AMT"];
                this.columnUL_DTM = base.Columns["UL_DTM"];
                this.columnNCCC_CC_IN = base.Columns["NCCC_CC_IN"];
                this.columnCREATE_USER = base.Columns["CREATE_USER"];
                this.columnPOS_CC_IN = base.Columns["POS_CC_IN"];
                this.columnCREATE_DTM = base.Columns["CREATE_DTM"];
                this.columnCC_DIFF_AMT = base.Columns["CC_DIFF_AMT"];
                this.columnMODI_USER = base.Columns["MODI_USER"];
                this.columnEXCEPTION_CAUSE = base.Columns["EXCEPTION_CAUSE"];
                this.columnMODI_DTM = base.Columns["MODI_DTM"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBANK_CASH_D_ID = new global::System.Data.DataColumn("BANK_CASH_D_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBANK_CASH_D_ID);
                this.columnTRADE_DATE = new global::System.Data.DataColumn("TRADE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRADE_DATE);
                this.columnBANK_CASH_IN = new global::System.Data.DataColumn("BANK_CASH_IN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBANK_CASH_IN);
                this.columnSTORE_NO = new global::System.Data.DataColumn("STORE_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTORE_NO);
                this.columnPOS_CASH_IN = new global::System.Data.DataColumn("POS_CASH_IN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOS_CASH_IN);
                this.columnUL_BATCH_NO = new global::System.Data.DataColumn("UL_BATCH_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUL_BATCH_NO);
                this.columnCASH_DIFF_AMT = new global::System.Data.DataColumn("CASH_DIFF_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCASH_DIFF_AMT);
                this.columnUL_DTM = new global::System.Data.DataColumn("UL_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUL_DTM);
                this.columnNCCC_CC_IN = new global::System.Data.DataColumn("NCCC_CC_IN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNCCC_CC_IN);
                this.columnCREATE_USER = new global::System.Data.DataColumn("CREATE_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_USER);
                this.columnPOS_CC_IN = new global::System.Data.DataColumn("POS_CC_IN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOS_CC_IN);
                this.columnCREATE_DTM = new global::System.Data.DataColumn("CREATE_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_DTM);
                this.columnCC_DIFF_AMT = new global::System.Data.DataColumn("CC_DIFF_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCC_DIFF_AMT);
                this.columnMODI_USER = new global::System.Data.DataColumn("MODI_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODI_USER);
                this.columnEXCEPTION_CAUSE = new global::System.Data.DataColumn("EXCEPTION_CAUSE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXCEPTION_CAUSE);
                this.columnMODI_DTM = new global::System.Data.DataColumn("MODI_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODI_DTM);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnBANK_CASH_D_ID}, true));
                this.columnBANK_CASH_D_ID.AllowDBNull = false;
                this.columnBANK_CASH_D_ID.Unique = true;
                this.columnBANK_CASH_D_ID.MaxLength = 50;
                this.columnTRADE_DATE.AllowDBNull = false;
                this.columnBANK_CASH_IN.AllowDBNull = false;
                this.columnSTORE_NO.AllowDBNull = false;
                this.columnSTORE_NO.MaxLength = 10;
                this.columnUL_BATCH_NO.AllowDBNull = false;
                this.columnUL_BATCH_NO.MaxLength = 50;
                this.columnCASH_DIFF_AMT.AllowDBNull = false;
                this.columnUL_DTM.AllowDBNull = false;
                this.columnCREATE_USER.AllowDBNull = false;
                this.columnCREATE_USER.MaxLength = 50;
                this.columnPOS_CC_IN.AllowDBNull = false;
                this.columnCREATE_DTM.AllowDBNull = false;
                this.columnMODI_USER.AllowDBNull = false;
                this.columnMODI_USER.MaxLength = 50;
                this.columnEXCEPTION_CAUSE.MaxLength = 150;
                this.columnMODI_DTM.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BANK_CASH_DETAIL_TEMPRow NewBANK_CASH_DETAIL_TEMPRow() {
                return ((BANK_CASH_DETAIL_TEMPRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BANK_CASH_DETAIL_TEMPRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(BANK_CASH_DETAIL_TEMPRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BANK_CASH_DETAIL_TEMPRowChanged != null)) {
                    this.BANK_CASH_DETAIL_TEMPRowChanged(this, new BANK_CASH_DETAIL_TEMPRowChangeEvent(((BANK_CASH_DETAIL_TEMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BANK_CASH_DETAIL_TEMPRowChanging != null)) {
                    this.BANK_CASH_DETAIL_TEMPRowChanging(this, new BANK_CASH_DETAIL_TEMPRowChangeEvent(((BANK_CASH_DETAIL_TEMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BANK_CASH_DETAIL_TEMPRowDeleted != null)) {
                    this.BANK_CASH_DETAIL_TEMPRowDeleted(this, new BANK_CASH_DETAIL_TEMPRowChangeEvent(((BANK_CASH_DETAIL_TEMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BANK_CASH_DETAIL_TEMPRowDeleting != null)) {
                    this.BANK_CASH_DETAIL_TEMPRowDeleting(this, new BANK_CASH_DETAIL_TEMPRowChangeEvent(((BANK_CASH_DETAIL_TEMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveBANK_CASH_DETAIL_TEMPRow(BANK_CASH_DETAIL_TEMPRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                CHK06_BankCash_DTO ds = new CHK06_BankCash_DTO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BANK_CASH_DETAIL_TEMPDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BANK_CASH_MASTER_TEMPDataTable : global::System.Data.TypedTableBase<BANK_CASH_MASTER_TEMPRow> {
            
            private global::System.Data.DataColumn columnBANK_CASH_M_ID;
            
            private global::System.Data.DataColumn columnTRADE_DATE;
            
            private global::System.Data.DataColumn columnBANK_CASH_IN;
            
            private global::System.Data.DataColumn columnPOS_CASH_IN;
            
            private global::System.Data.DataColumn columnUL_BATCH_NO;
            
            private global::System.Data.DataColumn columnCASH_DIFF_AMT;
            
            private global::System.Data.DataColumn columnUL_DTM;
            
            private global::System.Data.DataColumn columnNCCC_CC_IN;
            
            private global::System.Data.DataColumn columnCREATE_USER;
            
            private global::System.Data.DataColumn columnPOS_CC_IN;
            
            private global::System.Data.DataColumn columnCREATE_DTM;
            
            private global::System.Data.DataColumn columnCC_DIFF_AMT;
            
            private global::System.Data.DataColumn columnMODI_USER;
            
            private global::System.Data.DataColumn columnEXCEPTION_CAUSE;
            
            private global::System.Data.DataColumn columnMODI_DTM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BANK_CASH_MASTER_TEMPDataTable() {
                this.TableName = "BANK_CASH_MASTER_TEMP";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BANK_CASH_MASTER_TEMPDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected BANK_CASH_MASTER_TEMPDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BANK_CASH_M_IDColumn {
                get {
                    return this.columnBANK_CASH_M_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRADE_DATEColumn {
                get {
                    return this.columnTRADE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BANK_CASH_INColumn {
                get {
                    return this.columnBANK_CASH_IN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn POS_CASH_INColumn {
                get {
                    return this.columnPOS_CASH_IN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UL_BATCH_NOColumn {
                get {
                    return this.columnUL_BATCH_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CASH_DIFF_AMTColumn {
                get {
                    return this.columnCASH_DIFF_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UL_DTMColumn {
                get {
                    return this.columnUL_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NCCC_CC_INColumn {
                get {
                    return this.columnNCCC_CC_IN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_USERColumn {
                get {
                    return this.columnCREATE_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn POS_CC_INColumn {
                get {
                    return this.columnPOS_CC_IN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_DTMColumn {
                get {
                    return this.columnCREATE_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CC_DIFF_AMTColumn {
                get {
                    return this.columnCC_DIFF_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODI_USERColumn {
                get {
                    return this.columnMODI_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EXCEPTION_CAUSEColumn {
                get {
                    return this.columnEXCEPTION_CAUSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODI_DTMColumn {
                get {
                    return this.columnMODI_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BANK_CASH_MASTER_TEMPRow this[int index] {
                get {
                    return ((BANK_CASH_MASTER_TEMPRow)(this.Rows[index]));
                }
            }
            
            public event BANK_CASH_MASTER_TEMPRowChangeEventHandler BANK_CASH_MASTER_TEMPRowChanging;
            
            public event BANK_CASH_MASTER_TEMPRowChangeEventHandler BANK_CASH_MASTER_TEMPRowChanged;
            
            public event BANK_CASH_MASTER_TEMPRowChangeEventHandler BANK_CASH_MASTER_TEMPRowDeleting;
            
            public event BANK_CASH_MASTER_TEMPRowChangeEventHandler BANK_CASH_MASTER_TEMPRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddBANK_CASH_MASTER_TEMPRow(BANK_CASH_MASTER_TEMPRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BANK_CASH_MASTER_TEMPRow AddBANK_CASH_MASTER_TEMPRow(string BANK_CASH_M_ID, System.DateTime TRADE_DATE, decimal BANK_CASH_IN, decimal POS_CASH_IN, string UL_BATCH_NO, decimal CASH_DIFF_AMT, System.DateTime UL_DTM, decimal NCCC_CC_IN, string CREATE_USER, decimal POS_CC_IN, System.DateTime CREATE_DTM, decimal CC_DIFF_AMT, string MODI_USER, string EXCEPTION_CAUSE, System.DateTime MODI_DTM) {
                BANK_CASH_MASTER_TEMPRow rowBANK_CASH_MASTER_TEMPRow = ((BANK_CASH_MASTER_TEMPRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BANK_CASH_M_ID,
                        TRADE_DATE,
                        BANK_CASH_IN,
                        POS_CASH_IN,
                        UL_BATCH_NO,
                        CASH_DIFF_AMT,
                        UL_DTM,
                        NCCC_CC_IN,
                        CREATE_USER,
                        POS_CC_IN,
                        CREATE_DTM,
                        CC_DIFF_AMT,
                        MODI_USER,
                        EXCEPTION_CAUSE,
                        MODI_DTM};
                rowBANK_CASH_MASTER_TEMPRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBANK_CASH_MASTER_TEMPRow);
                return rowBANK_CASH_MASTER_TEMPRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BANK_CASH_MASTER_TEMPRow FindByBANK_CASH_M_ID(string BANK_CASH_M_ID) {
                return ((BANK_CASH_MASTER_TEMPRow)(this.Rows.Find(new object[] {
                            BANK_CASH_M_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                BANK_CASH_MASTER_TEMPDataTable cln = ((BANK_CASH_MASTER_TEMPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BANK_CASH_MASTER_TEMPDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBANK_CASH_M_ID = base.Columns["BANK_CASH_M_ID"];
                this.columnTRADE_DATE = base.Columns["TRADE_DATE"];
                this.columnBANK_CASH_IN = base.Columns["BANK_CASH_IN"];
                this.columnPOS_CASH_IN = base.Columns["POS_CASH_IN"];
                this.columnUL_BATCH_NO = base.Columns["UL_BATCH_NO"];
                this.columnCASH_DIFF_AMT = base.Columns["CASH_DIFF_AMT"];
                this.columnUL_DTM = base.Columns["UL_DTM"];
                this.columnNCCC_CC_IN = base.Columns["NCCC_CC_IN"];
                this.columnCREATE_USER = base.Columns["CREATE_USER"];
                this.columnPOS_CC_IN = base.Columns["POS_CC_IN"];
                this.columnCREATE_DTM = base.Columns["CREATE_DTM"];
                this.columnCC_DIFF_AMT = base.Columns["CC_DIFF_AMT"];
                this.columnMODI_USER = base.Columns["MODI_USER"];
                this.columnEXCEPTION_CAUSE = base.Columns["EXCEPTION_CAUSE"];
                this.columnMODI_DTM = base.Columns["MODI_DTM"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBANK_CASH_M_ID = new global::System.Data.DataColumn("BANK_CASH_M_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBANK_CASH_M_ID);
                this.columnTRADE_DATE = new global::System.Data.DataColumn("TRADE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRADE_DATE);
                this.columnBANK_CASH_IN = new global::System.Data.DataColumn("BANK_CASH_IN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBANK_CASH_IN);
                this.columnPOS_CASH_IN = new global::System.Data.DataColumn("POS_CASH_IN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOS_CASH_IN);
                this.columnUL_BATCH_NO = new global::System.Data.DataColumn("UL_BATCH_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUL_BATCH_NO);
                this.columnCASH_DIFF_AMT = new global::System.Data.DataColumn("CASH_DIFF_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCASH_DIFF_AMT);
                this.columnUL_DTM = new global::System.Data.DataColumn("UL_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUL_DTM);
                this.columnNCCC_CC_IN = new global::System.Data.DataColumn("NCCC_CC_IN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNCCC_CC_IN);
                this.columnCREATE_USER = new global::System.Data.DataColumn("CREATE_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_USER);
                this.columnPOS_CC_IN = new global::System.Data.DataColumn("POS_CC_IN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOS_CC_IN);
                this.columnCREATE_DTM = new global::System.Data.DataColumn("CREATE_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_DTM);
                this.columnCC_DIFF_AMT = new global::System.Data.DataColumn("CC_DIFF_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCC_DIFF_AMT);
                this.columnMODI_USER = new global::System.Data.DataColumn("MODI_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODI_USER);
                this.columnEXCEPTION_CAUSE = new global::System.Data.DataColumn("EXCEPTION_CAUSE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXCEPTION_CAUSE);
                this.columnMODI_DTM = new global::System.Data.DataColumn("MODI_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODI_DTM);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnBANK_CASH_M_ID}, true));
                this.columnBANK_CASH_M_ID.AllowDBNull = false;
                this.columnBANK_CASH_M_ID.Unique = true;
                this.columnBANK_CASH_M_ID.MaxLength = 32;
                this.columnTRADE_DATE.AllowDBNull = false;
                this.columnBANK_CASH_IN.AllowDBNull = false;
                this.columnUL_BATCH_NO.AllowDBNull = false;
                this.columnUL_BATCH_NO.MaxLength = 50;
                this.columnCASH_DIFF_AMT.AllowDBNull = false;
                this.columnUL_DTM.AllowDBNull = false;
                this.columnCREATE_USER.AllowDBNull = false;
                this.columnCREATE_USER.MaxLength = 50;
                this.columnPOS_CC_IN.AllowDBNull = false;
                this.columnCREATE_DTM.AllowDBNull = false;
                this.columnMODI_USER.AllowDBNull = false;
                this.columnMODI_USER.MaxLength = 50;
                this.columnEXCEPTION_CAUSE.MaxLength = 150;
                this.columnMODI_DTM.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BANK_CASH_MASTER_TEMPRow NewBANK_CASH_MASTER_TEMPRow() {
                return ((BANK_CASH_MASTER_TEMPRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BANK_CASH_MASTER_TEMPRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(BANK_CASH_MASTER_TEMPRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BANK_CASH_MASTER_TEMPRowChanged != null)) {
                    this.BANK_CASH_MASTER_TEMPRowChanged(this, new BANK_CASH_MASTER_TEMPRowChangeEvent(((BANK_CASH_MASTER_TEMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BANK_CASH_MASTER_TEMPRowChanging != null)) {
                    this.BANK_CASH_MASTER_TEMPRowChanging(this, new BANK_CASH_MASTER_TEMPRowChangeEvent(((BANK_CASH_MASTER_TEMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BANK_CASH_MASTER_TEMPRowDeleted != null)) {
                    this.BANK_CASH_MASTER_TEMPRowDeleted(this, new BANK_CASH_MASTER_TEMPRowChangeEvent(((BANK_CASH_MASTER_TEMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BANK_CASH_MASTER_TEMPRowDeleting != null)) {
                    this.BANK_CASH_MASTER_TEMPRowDeleting(this, new BANK_CASH_MASTER_TEMPRowChangeEvent(((BANK_CASH_MASTER_TEMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveBANK_CASH_MASTER_TEMPRow(BANK_CASH_MASTER_TEMPRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                CHK06_BankCash_DTO ds = new CHK06_BankCash_DTO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BANK_CASH_MASTER_TEMPDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BANK_CASH_MASTERDataTable : global::System.Data.TypedTableBase<BANK_CASH_MASTERRow> {
            
            private global::System.Data.DataColumn columnBANK_CASH_M_ID;
            
            private global::System.Data.DataColumn columnTRADE_DATE;
            
            private global::System.Data.DataColumn columnBANK_CASH_IN;
            
            private global::System.Data.DataColumn columnPOS_CASH_IN;
            
            private global::System.Data.DataColumn columnUL_BATCH_NO;
            
            private global::System.Data.DataColumn columnCASH_DIFF_AMT;
            
            private global::System.Data.DataColumn columnUL_DTM;
            
            private global::System.Data.DataColumn columnNCCC_CC_IN;
            
            private global::System.Data.DataColumn columnCREATE_USER;
            
            private global::System.Data.DataColumn columnPOS_CC_IN;
            
            private global::System.Data.DataColumn columnCREATE_DTM;
            
            private global::System.Data.DataColumn columnCC_DIFF_AMT;
            
            private global::System.Data.DataColumn columnMODI_USER;
            
            private global::System.Data.DataColumn columnEXCEPTION_CAUSE;
            
            private global::System.Data.DataColumn columnMODI_DTM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BANK_CASH_MASTERDataTable() {
                this.TableName = "BANK_CASH_MASTER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BANK_CASH_MASTERDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected BANK_CASH_MASTERDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BANK_CASH_M_IDColumn {
                get {
                    return this.columnBANK_CASH_M_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRADE_DATEColumn {
                get {
                    return this.columnTRADE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BANK_CASH_INColumn {
                get {
                    return this.columnBANK_CASH_IN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn POS_CASH_INColumn {
                get {
                    return this.columnPOS_CASH_IN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UL_BATCH_NOColumn {
                get {
                    return this.columnUL_BATCH_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CASH_DIFF_AMTColumn {
                get {
                    return this.columnCASH_DIFF_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UL_DTMColumn {
                get {
                    return this.columnUL_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NCCC_CC_INColumn {
                get {
                    return this.columnNCCC_CC_IN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_USERColumn {
                get {
                    return this.columnCREATE_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn POS_CC_INColumn {
                get {
                    return this.columnPOS_CC_IN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_DTMColumn {
                get {
                    return this.columnCREATE_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CC_DIFF_AMTColumn {
                get {
                    return this.columnCC_DIFF_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODI_USERColumn {
                get {
                    return this.columnMODI_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EXCEPTION_CAUSEColumn {
                get {
                    return this.columnEXCEPTION_CAUSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODI_DTMColumn {
                get {
                    return this.columnMODI_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BANK_CASH_MASTERRow this[int index] {
                get {
                    return ((BANK_CASH_MASTERRow)(this.Rows[index]));
                }
            }
            
            public event BANK_CASH_MASTERRowChangeEventHandler BANK_CASH_MASTERRowChanging;
            
            public event BANK_CASH_MASTERRowChangeEventHandler BANK_CASH_MASTERRowChanged;
            
            public event BANK_CASH_MASTERRowChangeEventHandler BANK_CASH_MASTERRowDeleting;
            
            public event BANK_CASH_MASTERRowChangeEventHandler BANK_CASH_MASTERRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddBANK_CASH_MASTERRow(BANK_CASH_MASTERRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BANK_CASH_MASTERRow AddBANK_CASH_MASTERRow(string BANK_CASH_M_ID, System.DateTime TRADE_DATE, decimal BANK_CASH_IN, decimal POS_CASH_IN, string UL_BATCH_NO, decimal CASH_DIFF_AMT, System.DateTime UL_DTM, decimal NCCC_CC_IN, string CREATE_USER, decimal POS_CC_IN, System.DateTime CREATE_DTM, decimal CC_DIFF_AMT, string MODI_USER, string EXCEPTION_CAUSE, System.DateTime MODI_DTM) {
                BANK_CASH_MASTERRow rowBANK_CASH_MASTERRow = ((BANK_CASH_MASTERRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BANK_CASH_M_ID,
                        TRADE_DATE,
                        BANK_CASH_IN,
                        POS_CASH_IN,
                        UL_BATCH_NO,
                        CASH_DIFF_AMT,
                        UL_DTM,
                        NCCC_CC_IN,
                        CREATE_USER,
                        POS_CC_IN,
                        CREATE_DTM,
                        CC_DIFF_AMT,
                        MODI_USER,
                        EXCEPTION_CAUSE,
                        MODI_DTM};
                rowBANK_CASH_MASTERRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBANK_CASH_MASTERRow);
                return rowBANK_CASH_MASTERRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BANK_CASH_MASTERRow FindByBANK_CASH_M_ID(string BANK_CASH_M_ID) {
                return ((BANK_CASH_MASTERRow)(this.Rows.Find(new object[] {
                            BANK_CASH_M_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                BANK_CASH_MASTERDataTable cln = ((BANK_CASH_MASTERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BANK_CASH_MASTERDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBANK_CASH_M_ID = base.Columns["BANK_CASH_M_ID"];
                this.columnTRADE_DATE = base.Columns["TRADE_DATE"];
                this.columnBANK_CASH_IN = base.Columns["BANK_CASH_IN"];
                this.columnPOS_CASH_IN = base.Columns["POS_CASH_IN"];
                this.columnUL_BATCH_NO = base.Columns["UL_BATCH_NO"];
                this.columnCASH_DIFF_AMT = base.Columns["CASH_DIFF_AMT"];
                this.columnUL_DTM = base.Columns["UL_DTM"];
                this.columnNCCC_CC_IN = base.Columns["NCCC_CC_IN"];
                this.columnCREATE_USER = base.Columns["CREATE_USER"];
                this.columnPOS_CC_IN = base.Columns["POS_CC_IN"];
                this.columnCREATE_DTM = base.Columns["CREATE_DTM"];
                this.columnCC_DIFF_AMT = base.Columns["CC_DIFF_AMT"];
                this.columnMODI_USER = base.Columns["MODI_USER"];
                this.columnEXCEPTION_CAUSE = base.Columns["EXCEPTION_CAUSE"];
                this.columnMODI_DTM = base.Columns["MODI_DTM"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBANK_CASH_M_ID = new global::System.Data.DataColumn("BANK_CASH_M_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBANK_CASH_M_ID);
                this.columnTRADE_DATE = new global::System.Data.DataColumn("TRADE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRADE_DATE);
                this.columnBANK_CASH_IN = new global::System.Data.DataColumn("BANK_CASH_IN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBANK_CASH_IN);
                this.columnPOS_CASH_IN = new global::System.Data.DataColumn("POS_CASH_IN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOS_CASH_IN);
                this.columnUL_BATCH_NO = new global::System.Data.DataColumn("UL_BATCH_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUL_BATCH_NO);
                this.columnCASH_DIFF_AMT = new global::System.Data.DataColumn("CASH_DIFF_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCASH_DIFF_AMT);
                this.columnUL_DTM = new global::System.Data.DataColumn("UL_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUL_DTM);
                this.columnNCCC_CC_IN = new global::System.Data.DataColumn("NCCC_CC_IN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNCCC_CC_IN);
                this.columnCREATE_USER = new global::System.Data.DataColumn("CREATE_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_USER);
                this.columnPOS_CC_IN = new global::System.Data.DataColumn("POS_CC_IN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOS_CC_IN);
                this.columnCREATE_DTM = new global::System.Data.DataColumn("CREATE_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_DTM);
                this.columnCC_DIFF_AMT = new global::System.Data.DataColumn("CC_DIFF_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCC_DIFF_AMT);
                this.columnMODI_USER = new global::System.Data.DataColumn("MODI_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODI_USER);
                this.columnEXCEPTION_CAUSE = new global::System.Data.DataColumn("EXCEPTION_CAUSE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXCEPTION_CAUSE);
                this.columnMODI_DTM = new global::System.Data.DataColumn("MODI_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODI_DTM);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnBANK_CASH_M_ID}, true));
                this.columnBANK_CASH_M_ID.AllowDBNull = false;
                this.columnBANK_CASH_M_ID.Unique = true;
                this.columnBANK_CASH_M_ID.MaxLength = 50;
                this.columnTRADE_DATE.AllowDBNull = false;
                this.columnBANK_CASH_IN.AllowDBNull = false;
                this.columnUL_BATCH_NO.AllowDBNull = false;
                this.columnUL_BATCH_NO.MaxLength = 50;
                this.columnCASH_DIFF_AMT.AllowDBNull = false;
                this.columnUL_DTM.AllowDBNull = false;
                this.columnCREATE_USER.AllowDBNull = false;
                this.columnCREATE_USER.MaxLength = 50;
                this.columnPOS_CC_IN.AllowDBNull = false;
                this.columnCREATE_DTM.AllowDBNull = false;
                this.columnMODI_USER.AllowDBNull = false;
                this.columnMODI_USER.MaxLength = 50;
                this.columnEXCEPTION_CAUSE.MaxLength = 150;
                this.columnMODI_DTM.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BANK_CASH_MASTERRow NewBANK_CASH_MASTERRow() {
                return ((BANK_CASH_MASTERRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BANK_CASH_MASTERRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(BANK_CASH_MASTERRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BANK_CASH_MASTERRowChanged != null)) {
                    this.BANK_CASH_MASTERRowChanged(this, new BANK_CASH_MASTERRowChangeEvent(((BANK_CASH_MASTERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BANK_CASH_MASTERRowChanging != null)) {
                    this.BANK_CASH_MASTERRowChanging(this, new BANK_CASH_MASTERRowChangeEvent(((BANK_CASH_MASTERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BANK_CASH_MASTERRowDeleted != null)) {
                    this.BANK_CASH_MASTERRowDeleted(this, new BANK_CASH_MASTERRowChangeEvent(((BANK_CASH_MASTERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BANK_CASH_MASTERRowDeleting != null)) {
                    this.BANK_CASH_MASTERRowDeleting(this, new BANK_CASH_MASTERRowChangeEvent(((BANK_CASH_MASTERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveBANK_CASH_MASTERRow(BANK_CASH_MASTERRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                CHK06_BankCash_DTO ds = new CHK06_BankCash_DTO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BANK_CASH_MASTERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class UPLOAD_TEMPRow : global::System.Data.DataRow {
            
            private UPLOAD_TEMPDataTable tableUPLOAD_TEMP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UPLOAD_TEMPRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUPLOAD_TEMP = ((UPLOAD_TEMPDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BATCH_NO {
                get {
                    return ((string)(this[this.tableUPLOAD_TEMP.BATCH_NOColumn]));
                }
                set {
                    this[this.tableUPLOAD_TEMP.BATCH_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USER_ID {
                get {
                    return ((string)(this[this.tableUPLOAD_TEMP.USER_IDColumn]));
                }
                set {
                    this[this.tableUPLOAD_TEMP.USER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FINC_ID {
                get {
                    return ((string)(this[this.tableUPLOAD_TEMP.FINC_IDColumn]));
                }
                set {
                    this[this.tableUPLOAD_TEMP.FINC_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STATUS {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.STATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'STATUS\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F1 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F1\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F2 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F2\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F3 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F3\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F4 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F4\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F5 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F5\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F6 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F6\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F7 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F7\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F8 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F8\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F9 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F9\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F10 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F10\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F11 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F11\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F12 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F12\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F13 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F13Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F13\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F13Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F14 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F14Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F14\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F14Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F15 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F15Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F15\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F15Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F16 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F16Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F16\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F16Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F17 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F17Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F17\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F17Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F18 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F18Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F18\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F18Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F19 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F19Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F19\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F19Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F20 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F20Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F20\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F20Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F21 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F21Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F21\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F21Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F22 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F22Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F22\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F22Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F23 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F23Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F23\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F23Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F24 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F24Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F24\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F24Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F25 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F25Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F25\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F25Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F26 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F26Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F26\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F26Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F27 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F27Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F27\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F27Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F28 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F28Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F28\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F28Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F29 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F29Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F29\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F29Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F30 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F30Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F30\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F30Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SID {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.SIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'SID\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.SIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTATUSNull() {
                return this.IsNull(this.tableUPLOAD_TEMP.STATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTATUSNull() {
                this[this.tableUPLOAD_TEMP.STATUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF1Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF1Null() {
                this[this.tableUPLOAD_TEMP.F1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF2Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF2Null() {
                this[this.tableUPLOAD_TEMP.F2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF3Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF3Null() {
                this[this.tableUPLOAD_TEMP.F3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF4Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF4Null() {
                this[this.tableUPLOAD_TEMP.F4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF5Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF5Null() {
                this[this.tableUPLOAD_TEMP.F5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF6Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF6Null() {
                this[this.tableUPLOAD_TEMP.F6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF7Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF7Null() {
                this[this.tableUPLOAD_TEMP.F7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF8Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF8Null() {
                this[this.tableUPLOAD_TEMP.F8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF9Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF9Null() {
                this[this.tableUPLOAD_TEMP.F9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF10Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF10Null() {
                this[this.tableUPLOAD_TEMP.F10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF11Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF11Null() {
                this[this.tableUPLOAD_TEMP.F11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF12Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF12Null() {
                this[this.tableUPLOAD_TEMP.F12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF13Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F13Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF13Null() {
                this[this.tableUPLOAD_TEMP.F13Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF14Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F14Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF14Null() {
                this[this.tableUPLOAD_TEMP.F14Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF15Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F15Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF15Null() {
                this[this.tableUPLOAD_TEMP.F15Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF16Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F16Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF16Null() {
                this[this.tableUPLOAD_TEMP.F16Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF17Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F17Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF17Null() {
                this[this.tableUPLOAD_TEMP.F17Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF18Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F18Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF18Null() {
                this[this.tableUPLOAD_TEMP.F18Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF19Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F19Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF19Null() {
                this[this.tableUPLOAD_TEMP.F19Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF20Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F20Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF20Null() {
                this[this.tableUPLOAD_TEMP.F20Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF21Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F21Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF21Null() {
                this[this.tableUPLOAD_TEMP.F21Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF22Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F22Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF22Null() {
                this[this.tableUPLOAD_TEMP.F22Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF23Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F23Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF23Null() {
                this[this.tableUPLOAD_TEMP.F23Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF24Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F24Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF24Null() {
                this[this.tableUPLOAD_TEMP.F24Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF25Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F25Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF25Null() {
                this[this.tableUPLOAD_TEMP.F25Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF26Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F26Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF26Null() {
                this[this.tableUPLOAD_TEMP.F26Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF27Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F27Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF27Null() {
                this[this.tableUPLOAD_TEMP.F27Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF28Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F28Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF28Null() {
                this[this.tableUPLOAD_TEMP.F28Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF29Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F29Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF29Null() {
                this[this.tableUPLOAD_TEMP.F29Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF30Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F30Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF30Null() {
                this[this.tableUPLOAD_TEMP.F30Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSIDNull() {
                return this.IsNull(this.tableUPLOAD_TEMP.SIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSIDNull() {
                this[this.tableUPLOAD_TEMP.SIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class BANK_CASH_DETAILRow : global::System.Data.DataRow {
            
            private BANK_CASH_DETAILDataTable tableBANK_CASH_DETAIL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BANK_CASH_DETAILRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBANK_CASH_DETAIL = ((BANK_CASH_DETAILDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BANK_CASH_D_ID {
                get {
                    return ((string)(this[this.tableBANK_CASH_DETAIL.BANK_CASH_D_IDColumn]));
                }
                set {
                    this[this.tableBANK_CASH_DETAIL.BANK_CASH_D_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TRADE_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableBANK_CASH_DETAIL.TRADE_DATEColumn]));
                }
                set {
                    this[this.tableBANK_CASH_DETAIL.TRADE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BANK_CASH_IN {
                get {
                    return ((decimal)(this[this.tableBANK_CASH_DETAIL.BANK_CASH_INColumn]));
                }
                set {
                    this[this.tableBANK_CASH_DETAIL.BANK_CASH_INColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STORE_NO {
                get {
                    return ((string)(this[this.tableBANK_CASH_DETAIL.STORE_NOColumn]));
                }
                set {
                    this[this.tableBANK_CASH_DETAIL.STORE_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal POS_CASH_IN {
                get {
                    try {
                        return ((decimal)(this[this.tableBANK_CASH_DETAIL.POS_CASH_INColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BANK_CASH_DETAIL\' 中資料行 \'POS_CASH_IN\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBANK_CASH_DETAIL.POS_CASH_INColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UL_BATCH_NO {
                get {
                    return ((string)(this[this.tableBANK_CASH_DETAIL.UL_BATCH_NOColumn]));
                }
                set {
                    this[this.tableBANK_CASH_DETAIL.UL_BATCH_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CASH_DIFF_AMT {
                get {
                    return ((decimal)(this[this.tableBANK_CASH_DETAIL.CASH_DIFF_AMTColumn]));
                }
                set {
                    this[this.tableBANK_CASH_DETAIL.CASH_DIFF_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime UL_DTM {
                get {
                    return ((global::System.DateTime)(this[this.tableBANK_CASH_DETAIL.UL_DTMColumn]));
                }
                set {
                    this[this.tableBANK_CASH_DETAIL.UL_DTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NCCC_CC_IN {
                get {
                    try {
                        return ((decimal)(this[this.tableBANK_CASH_DETAIL.NCCC_CC_INColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BANK_CASH_DETAIL\' 中資料行 \'NCCC_CC_IN\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBANK_CASH_DETAIL.NCCC_CC_INColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CREATE_USER {
                get {
                    return ((string)(this[this.tableBANK_CASH_DETAIL.CREATE_USERColumn]));
                }
                set {
                    this[this.tableBANK_CASH_DETAIL.CREATE_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal POS_CC_IN {
                get {
                    return ((decimal)(this[this.tableBANK_CASH_DETAIL.POS_CC_INColumn]));
                }
                set {
                    this[this.tableBANK_CASH_DETAIL.POS_CC_INColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CREATE_DTM {
                get {
                    return ((global::System.DateTime)(this[this.tableBANK_CASH_DETAIL.CREATE_DTMColumn]));
                }
                set {
                    this[this.tableBANK_CASH_DETAIL.CREATE_DTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CC_DIFF_AMT {
                get {
                    try {
                        return ((decimal)(this[this.tableBANK_CASH_DETAIL.CC_DIFF_AMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BANK_CASH_DETAIL\' 中資料行 \'CC_DIFF_AMT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBANK_CASH_DETAIL.CC_DIFF_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODI_USER {
                get {
                    return ((string)(this[this.tableBANK_CASH_DETAIL.MODI_USERColumn]));
                }
                set {
                    this[this.tableBANK_CASH_DETAIL.MODI_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EXCEPTION_CAUSE {
                get {
                    try {
                        return ((string)(this[this.tableBANK_CASH_DETAIL.EXCEPTION_CAUSEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BANK_CASH_DETAIL\' 中資料行 \'EXCEPTION_CAUSE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBANK_CASH_DETAIL.EXCEPTION_CAUSEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODI_DTM {
                get {
                    return ((global::System.DateTime)(this[this.tableBANK_CASH_DETAIL.MODI_DTMColumn]));
                }
                set {
                    this[this.tableBANK_CASH_DETAIL.MODI_DTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPOS_CASH_INNull() {
                return this.IsNull(this.tableBANK_CASH_DETAIL.POS_CASH_INColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPOS_CASH_INNull() {
                this[this.tableBANK_CASH_DETAIL.POS_CASH_INColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNCCC_CC_INNull() {
                return this.IsNull(this.tableBANK_CASH_DETAIL.NCCC_CC_INColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNCCC_CC_INNull() {
                this[this.tableBANK_CASH_DETAIL.NCCC_CC_INColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCC_DIFF_AMTNull() {
                return this.IsNull(this.tableBANK_CASH_DETAIL.CC_DIFF_AMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCC_DIFF_AMTNull() {
                this[this.tableBANK_CASH_DETAIL.CC_DIFF_AMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEXCEPTION_CAUSENull() {
                return this.IsNull(this.tableBANK_CASH_DETAIL.EXCEPTION_CAUSEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEXCEPTION_CAUSENull() {
                this[this.tableBANK_CASH_DETAIL.EXCEPTION_CAUSEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class BANK_CASH_DETAIL_TEMPRow : global::System.Data.DataRow {
            
            private BANK_CASH_DETAIL_TEMPDataTable tableBANK_CASH_DETAIL_TEMP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BANK_CASH_DETAIL_TEMPRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBANK_CASH_DETAIL_TEMP = ((BANK_CASH_DETAIL_TEMPDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BANK_CASH_D_ID {
                get {
                    return ((string)(this[this.tableBANK_CASH_DETAIL_TEMP.BANK_CASH_D_IDColumn]));
                }
                set {
                    this[this.tableBANK_CASH_DETAIL_TEMP.BANK_CASH_D_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TRADE_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableBANK_CASH_DETAIL_TEMP.TRADE_DATEColumn]));
                }
                set {
                    this[this.tableBANK_CASH_DETAIL_TEMP.TRADE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BANK_CASH_IN {
                get {
                    return ((decimal)(this[this.tableBANK_CASH_DETAIL_TEMP.BANK_CASH_INColumn]));
                }
                set {
                    this[this.tableBANK_CASH_DETAIL_TEMP.BANK_CASH_INColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STORE_NO {
                get {
                    return ((string)(this[this.tableBANK_CASH_DETAIL_TEMP.STORE_NOColumn]));
                }
                set {
                    this[this.tableBANK_CASH_DETAIL_TEMP.STORE_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal POS_CASH_IN {
                get {
                    try {
                        return ((decimal)(this[this.tableBANK_CASH_DETAIL_TEMP.POS_CASH_INColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BANK_CASH_DETAIL_TEMP\' 中資料行 \'POS_CASH_IN\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBANK_CASH_DETAIL_TEMP.POS_CASH_INColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UL_BATCH_NO {
                get {
                    return ((string)(this[this.tableBANK_CASH_DETAIL_TEMP.UL_BATCH_NOColumn]));
                }
                set {
                    this[this.tableBANK_CASH_DETAIL_TEMP.UL_BATCH_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CASH_DIFF_AMT {
                get {
                    return ((decimal)(this[this.tableBANK_CASH_DETAIL_TEMP.CASH_DIFF_AMTColumn]));
                }
                set {
                    this[this.tableBANK_CASH_DETAIL_TEMP.CASH_DIFF_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime UL_DTM {
                get {
                    return ((global::System.DateTime)(this[this.tableBANK_CASH_DETAIL_TEMP.UL_DTMColumn]));
                }
                set {
                    this[this.tableBANK_CASH_DETAIL_TEMP.UL_DTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NCCC_CC_IN {
                get {
                    try {
                        return ((decimal)(this[this.tableBANK_CASH_DETAIL_TEMP.NCCC_CC_INColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BANK_CASH_DETAIL_TEMP\' 中資料行 \'NCCC_CC_IN\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBANK_CASH_DETAIL_TEMP.NCCC_CC_INColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CREATE_USER {
                get {
                    return ((string)(this[this.tableBANK_CASH_DETAIL_TEMP.CREATE_USERColumn]));
                }
                set {
                    this[this.tableBANK_CASH_DETAIL_TEMP.CREATE_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal POS_CC_IN {
                get {
                    return ((decimal)(this[this.tableBANK_CASH_DETAIL_TEMP.POS_CC_INColumn]));
                }
                set {
                    this[this.tableBANK_CASH_DETAIL_TEMP.POS_CC_INColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CREATE_DTM {
                get {
                    return ((global::System.DateTime)(this[this.tableBANK_CASH_DETAIL_TEMP.CREATE_DTMColumn]));
                }
                set {
                    this[this.tableBANK_CASH_DETAIL_TEMP.CREATE_DTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CC_DIFF_AMT {
                get {
                    try {
                        return ((decimal)(this[this.tableBANK_CASH_DETAIL_TEMP.CC_DIFF_AMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BANK_CASH_DETAIL_TEMP\' 中資料行 \'CC_DIFF_AMT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBANK_CASH_DETAIL_TEMP.CC_DIFF_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODI_USER {
                get {
                    return ((string)(this[this.tableBANK_CASH_DETAIL_TEMP.MODI_USERColumn]));
                }
                set {
                    this[this.tableBANK_CASH_DETAIL_TEMP.MODI_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EXCEPTION_CAUSE {
                get {
                    try {
                        return ((string)(this[this.tableBANK_CASH_DETAIL_TEMP.EXCEPTION_CAUSEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BANK_CASH_DETAIL_TEMP\' 中資料行 \'EXCEPTION_CAUSE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBANK_CASH_DETAIL_TEMP.EXCEPTION_CAUSEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODI_DTM {
                get {
                    return ((global::System.DateTime)(this[this.tableBANK_CASH_DETAIL_TEMP.MODI_DTMColumn]));
                }
                set {
                    this[this.tableBANK_CASH_DETAIL_TEMP.MODI_DTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPOS_CASH_INNull() {
                return this.IsNull(this.tableBANK_CASH_DETAIL_TEMP.POS_CASH_INColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPOS_CASH_INNull() {
                this[this.tableBANK_CASH_DETAIL_TEMP.POS_CASH_INColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNCCC_CC_INNull() {
                return this.IsNull(this.tableBANK_CASH_DETAIL_TEMP.NCCC_CC_INColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNCCC_CC_INNull() {
                this[this.tableBANK_CASH_DETAIL_TEMP.NCCC_CC_INColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCC_DIFF_AMTNull() {
                return this.IsNull(this.tableBANK_CASH_DETAIL_TEMP.CC_DIFF_AMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCC_DIFF_AMTNull() {
                this[this.tableBANK_CASH_DETAIL_TEMP.CC_DIFF_AMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEXCEPTION_CAUSENull() {
                return this.IsNull(this.tableBANK_CASH_DETAIL_TEMP.EXCEPTION_CAUSEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEXCEPTION_CAUSENull() {
                this[this.tableBANK_CASH_DETAIL_TEMP.EXCEPTION_CAUSEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class BANK_CASH_MASTER_TEMPRow : global::System.Data.DataRow {
            
            private BANK_CASH_MASTER_TEMPDataTable tableBANK_CASH_MASTER_TEMP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BANK_CASH_MASTER_TEMPRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBANK_CASH_MASTER_TEMP = ((BANK_CASH_MASTER_TEMPDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BANK_CASH_M_ID {
                get {
                    return ((string)(this[this.tableBANK_CASH_MASTER_TEMP.BANK_CASH_M_IDColumn]));
                }
                set {
                    this[this.tableBANK_CASH_MASTER_TEMP.BANK_CASH_M_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TRADE_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableBANK_CASH_MASTER_TEMP.TRADE_DATEColumn]));
                }
                set {
                    this[this.tableBANK_CASH_MASTER_TEMP.TRADE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BANK_CASH_IN {
                get {
                    return ((decimal)(this[this.tableBANK_CASH_MASTER_TEMP.BANK_CASH_INColumn]));
                }
                set {
                    this[this.tableBANK_CASH_MASTER_TEMP.BANK_CASH_INColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal POS_CASH_IN {
                get {
                    try {
                        return ((decimal)(this[this.tableBANK_CASH_MASTER_TEMP.POS_CASH_INColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BANK_CASH_MASTER_TEMP\' 中資料行 \'POS_CASH_IN\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBANK_CASH_MASTER_TEMP.POS_CASH_INColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UL_BATCH_NO {
                get {
                    return ((string)(this[this.tableBANK_CASH_MASTER_TEMP.UL_BATCH_NOColumn]));
                }
                set {
                    this[this.tableBANK_CASH_MASTER_TEMP.UL_BATCH_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CASH_DIFF_AMT {
                get {
                    return ((decimal)(this[this.tableBANK_CASH_MASTER_TEMP.CASH_DIFF_AMTColumn]));
                }
                set {
                    this[this.tableBANK_CASH_MASTER_TEMP.CASH_DIFF_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime UL_DTM {
                get {
                    return ((global::System.DateTime)(this[this.tableBANK_CASH_MASTER_TEMP.UL_DTMColumn]));
                }
                set {
                    this[this.tableBANK_CASH_MASTER_TEMP.UL_DTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NCCC_CC_IN {
                get {
                    try {
                        return ((decimal)(this[this.tableBANK_CASH_MASTER_TEMP.NCCC_CC_INColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BANK_CASH_MASTER_TEMP\' 中資料行 \'NCCC_CC_IN\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBANK_CASH_MASTER_TEMP.NCCC_CC_INColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CREATE_USER {
                get {
                    return ((string)(this[this.tableBANK_CASH_MASTER_TEMP.CREATE_USERColumn]));
                }
                set {
                    this[this.tableBANK_CASH_MASTER_TEMP.CREATE_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal POS_CC_IN {
                get {
                    return ((decimal)(this[this.tableBANK_CASH_MASTER_TEMP.POS_CC_INColumn]));
                }
                set {
                    this[this.tableBANK_CASH_MASTER_TEMP.POS_CC_INColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CREATE_DTM {
                get {
                    return ((global::System.DateTime)(this[this.tableBANK_CASH_MASTER_TEMP.CREATE_DTMColumn]));
                }
                set {
                    this[this.tableBANK_CASH_MASTER_TEMP.CREATE_DTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CC_DIFF_AMT {
                get {
                    try {
                        return ((decimal)(this[this.tableBANK_CASH_MASTER_TEMP.CC_DIFF_AMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BANK_CASH_MASTER_TEMP\' 中資料行 \'CC_DIFF_AMT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBANK_CASH_MASTER_TEMP.CC_DIFF_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODI_USER {
                get {
                    return ((string)(this[this.tableBANK_CASH_MASTER_TEMP.MODI_USERColumn]));
                }
                set {
                    this[this.tableBANK_CASH_MASTER_TEMP.MODI_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EXCEPTION_CAUSE {
                get {
                    try {
                        return ((string)(this[this.tableBANK_CASH_MASTER_TEMP.EXCEPTION_CAUSEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BANK_CASH_MASTER_TEMP\' 中資料行 \'EXCEPTION_CAUSE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBANK_CASH_MASTER_TEMP.EXCEPTION_CAUSEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODI_DTM {
                get {
                    return ((global::System.DateTime)(this[this.tableBANK_CASH_MASTER_TEMP.MODI_DTMColumn]));
                }
                set {
                    this[this.tableBANK_CASH_MASTER_TEMP.MODI_DTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPOS_CASH_INNull() {
                return this.IsNull(this.tableBANK_CASH_MASTER_TEMP.POS_CASH_INColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPOS_CASH_INNull() {
                this[this.tableBANK_CASH_MASTER_TEMP.POS_CASH_INColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNCCC_CC_INNull() {
                return this.IsNull(this.tableBANK_CASH_MASTER_TEMP.NCCC_CC_INColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNCCC_CC_INNull() {
                this[this.tableBANK_CASH_MASTER_TEMP.NCCC_CC_INColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCC_DIFF_AMTNull() {
                return this.IsNull(this.tableBANK_CASH_MASTER_TEMP.CC_DIFF_AMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCC_DIFF_AMTNull() {
                this[this.tableBANK_CASH_MASTER_TEMP.CC_DIFF_AMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEXCEPTION_CAUSENull() {
                return this.IsNull(this.tableBANK_CASH_MASTER_TEMP.EXCEPTION_CAUSEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEXCEPTION_CAUSENull() {
                this[this.tableBANK_CASH_MASTER_TEMP.EXCEPTION_CAUSEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class BANK_CASH_MASTERRow : global::System.Data.DataRow {
            
            private BANK_CASH_MASTERDataTable tableBANK_CASH_MASTER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BANK_CASH_MASTERRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBANK_CASH_MASTER = ((BANK_CASH_MASTERDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BANK_CASH_M_ID {
                get {
                    return ((string)(this[this.tableBANK_CASH_MASTER.BANK_CASH_M_IDColumn]));
                }
                set {
                    this[this.tableBANK_CASH_MASTER.BANK_CASH_M_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TRADE_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableBANK_CASH_MASTER.TRADE_DATEColumn]));
                }
                set {
                    this[this.tableBANK_CASH_MASTER.TRADE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BANK_CASH_IN {
                get {
                    return ((decimal)(this[this.tableBANK_CASH_MASTER.BANK_CASH_INColumn]));
                }
                set {
                    this[this.tableBANK_CASH_MASTER.BANK_CASH_INColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal POS_CASH_IN {
                get {
                    try {
                        return ((decimal)(this[this.tableBANK_CASH_MASTER.POS_CASH_INColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BANK_CASH_MASTER\' 中資料行 \'POS_CASH_IN\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBANK_CASH_MASTER.POS_CASH_INColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UL_BATCH_NO {
                get {
                    return ((string)(this[this.tableBANK_CASH_MASTER.UL_BATCH_NOColumn]));
                }
                set {
                    this[this.tableBANK_CASH_MASTER.UL_BATCH_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CASH_DIFF_AMT {
                get {
                    return ((decimal)(this[this.tableBANK_CASH_MASTER.CASH_DIFF_AMTColumn]));
                }
                set {
                    this[this.tableBANK_CASH_MASTER.CASH_DIFF_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime UL_DTM {
                get {
                    return ((global::System.DateTime)(this[this.tableBANK_CASH_MASTER.UL_DTMColumn]));
                }
                set {
                    this[this.tableBANK_CASH_MASTER.UL_DTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NCCC_CC_IN {
                get {
                    try {
                        return ((decimal)(this[this.tableBANK_CASH_MASTER.NCCC_CC_INColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BANK_CASH_MASTER\' 中資料行 \'NCCC_CC_IN\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBANK_CASH_MASTER.NCCC_CC_INColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CREATE_USER {
                get {
                    return ((string)(this[this.tableBANK_CASH_MASTER.CREATE_USERColumn]));
                }
                set {
                    this[this.tableBANK_CASH_MASTER.CREATE_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal POS_CC_IN {
                get {
                    return ((decimal)(this[this.tableBANK_CASH_MASTER.POS_CC_INColumn]));
                }
                set {
                    this[this.tableBANK_CASH_MASTER.POS_CC_INColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CREATE_DTM {
                get {
                    return ((global::System.DateTime)(this[this.tableBANK_CASH_MASTER.CREATE_DTMColumn]));
                }
                set {
                    this[this.tableBANK_CASH_MASTER.CREATE_DTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CC_DIFF_AMT {
                get {
                    try {
                        return ((decimal)(this[this.tableBANK_CASH_MASTER.CC_DIFF_AMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BANK_CASH_MASTER\' 中資料行 \'CC_DIFF_AMT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBANK_CASH_MASTER.CC_DIFF_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODI_USER {
                get {
                    return ((string)(this[this.tableBANK_CASH_MASTER.MODI_USERColumn]));
                }
                set {
                    this[this.tableBANK_CASH_MASTER.MODI_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EXCEPTION_CAUSE {
                get {
                    try {
                        return ((string)(this[this.tableBANK_CASH_MASTER.EXCEPTION_CAUSEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BANK_CASH_MASTER\' 中資料行 \'EXCEPTION_CAUSE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBANK_CASH_MASTER.EXCEPTION_CAUSEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODI_DTM {
                get {
                    return ((global::System.DateTime)(this[this.tableBANK_CASH_MASTER.MODI_DTMColumn]));
                }
                set {
                    this[this.tableBANK_CASH_MASTER.MODI_DTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPOS_CASH_INNull() {
                return this.IsNull(this.tableBANK_CASH_MASTER.POS_CASH_INColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPOS_CASH_INNull() {
                this[this.tableBANK_CASH_MASTER.POS_CASH_INColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNCCC_CC_INNull() {
                return this.IsNull(this.tableBANK_CASH_MASTER.NCCC_CC_INColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNCCC_CC_INNull() {
                this[this.tableBANK_CASH_MASTER.NCCC_CC_INColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCC_DIFF_AMTNull() {
                return this.IsNull(this.tableBANK_CASH_MASTER.CC_DIFF_AMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCC_DIFF_AMTNull() {
                this[this.tableBANK_CASH_MASTER.CC_DIFF_AMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEXCEPTION_CAUSENull() {
                return this.IsNull(this.tableBANK_CASH_MASTER.EXCEPTION_CAUSEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEXCEPTION_CAUSENull() {
                this[this.tableBANK_CASH_MASTER.EXCEPTION_CAUSEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class UPLOAD_TEMPRowChangeEvent : global::System.EventArgs {
            
            private UPLOAD_TEMPRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UPLOAD_TEMPRowChangeEvent(UPLOAD_TEMPRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UPLOAD_TEMPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class BANK_CASH_DETAILRowChangeEvent : global::System.EventArgs {
            
            private BANK_CASH_DETAILRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BANK_CASH_DETAILRowChangeEvent(BANK_CASH_DETAILRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BANK_CASH_DETAILRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class BANK_CASH_DETAIL_TEMPRowChangeEvent : global::System.EventArgs {
            
            private BANK_CASH_DETAIL_TEMPRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BANK_CASH_DETAIL_TEMPRowChangeEvent(BANK_CASH_DETAIL_TEMPRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BANK_CASH_DETAIL_TEMPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class BANK_CASH_MASTER_TEMPRowChangeEvent : global::System.EventArgs {
            
            private BANK_CASH_MASTER_TEMPRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BANK_CASH_MASTER_TEMPRowChangeEvent(BANK_CASH_MASTER_TEMPRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BANK_CASH_MASTER_TEMPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class BANK_CASH_MASTERRowChangeEvent : global::System.EventArgs {
            
            private BANK_CASH_MASTERRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BANK_CASH_MASTERRowChangeEvent(BANK_CASH_MASTERRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BANK_CASH_MASTERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace FET.POS.Model.DTO.CHK06_BankCash_DTOTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class UPLOAD_TEMPTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UPLOAD_TEMPTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "UPLOAD_TEMP";
            tableMapping.ColumnMappings.Add("BATCH_NO", "BATCH_NO");
            tableMapping.ColumnMappings.Add("USER_ID", "USER_ID");
            tableMapping.ColumnMappings.Add("FINC_ID", "FINC_ID");
            tableMapping.ColumnMappings.Add("STATUS", "STATUS");
            tableMapping.ColumnMappings.Add("F1", "F1");
            tableMapping.ColumnMappings.Add("F2", "F2");
            tableMapping.ColumnMappings.Add("F3", "F3");
            tableMapping.ColumnMappings.Add("F4", "F4");
            tableMapping.ColumnMappings.Add("F5", "F5");
            tableMapping.ColumnMappings.Add("F6", "F6");
            tableMapping.ColumnMappings.Add("F7", "F7");
            tableMapping.ColumnMappings.Add("F8", "F8");
            tableMapping.ColumnMappings.Add("F9", "F9");
            tableMapping.ColumnMappings.Add("F10", "F10");
            tableMapping.ColumnMappings.Add("F11", "F11");
            tableMapping.ColumnMappings.Add("F12", "F12");
            tableMapping.ColumnMappings.Add("F13", "F13");
            tableMapping.ColumnMappings.Add("F14", "F14");
            tableMapping.ColumnMappings.Add("F15", "F15");
            tableMapping.ColumnMappings.Add("F16", "F16");
            tableMapping.ColumnMappings.Add("F17", "F17");
            tableMapping.ColumnMappings.Add("F18", "F18");
            tableMapping.ColumnMappings.Add("F19", "F19");
            tableMapping.ColumnMappings.Add("F20", "F20");
            tableMapping.ColumnMappings.Add("F21", "F21");
            tableMapping.ColumnMappings.Add("F22", "F22");
            tableMapping.ColumnMappings.Add("F23", "F23");
            tableMapping.ColumnMappings.Add("F24", "F24");
            tableMapping.ColumnMappings.Add("F25", "F25");
            tableMapping.ColumnMappings.Add("F26", "F26");
            tableMapping.ColumnMappings.Add("F27", "F27");
            tableMapping.ColumnMappings.Add("F28", "F28");
            tableMapping.ColumnMappings.Add("F29", "F29");
            tableMapping.ColumnMappings.Add("F30", "F30");
            tableMapping.ColumnMappings.Add("SID", "SID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""WEBPOS"".""UPLOAD_TEMP"" (""BATCH_NO"", ""USER_ID"", ""FINC_ID"", ""STATUS"", ""F1"", ""F2"", ""F3"", ""F4"", ""F5"", ""F6"", ""F7"", ""F8"", ""F9"", ""F10"", ""F11"", ""F12"", ""F13"", ""F14"", ""F15"", ""F16"", ""F17"", ""F18"", ""F19"", ""F20"", ""F21"", ""F22"", ""F23"", ""F24"", ""F25"", ""F26"", ""F27"", ""F28"", ""F29"", ""F30"", ""SID"") VALUES (:BATCH_NO, :USER_ID, :FINC_ID, :STATUS, :F1, :F2, :F3, :F4, :F5, :F6, :F7, :F8, :F9, :F10, :F11, :F12, :F13, :F14, :F15, :F16, :F17, :F18, :F19, :F20, :F21, :F22, :F23, :F24, :F25, :F26, :F27, :F28, :F29, :F30, :SID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BATCH_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "BATCH_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("USER_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "USER_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FINC_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "FINC_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("STATUS", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "STATUS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F1", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F2", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F3", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F3", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F4", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F4", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F5", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F5", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F6", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F6", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F7", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F7", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F8", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F8", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F9", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F9", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F10", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F10", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F11", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F11", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F12", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F12", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F13", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F13", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F14", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F14", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F15", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F15", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F16", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F16", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F17", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F17", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F18", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F18", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F19", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F19", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F20", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F20", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F21", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F21", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F22", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F22", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F23", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F23", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F24", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F24", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F25", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F25", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F26", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F26", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F27", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F27", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F28", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F28", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F29", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F29", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F30", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F30", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "SID", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::FET.POS.Model.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT BATCH_NO, USER_ID, FINC_ID, STATUS, F1, F2, F3, F4, F5, F6, F7, F8, F9, F1" +
                "0, F11, F12, F13, F14, F15, F16, F17, F18, F19, F20, F21, F22, F23, F24, F25, F2" +
                "6, F27, F28, F29, F30, SID FROM WEBPOS.UPLOAD_TEMP";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(CHK06_BankCash_DTO.UPLOAD_TEMPDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual CHK06_BankCash_DTO.UPLOAD_TEMPDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            CHK06_BankCash_DTO.UPLOAD_TEMPDataTable dataTable = new CHK06_BankCash_DTO.UPLOAD_TEMPDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(CHK06_BankCash_DTO.UPLOAD_TEMPDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(CHK06_BankCash_DTO dataSet) {
            return this.Adapter.Update(dataSet, "UPLOAD_TEMP");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string BATCH_NO, 
                    string USER_ID, 
                    string FINC_ID, 
                    string STATUS, 
                    string F1, 
                    string F2, 
                    string F3, 
                    string F4, 
                    string F5, 
                    string F6, 
                    string F7, 
                    string F8, 
                    string F9, 
                    string F10, 
                    string F11, 
                    string F12, 
                    string F13, 
                    string F14, 
                    string F15, 
                    string F16, 
                    string F17, 
                    string F18, 
                    string F19, 
                    string F20, 
                    string F21, 
                    string F22, 
                    string F23, 
                    string F24, 
                    string F25, 
                    string F26, 
                    string F27, 
                    string F28, 
                    string F29, 
                    string F30, 
                    string SID) {
            if ((BATCH_NO == null)) {
                throw new global::System.ArgumentNullException("BATCH_NO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(BATCH_NO));
            }
            if ((USER_ID == null)) {
                throw new global::System.ArgumentNullException("USER_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(USER_ID));
            }
            if ((FINC_ID == null)) {
                throw new global::System.ArgumentNullException("FINC_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(FINC_ID));
            }
            if ((STATUS == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(STATUS));
            }
            if ((F1 == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(F1));
            }
            if ((F2 == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(F2));
            }
            if ((F3 == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(F3));
            }
            if ((F4 == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(F4));
            }
            if ((F5 == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(F5));
            }
            if ((F6 == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(F6));
            }
            if ((F7 == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(F7));
            }
            if ((F8 == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(F8));
            }
            if ((F9 == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(F9));
            }
            if ((F10 == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(F10));
            }
            if ((F11 == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(F11));
            }
            if ((F12 == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(F12));
            }
            if ((F13 == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(F13));
            }
            if ((F14 == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(F14));
            }
            if ((F15 == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(F15));
            }
            if ((F16 == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(F16));
            }
            if ((F17 == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(F17));
            }
            if ((F18 == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(F18));
            }
            if ((F19 == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(F19));
            }
            if ((F20 == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(F20));
            }
            if ((F21 == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(F21));
            }
            if ((F22 == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(F22));
            }
            if ((F23 == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(F23));
            }
            if ((F24 == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(F24));
            }
            if ((F25 == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(F25));
            }
            if ((F26 == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(F26));
            }
            if ((F27 == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(F27));
            }
            if ((F28 == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(F28));
            }
            if ((F29 == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(F29));
            }
            if ((F30 == null)) {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(F30));
            }
            if ((SID == null)) {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(SID));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BANK_CASH_DETAILTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public BANK_CASH_DETAILTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "BANK_CASH_DETAIL";
            tableMapping.ColumnMappings.Add("BANK_CASH_D_ID", "BANK_CASH_D_ID");
            tableMapping.ColumnMappings.Add("TRADE_DATE", "TRADE_DATE");
            tableMapping.ColumnMappings.Add("BANK_CASH_IN", "BANK_CASH_IN");
            tableMapping.ColumnMappings.Add("STORE_NO", "STORE_NO");
            tableMapping.ColumnMappings.Add("POS_CASH_IN", "POS_CASH_IN");
            tableMapping.ColumnMappings.Add("UL_BATCH_NO", "UL_BATCH_NO");
            tableMapping.ColumnMappings.Add("CASH_DIFF_AMT", "CASH_DIFF_AMT");
            tableMapping.ColumnMappings.Add("UL_DTM", "UL_DTM");
            tableMapping.ColumnMappings.Add("NCCC_CC_IN", "NCCC_CC_IN");
            tableMapping.ColumnMappings.Add("CREATE_USER", "CREATE_USER");
            tableMapping.ColumnMappings.Add("POS_CC_IN", "POS_CC_IN");
            tableMapping.ColumnMappings.Add("CREATE_DTM", "CREATE_DTM");
            tableMapping.ColumnMappings.Add("CC_DIFF_AMT", "CC_DIFF_AMT");
            tableMapping.ColumnMappings.Add("MODI_USER", "MODI_USER");
            tableMapping.ColumnMappings.Add("EXCEPTION_CAUSE", "EXCEPTION_CAUSE");
            tableMapping.ColumnMappings.Add("MODI_DTM", "MODI_DTM");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""WEBPOS"".""BANK_CASH_DETAIL"" WHERE ((""BANK_CASH_D_ID"" = :Original_BANK_CASH_D_ID) AND (""TRADE_DATE"" = :Original_TRADE_DATE) AND (""BANK_CASH_IN"" = :Original_BANK_CASH_IN) AND (""STORE_NO"" = :Original_STORE_NO) AND ((:IsNull_POS_CASH_IN = 1 AND ""POS_CASH_IN"" IS NULL) OR (""POS_CASH_IN"" = :Original_POS_CASH_IN)) AND (""UL_BATCH_NO"" = :Original_UL_BATCH_NO) AND (""CASH_DIFF_AMT"" = :Original_CASH_DIFF_AMT) AND (""UL_DTM"" = :Original_UL_DTM) AND ((:IsNull_NCCC_CC_IN = 1 AND ""NCCC_CC_IN"" IS NULL) OR (""NCCC_CC_IN"" = :Original_NCCC_CC_IN)) AND (""CREATE_USER"" = :Original_CREATE_USER) AND (""POS_CC_IN"" = :Original_POS_CC_IN) AND (""CREATE_DTM"" = :Original_CREATE_DTM) AND ((:IsNull_CC_DIFF_AMT = 1 AND ""CC_DIFF_AMT"" IS NULL) OR (""CC_DIFF_AMT"" = :Original_CC_DIFF_AMT)) AND (""MODI_USER"" = :Original_MODI_USER) AND ((:IsNull_EXCEPTION_CAUSE = 1 AND ""EXCEPTION_CAUSE"" IS NULL) OR (""EXCEPTION_CAUSE"" = :Original_EXCEPTION_CAUSE)) AND (""MODI_DTM"" = :Original_MODI_DTM))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_BANK_CASH_D_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "BANK_CASH_D_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_TRADE_DATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "TRADE_DATE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_BANK_CASH_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "BANK_CASH_IN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_STORE_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "STORE_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_POS_CASH_IN", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "POS_CASH_IN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_POS_CASH_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "POS_CASH_IN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_UL_BATCH_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "UL_BATCH_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CASH_DIFF_AMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "CASH_DIFF_AMT", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_UL_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "UL_DTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_NCCC_CC_IN", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "NCCC_CC_IN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_NCCC_CC_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NCCC_CC_IN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CREATE_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CREATE_USER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_POS_CC_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "POS_CC_IN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CREATE_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "CREATE_DTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_CC_DIFF_AMT", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "CC_DIFF_AMT", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CC_DIFF_AMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "CC_DIFF_AMT", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MODI_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MODI_USER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_EXCEPTION_CAUSE", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "EXCEPTION_CAUSE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_EXCEPTION_CAUSE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "EXCEPTION_CAUSE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MODI_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "MODI_DTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""WEBPOS"".""BANK_CASH_DETAIL"" (""BANK_CASH_D_ID"", ""TRADE_DATE"", ""BANK_CASH_IN"", ""STORE_NO"", ""POS_CASH_IN"", ""UL_BATCH_NO"", ""CASH_DIFF_AMT"", ""UL_DTM"", ""NCCC_CC_IN"", ""CREATE_USER"", ""POS_CC_IN"", ""CREATE_DTM"", ""CC_DIFF_AMT"", ""MODI_USER"", ""EXCEPTION_CAUSE"", ""MODI_DTM"") VALUES (:BANK_CASH_D_ID, :TRADE_DATE, :BANK_CASH_IN, :STORE_NO, :POS_CASH_IN, :UL_BATCH_NO, :CASH_DIFF_AMT, :UL_DTM, :NCCC_CC_IN, :CREATE_USER, :POS_CC_IN, :CREATE_DTM, :CC_DIFF_AMT, :MODI_USER, :EXCEPTION_CAUSE, :MODI_DTM)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BANK_CASH_D_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "BANK_CASH_D_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TRADE_DATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "TRADE_DATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BANK_CASH_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "BANK_CASH_IN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("STORE_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "STORE_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("POS_CASH_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "POS_CASH_IN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("UL_BATCH_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "UL_BATCH_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CASH_DIFF_AMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "CASH_DIFF_AMT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("UL_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "UL_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NCCC_CC_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NCCC_CC_IN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CREATE_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CREATE_USER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("POS_CC_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "POS_CC_IN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CREATE_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "CREATE_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CC_DIFF_AMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "CC_DIFF_AMT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MODI_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MODI_USER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("EXCEPTION_CAUSE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "EXCEPTION_CAUSE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MODI_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "MODI_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""WEBPOS"".""BANK_CASH_DETAIL"" SET ""BANK_CASH_D_ID"" = :BANK_CASH_D_ID, ""TRADE_DATE"" = :TRADE_DATE, ""BANK_CASH_IN"" = :BANK_CASH_IN, ""STORE_NO"" = :STORE_NO, ""POS_CASH_IN"" = :POS_CASH_IN, ""UL_BATCH_NO"" = :UL_BATCH_NO, ""CASH_DIFF_AMT"" = :CASH_DIFF_AMT, ""UL_DTM"" = :UL_DTM, ""NCCC_CC_IN"" = :NCCC_CC_IN, ""CREATE_USER"" = :CREATE_USER, ""POS_CC_IN"" = :POS_CC_IN, ""CREATE_DTM"" = :CREATE_DTM, ""CC_DIFF_AMT"" = :CC_DIFF_AMT, ""MODI_USER"" = :MODI_USER, ""EXCEPTION_CAUSE"" = :EXCEPTION_CAUSE, ""MODI_DTM"" = :MODI_DTM WHERE ((""BANK_CASH_D_ID"" = :Original_BANK_CASH_D_ID) AND (""TRADE_DATE"" = :Original_TRADE_DATE) AND (""BANK_CASH_IN"" = :Original_BANK_CASH_IN) AND (""STORE_NO"" = :Original_STORE_NO) AND ((:IsNull_POS_CASH_IN = 1 AND ""POS_CASH_IN"" IS NULL) OR (""POS_CASH_IN"" = :Original_POS_CASH_IN)) AND (""UL_BATCH_NO"" = :Original_UL_BATCH_NO) AND (""CASH_DIFF_AMT"" = :Original_CASH_DIFF_AMT) AND (""UL_DTM"" = :Original_UL_DTM) AND ((:IsNull_NCCC_CC_IN = 1 AND ""NCCC_CC_IN"" IS NULL) OR (""NCCC_CC_IN"" = :Original_NCCC_CC_IN)) AND (""CREATE_USER"" = :Original_CREATE_USER) AND (""POS_CC_IN"" = :Original_POS_CC_IN) AND (""CREATE_DTM"" = :Original_CREATE_DTM) AND ((:IsNull_CC_DIFF_AMT = 1 AND ""CC_DIFF_AMT"" IS NULL) OR (""CC_DIFF_AMT"" = :Original_CC_DIFF_AMT)) AND (""MODI_USER"" = :Original_MODI_USER) AND ((:IsNull_EXCEPTION_CAUSE = 1 AND ""EXCEPTION_CAUSE"" IS NULL) OR (""EXCEPTION_CAUSE"" = :Original_EXCEPTION_CAUSE)) AND (""MODI_DTM"" = :Original_MODI_DTM))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BANK_CASH_D_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "BANK_CASH_D_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TRADE_DATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "TRADE_DATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BANK_CASH_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "BANK_CASH_IN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("STORE_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "STORE_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("POS_CASH_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "POS_CASH_IN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("UL_BATCH_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "UL_BATCH_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CASH_DIFF_AMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "CASH_DIFF_AMT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("UL_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "UL_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NCCC_CC_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NCCC_CC_IN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CREATE_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CREATE_USER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("POS_CC_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "POS_CC_IN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CREATE_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "CREATE_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CC_DIFF_AMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "CC_DIFF_AMT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MODI_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MODI_USER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("EXCEPTION_CAUSE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "EXCEPTION_CAUSE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MODI_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "MODI_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_BANK_CASH_D_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "BANK_CASH_D_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_TRADE_DATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "TRADE_DATE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_BANK_CASH_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "BANK_CASH_IN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_STORE_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "STORE_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_POS_CASH_IN", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "POS_CASH_IN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_POS_CASH_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "POS_CASH_IN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_UL_BATCH_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "UL_BATCH_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CASH_DIFF_AMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "CASH_DIFF_AMT", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_UL_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "UL_DTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_NCCC_CC_IN", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "NCCC_CC_IN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_NCCC_CC_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NCCC_CC_IN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CREATE_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CREATE_USER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_POS_CC_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "POS_CC_IN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CREATE_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "CREATE_DTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_CC_DIFF_AMT", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "CC_DIFF_AMT", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CC_DIFF_AMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "CC_DIFF_AMT", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MODI_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MODI_USER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_EXCEPTION_CAUSE", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "EXCEPTION_CAUSE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_EXCEPTION_CAUSE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "EXCEPTION_CAUSE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MODI_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "MODI_DTM", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::FET.POS.Model.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT BANK_CASH_D_ID, TRADE_DATE, BANK_CASH_IN, STORE_NO, POS_CASH_IN, UL_BATCH_" +
                "NO, CASH_DIFF_AMT, UL_DTM, NCCC_CC_IN, CREATE_USER, POS_CC_IN, CREATE_DTM, CC_DI" +
                "FF_AMT, MODI_USER, EXCEPTION_CAUSE, MODI_DTM FROM WEBPOS.BANK_CASH_DETAIL";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(CHK06_BankCash_DTO.BANK_CASH_DETAILDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual CHK06_BankCash_DTO.BANK_CASH_DETAILDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            CHK06_BankCash_DTO.BANK_CASH_DETAILDataTable dataTable = new CHK06_BankCash_DTO.BANK_CASH_DETAILDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(CHK06_BankCash_DTO.BANK_CASH_DETAILDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(CHK06_BankCash_DTO dataSet) {
            return this.Adapter.Update(dataSet, "BANK_CASH_DETAIL");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_BANK_CASH_D_ID, 
                    System.DateTime Original_TRADE_DATE, 
                    decimal Original_BANK_CASH_IN, 
                    string Original_STORE_NO, 
                    global::System.Nullable<decimal> Original_POS_CASH_IN, 
                    string Original_UL_BATCH_NO, 
                    decimal Original_CASH_DIFF_AMT, 
                    System.DateTime Original_UL_DTM, 
                    global::System.Nullable<decimal> Original_NCCC_CC_IN, 
                    string Original_CREATE_USER, 
                    decimal Original_POS_CC_IN, 
                    System.DateTime Original_CREATE_DTM, 
                    global::System.Nullable<decimal> Original_CC_DIFF_AMT, 
                    string Original_MODI_USER, 
                    string Original_EXCEPTION_CAUSE, 
                    System.DateTime Original_MODI_DTM) {
            if ((Original_BANK_CASH_D_ID == null)) {
                throw new global::System.ArgumentNullException("Original_BANK_CASH_D_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_BANK_CASH_D_ID));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_TRADE_DATE));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_BANK_CASH_IN));
            if ((Original_STORE_NO == null)) {
                throw new global::System.ArgumentNullException("Original_STORE_NO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_STORE_NO));
            }
            if ((Original_POS_CASH_IN.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_POS_CASH_IN.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_UL_BATCH_NO == null)) {
                throw new global::System.ArgumentNullException("Original_UL_BATCH_NO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_UL_BATCH_NO));
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((decimal)(Original_CASH_DIFF_AMT));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_UL_DTM));
            if ((Original_NCCC_CC_IN.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_NCCC_CC_IN.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_CREATE_USER == null)) {
                throw new global::System.ArgumentNullException("Original_CREATE_USER");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_CREATE_USER));
            }
            this.Adapter.DeleteCommand.Parameters[12].Value = ((decimal)(Original_POS_CC_IN));
            this.Adapter.DeleteCommand.Parameters[13].Value = ((System.DateTime)(Original_CREATE_DTM));
            if ((Original_CC_DIFF_AMT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((decimal)(Original_CC_DIFF_AMT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_MODI_USER == null)) {
                throw new global::System.ArgumentNullException("Original_MODI_USER");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_MODI_USER));
            }
            if ((Original_EXCEPTION_CAUSE == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_EXCEPTION_CAUSE));
            }
            this.Adapter.DeleteCommand.Parameters[19].Value = ((System.DateTime)(Original_MODI_DTM));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string BANK_CASH_D_ID, 
                    System.DateTime TRADE_DATE, 
                    decimal BANK_CASH_IN, 
                    string STORE_NO, 
                    global::System.Nullable<decimal> POS_CASH_IN, 
                    string UL_BATCH_NO, 
                    decimal CASH_DIFF_AMT, 
                    System.DateTime UL_DTM, 
                    global::System.Nullable<decimal> NCCC_CC_IN, 
                    string CREATE_USER, 
                    decimal POS_CC_IN, 
                    System.DateTime CREATE_DTM, 
                    global::System.Nullable<decimal> CC_DIFF_AMT, 
                    string MODI_USER, 
                    string EXCEPTION_CAUSE, 
                    System.DateTime MODI_DTM) {
            if ((BANK_CASH_D_ID == null)) {
                throw new global::System.ArgumentNullException("BANK_CASH_D_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(BANK_CASH_D_ID));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(TRADE_DATE));
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(BANK_CASH_IN));
            if ((STORE_NO == null)) {
                throw new global::System.ArgumentNullException("STORE_NO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(STORE_NO));
            }
            if ((POS_CASH_IN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(POS_CASH_IN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((UL_BATCH_NO == null)) {
                throw new global::System.ArgumentNullException("UL_BATCH_NO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(UL_BATCH_NO));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(CASH_DIFF_AMT));
            this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(UL_DTM));
            if ((NCCC_CC_IN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(NCCC_CC_IN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((CREATE_USER == null)) {
                throw new global::System.ArgumentNullException("CREATE_USER");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(CREATE_USER));
            }
            this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(POS_CC_IN));
            this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(CREATE_DTM));
            if ((CC_DIFF_AMT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(CC_DIFF_AMT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((MODI_USER == null)) {
                throw new global::System.ArgumentNullException("MODI_USER");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(MODI_USER));
            }
            if ((EXCEPTION_CAUSE == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(EXCEPTION_CAUSE));
            }
            this.Adapter.InsertCommand.Parameters[15].Value = ((System.DateTime)(MODI_DTM));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string BANK_CASH_D_ID, 
                    System.DateTime TRADE_DATE, 
                    decimal BANK_CASH_IN, 
                    string STORE_NO, 
                    global::System.Nullable<decimal> POS_CASH_IN, 
                    string UL_BATCH_NO, 
                    decimal CASH_DIFF_AMT, 
                    System.DateTime UL_DTM, 
                    global::System.Nullable<decimal> NCCC_CC_IN, 
                    string CREATE_USER, 
                    decimal POS_CC_IN, 
                    System.DateTime CREATE_DTM, 
                    global::System.Nullable<decimal> CC_DIFF_AMT, 
                    string MODI_USER, 
                    string EXCEPTION_CAUSE, 
                    System.DateTime MODI_DTM, 
                    string Original_BANK_CASH_D_ID, 
                    System.DateTime Original_TRADE_DATE, 
                    decimal Original_BANK_CASH_IN, 
                    string Original_STORE_NO, 
                    global::System.Nullable<decimal> Original_POS_CASH_IN, 
                    string Original_UL_BATCH_NO, 
                    decimal Original_CASH_DIFF_AMT, 
                    System.DateTime Original_UL_DTM, 
                    global::System.Nullable<decimal> Original_NCCC_CC_IN, 
                    string Original_CREATE_USER, 
                    decimal Original_POS_CC_IN, 
                    System.DateTime Original_CREATE_DTM, 
                    global::System.Nullable<decimal> Original_CC_DIFF_AMT, 
                    string Original_MODI_USER, 
                    string Original_EXCEPTION_CAUSE, 
                    System.DateTime Original_MODI_DTM) {
            if ((BANK_CASH_D_ID == null)) {
                throw new global::System.ArgumentNullException("BANK_CASH_D_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(BANK_CASH_D_ID));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(TRADE_DATE));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(BANK_CASH_IN));
            if ((STORE_NO == null)) {
                throw new global::System.ArgumentNullException("STORE_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(STORE_NO));
            }
            if ((POS_CASH_IN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(POS_CASH_IN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((UL_BATCH_NO == null)) {
                throw new global::System.ArgumentNullException("UL_BATCH_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(UL_BATCH_NO));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(CASH_DIFF_AMT));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(UL_DTM));
            if ((NCCC_CC_IN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(NCCC_CC_IN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((CREATE_USER == null)) {
                throw new global::System.ArgumentNullException("CREATE_USER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(CREATE_USER));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(POS_CC_IN));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(CREATE_DTM));
            if ((CC_DIFF_AMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(CC_DIFF_AMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((MODI_USER == null)) {
                throw new global::System.ArgumentNullException("MODI_USER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(MODI_USER));
            }
            if ((EXCEPTION_CAUSE == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(EXCEPTION_CAUSE));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(MODI_DTM));
            if ((Original_BANK_CASH_D_ID == null)) {
                throw new global::System.ArgumentNullException("Original_BANK_CASH_D_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_BANK_CASH_D_ID));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((System.DateTime)(Original_TRADE_DATE));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(Original_BANK_CASH_IN));
            if ((Original_STORE_NO == null)) {
                throw new global::System.ArgumentNullException("Original_STORE_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_STORE_NO));
            }
            if ((Original_POS_CASH_IN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(Original_POS_CASH_IN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_UL_BATCH_NO == null)) {
                throw new global::System.ArgumentNullException("Original_UL_BATCH_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_UL_BATCH_NO));
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(Original_CASH_DIFF_AMT));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((System.DateTime)(Original_UL_DTM));
            if ((Original_NCCC_CC_IN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((decimal)(Original_NCCC_CC_IN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_CREATE_USER == null)) {
                throw new global::System.ArgumentNullException("Original_CREATE_USER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_CREATE_USER));
            }
            this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(Original_POS_CC_IN));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((System.DateTime)(Original_CREATE_DTM));
            if ((Original_CC_DIFF_AMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((decimal)(Original_CC_DIFF_AMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_MODI_USER == null)) {
                throw new global::System.ArgumentNullException("Original_MODI_USER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_MODI_USER));
            }
            if ((Original_EXCEPTION_CAUSE == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_EXCEPTION_CAUSE));
            }
            this.Adapter.UpdateCommand.Parameters[35].Value = ((System.DateTime)(Original_MODI_DTM));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime TRADE_DATE, 
                    decimal BANK_CASH_IN, 
                    string STORE_NO, 
                    global::System.Nullable<decimal> POS_CASH_IN, 
                    string UL_BATCH_NO, 
                    decimal CASH_DIFF_AMT, 
                    System.DateTime UL_DTM, 
                    global::System.Nullable<decimal> NCCC_CC_IN, 
                    string CREATE_USER, 
                    decimal POS_CC_IN, 
                    System.DateTime CREATE_DTM, 
                    global::System.Nullable<decimal> CC_DIFF_AMT, 
                    string MODI_USER, 
                    string EXCEPTION_CAUSE, 
                    System.DateTime MODI_DTM, 
                    string Original_BANK_CASH_D_ID, 
                    System.DateTime Original_TRADE_DATE, 
                    decimal Original_BANK_CASH_IN, 
                    string Original_STORE_NO, 
                    global::System.Nullable<decimal> Original_POS_CASH_IN, 
                    string Original_UL_BATCH_NO, 
                    decimal Original_CASH_DIFF_AMT, 
                    System.DateTime Original_UL_DTM, 
                    global::System.Nullable<decimal> Original_NCCC_CC_IN, 
                    string Original_CREATE_USER, 
                    decimal Original_POS_CC_IN, 
                    System.DateTime Original_CREATE_DTM, 
                    global::System.Nullable<decimal> Original_CC_DIFF_AMT, 
                    string Original_MODI_USER, 
                    string Original_EXCEPTION_CAUSE, 
                    System.DateTime Original_MODI_DTM) {
            return this.Update(Original_BANK_CASH_D_ID, TRADE_DATE, BANK_CASH_IN, STORE_NO, POS_CASH_IN, UL_BATCH_NO, CASH_DIFF_AMT, UL_DTM, NCCC_CC_IN, CREATE_USER, POS_CC_IN, CREATE_DTM, CC_DIFF_AMT, MODI_USER, EXCEPTION_CAUSE, MODI_DTM, Original_BANK_CASH_D_ID, Original_TRADE_DATE, Original_BANK_CASH_IN, Original_STORE_NO, Original_POS_CASH_IN, Original_UL_BATCH_NO, Original_CASH_DIFF_AMT, Original_UL_DTM, Original_NCCC_CC_IN, Original_CREATE_USER, Original_POS_CC_IN, Original_CREATE_DTM, Original_CC_DIFF_AMT, Original_MODI_USER, Original_EXCEPTION_CAUSE, Original_MODI_DTM);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BANK_CASH_DETAIL_TEMPTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public BANK_CASH_DETAIL_TEMPTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "BANK_CASH_DETAIL_TEMP";
            tableMapping.ColumnMappings.Add("BANK_CASH_D_ID", "BANK_CASH_D_ID");
            tableMapping.ColumnMappings.Add("TRADE_DATE", "TRADE_DATE");
            tableMapping.ColumnMappings.Add("BANK_CASH_IN", "BANK_CASH_IN");
            tableMapping.ColumnMappings.Add("STORE_NO", "STORE_NO");
            tableMapping.ColumnMappings.Add("POS_CASH_IN", "POS_CASH_IN");
            tableMapping.ColumnMappings.Add("UL_BATCH_NO", "UL_BATCH_NO");
            tableMapping.ColumnMappings.Add("CASH_DIFF_AMT", "CASH_DIFF_AMT");
            tableMapping.ColumnMappings.Add("UL_DTM", "UL_DTM");
            tableMapping.ColumnMappings.Add("NCCC_CC_IN", "NCCC_CC_IN");
            tableMapping.ColumnMappings.Add("CREATE_USER", "CREATE_USER");
            tableMapping.ColumnMappings.Add("POS_CC_IN", "POS_CC_IN");
            tableMapping.ColumnMappings.Add("CREATE_DTM", "CREATE_DTM");
            tableMapping.ColumnMappings.Add("CC_DIFF_AMT", "CC_DIFF_AMT");
            tableMapping.ColumnMappings.Add("MODI_USER", "MODI_USER");
            tableMapping.ColumnMappings.Add("EXCEPTION_CAUSE", "EXCEPTION_CAUSE");
            tableMapping.ColumnMappings.Add("MODI_DTM", "MODI_DTM");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""WEBPOS"".""BANK_CASH_DETAIL_TEMP"" WHERE ((""BANK_CASH_D_ID"" = :Original_BANK_CASH_D_ID) AND (""TRADE_DATE"" = :Original_TRADE_DATE) AND (""BANK_CASH_IN"" = :Original_BANK_CASH_IN) AND (""STORE_NO"" = :Original_STORE_NO) AND ((:IsNull_POS_CASH_IN = 1 AND ""POS_CASH_IN"" IS NULL) OR (""POS_CASH_IN"" = :Original_POS_CASH_IN)) AND (""UL_BATCH_NO"" = :Original_UL_BATCH_NO) AND (""CASH_DIFF_AMT"" = :Original_CASH_DIFF_AMT) AND (""UL_DTM"" = :Original_UL_DTM) AND ((:IsNull_NCCC_CC_IN = 1 AND ""NCCC_CC_IN"" IS NULL) OR (""NCCC_CC_IN"" = :Original_NCCC_CC_IN)) AND (""CREATE_USER"" = :Original_CREATE_USER) AND (""POS_CC_IN"" = :Original_POS_CC_IN) AND (""CREATE_DTM"" = :Original_CREATE_DTM) AND ((:IsNull_CC_DIFF_AMT = 1 AND ""CC_DIFF_AMT"" IS NULL) OR (""CC_DIFF_AMT"" = :Original_CC_DIFF_AMT)) AND (""MODI_USER"" = :Original_MODI_USER) AND ((:IsNull_EXCEPTION_CAUSE = 1 AND ""EXCEPTION_CAUSE"" IS NULL) OR (""EXCEPTION_CAUSE"" = :Original_EXCEPTION_CAUSE)) AND (""MODI_DTM"" = :Original_MODI_DTM))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_BANK_CASH_D_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "BANK_CASH_D_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_TRADE_DATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "TRADE_DATE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_BANK_CASH_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "BANK_CASH_IN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_STORE_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "STORE_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_POS_CASH_IN", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "POS_CASH_IN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_POS_CASH_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "POS_CASH_IN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_UL_BATCH_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "UL_BATCH_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CASH_DIFF_AMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "CASH_DIFF_AMT", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_UL_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "UL_DTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_NCCC_CC_IN", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "NCCC_CC_IN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_NCCC_CC_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NCCC_CC_IN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CREATE_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CREATE_USER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_POS_CC_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "POS_CC_IN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CREATE_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "CREATE_DTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_CC_DIFF_AMT", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "CC_DIFF_AMT", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CC_DIFF_AMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "CC_DIFF_AMT", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MODI_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MODI_USER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_EXCEPTION_CAUSE", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "EXCEPTION_CAUSE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_EXCEPTION_CAUSE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "EXCEPTION_CAUSE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MODI_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "MODI_DTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""WEBPOS"".""BANK_CASH_DETAIL_TEMP"" (""BANK_CASH_D_ID"", ""TRADE_DATE"", ""BANK_CASH_IN"", ""STORE_NO"", ""POS_CASH_IN"", ""UL_BATCH_NO"", ""CASH_DIFF_AMT"", ""UL_DTM"", ""NCCC_CC_IN"", ""CREATE_USER"", ""POS_CC_IN"", ""CREATE_DTM"", ""CC_DIFF_AMT"", ""MODI_USER"", ""EXCEPTION_CAUSE"", ""MODI_DTM"") VALUES (:BANK_CASH_D_ID, :TRADE_DATE, :BANK_CASH_IN, :STORE_NO, :POS_CASH_IN, :UL_BATCH_NO, :CASH_DIFF_AMT, :UL_DTM, :NCCC_CC_IN, :CREATE_USER, :POS_CC_IN, :CREATE_DTM, :CC_DIFF_AMT, :MODI_USER, :EXCEPTION_CAUSE, :MODI_DTM)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BANK_CASH_D_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "BANK_CASH_D_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TRADE_DATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "TRADE_DATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BANK_CASH_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "BANK_CASH_IN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("STORE_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "STORE_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("POS_CASH_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "POS_CASH_IN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("UL_BATCH_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "UL_BATCH_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CASH_DIFF_AMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "CASH_DIFF_AMT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("UL_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "UL_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NCCC_CC_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NCCC_CC_IN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CREATE_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CREATE_USER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("POS_CC_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "POS_CC_IN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CREATE_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "CREATE_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CC_DIFF_AMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "CC_DIFF_AMT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MODI_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MODI_USER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("EXCEPTION_CAUSE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "EXCEPTION_CAUSE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MODI_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "MODI_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""WEBPOS"".""BANK_CASH_DETAIL_TEMP"" SET ""BANK_CASH_D_ID"" = :BANK_CASH_D_ID, ""TRADE_DATE"" = :TRADE_DATE, ""BANK_CASH_IN"" = :BANK_CASH_IN, ""STORE_NO"" = :STORE_NO, ""POS_CASH_IN"" = :POS_CASH_IN, ""UL_BATCH_NO"" = :UL_BATCH_NO, ""CASH_DIFF_AMT"" = :CASH_DIFF_AMT, ""UL_DTM"" = :UL_DTM, ""NCCC_CC_IN"" = :NCCC_CC_IN, ""CREATE_USER"" = :CREATE_USER, ""POS_CC_IN"" = :POS_CC_IN, ""CREATE_DTM"" = :CREATE_DTM, ""CC_DIFF_AMT"" = :CC_DIFF_AMT, ""MODI_USER"" = :MODI_USER, ""EXCEPTION_CAUSE"" = :EXCEPTION_CAUSE, ""MODI_DTM"" = :MODI_DTM WHERE ((""BANK_CASH_D_ID"" = :Original_BANK_CASH_D_ID) AND (""TRADE_DATE"" = :Original_TRADE_DATE) AND (""BANK_CASH_IN"" = :Original_BANK_CASH_IN) AND (""STORE_NO"" = :Original_STORE_NO) AND ((:IsNull_POS_CASH_IN = 1 AND ""POS_CASH_IN"" IS NULL) OR (""POS_CASH_IN"" = :Original_POS_CASH_IN)) AND (""UL_BATCH_NO"" = :Original_UL_BATCH_NO) AND (""CASH_DIFF_AMT"" = :Original_CASH_DIFF_AMT) AND (""UL_DTM"" = :Original_UL_DTM) AND ((:IsNull_NCCC_CC_IN = 1 AND ""NCCC_CC_IN"" IS NULL) OR (""NCCC_CC_IN"" = :Original_NCCC_CC_IN)) AND (""CREATE_USER"" = :Original_CREATE_USER) AND (""POS_CC_IN"" = :Original_POS_CC_IN) AND (""CREATE_DTM"" = :Original_CREATE_DTM) AND ((:IsNull_CC_DIFF_AMT = 1 AND ""CC_DIFF_AMT"" IS NULL) OR (""CC_DIFF_AMT"" = :Original_CC_DIFF_AMT)) AND (""MODI_USER"" = :Original_MODI_USER) AND ((:IsNull_EXCEPTION_CAUSE = 1 AND ""EXCEPTION_CAUSE"" IS NULL) OR (""EXCEPTION_CAUSE"" = :Original_EXCEPTION_CAUSE)) AND (""MODI_DTM"" = :Original_MODI_DTM))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BANK_CASH_D_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "BANK_CASH_D_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TRADE_DATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "TRADE_DATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BANK_CASH_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "BANK_CASH_IN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("STORE_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "STORE_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("POS_CASH_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "POS_CASH_IN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("UL_BATCH_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "UL_BATCH_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CASH_DIFF_AMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "CASH_DIFF_AMT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("UL_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "UL_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NCCC_CC_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NCCC_CC_IN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CREATE_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CREATE_USER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("POS_CC_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "POS_CC_IN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CREATE_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "CREATE_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CC_DIFF_AMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "CC_DIFF_AMT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MODI_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MODI_USER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("EXCEPTION_CAUSE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "EXCEPTION_CAUSE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MODI_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "MODI_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_BANK_CASH_D_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "BANK_CASH_D_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_TRADE_DATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "TRADE_DATE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_BANK_CASH_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "BANK_CASH_IN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_STORE_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "STORE_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_POS_CASH_IN", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "POS_CASH_IN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_POS_CASH_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "POS_CASH_IN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_UL_BATCH_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "UL_BATCH_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CASH_DIFF_AMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "CASH_DIFF_AMT", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_UL_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "UL_DTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_NCCC_CC_IN", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "NCCC_CC_IN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_NCCC_CC_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NCCC_CC_IN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CREATE_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CREATE_USER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_POS_CC_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "POS_CC_IN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CREATE_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "CREATE_DTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_CC_DIFF_AMT", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "CC_DIFF_AMT", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CC_DIFF_AMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "CC_DIFF_AMT", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MODI_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MODI_USER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_EXCEPTION_CAUSE", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "EXCEPTION_CAUSE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_EXCEPTION_CAUSE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "EXCEPTION_CAUSE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MODI_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "MODI_DTM", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::FET.POS.Model.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT BANK_CASH_D_ID, TRADE_DATE, BANK_CASH_IN, STORE_NO, POS_CASH_IN, UL_BATCH_" +
                "NO, CASH_DIFF_AMT, UL_DTM, NCCC_CC_IN, CREATE_USER, POS_CC_IN, CREATE_DTM, CC_DI" +
                "FF_AMT, MODI_USER, EXCEPTION_CAUSE, MODI_DTM FROM WEBPOS.BANK_CASH_DETAIL_TEMP";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(CHK06_BankCash_DTO.BANK_CASH_DETAIL_TEMPDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual CHK06_BankCash_DTO.BANK_CASH_DETAIL_TEMPDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            CHK06_BankCash_DTO.BANK_CASH_DETAIL_TEMPDataTable dataTable = new CHK06_BankCash_DTO.BANK_CASH_DETAIL_TEMPDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(CHK06_BankCash_DTO.BANK_CASH_DETAIL_TEMPDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(CHK06_BankCash_DTO dataSet) {
            return this.Adapter.Update(dataSet, "BANK_CASH_DETAIL_TEMP");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_BANK_CASH_D_ID, 
                    System.DateTime Original_TRADE_DATE, 
                    decimal Original_BANK_CASH_IN, 
                    string Original_STORE_NO, 
                    global::System.Nullable<decimal> Original_POS_CASH_IN, 
                    string Original_UL_BATCH_NO, 
                    decimal Original_CASH_DIFF_AMT, 
                    System.DateTime Original_UL_DTM, 
                    global::System.Nullable<decimal> Original_NCCC_CC_IN, 
                    string Original_CREATE_USER, 
                    decimal Original_POS_CC_IN, 
                    System.DateTime Original_CREATE_DTM, 
                    global::System.Nullable<decimal> Original_CC_DIFF_AMT, 
                    string Original_MODI_USER, 
                    string Original_EXCEPTION_CAUSE, 
                    System.DateTime Original_MODI_DTM) {
            if ((Original_BANK_CASH_D_ID == null)) {
                throw new global::System.ArgumentNullException("Original_BANK_CASH_D_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_BANK_CASH_D_ID));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_TRADE_DATE));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_BANK_CASH_IN));
            if ((Original_STORE_NO == null)) {
                throw new global::System.ArgumentNullException("Original_STORE_NO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_STORE_NO));
            }
            if ((Original_POS_CASH_IN.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_POS_CASH_IN.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_UL_BATCH_NO == null)) {
                throw new global::System.ArgumentNullException("Original_UL_BATCH_NO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_UL_BATCH_NO));
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((decimal)(Original_CASH_DIFF_AMT));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_UL_DTM));
            if ((Original_NCCC_CC_IN.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_NCCC_CC_IN.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_CREATE_USER == null)) {
                throw new global::System.ArgumentNullException("Original_CREATE_USER");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_CREATE_USER));
            }
            this.Adapter.DeleteCommand.Parameters[12].Value = ((decimal)(Original_POS_CC_IN));
            this.Adapter.DeleteCommand.Parameters[13].Value = ((System.DateTime)(Original_CREATE_DTM));
            if ((Original_CC_DIFF_AMT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((decimal)(Original_CC_DIFF_AMT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_MODI_USER == null)) {
                throw new global::System.ArgumentNullException("Original_MODI_USER");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_MODI_USER));
            }
            if ((Original_EXCEPTION_CAUSE == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_EXCEPTION_CAUSE));
            }
            this.Adapter.DeleteCommand.Parameters[19].Value = ((System.DateTime)(Original_MODI_DTM));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string BANK_CASH_D_ID, 
                    System.DateTime TRADE_DATE, 
                    decimal BANK_CASH_IN, 
                    string STORE_NO, 
                    global::System.Nullable<decimal> POS_CASH_IN, 
                    string UL_BATCH_NO, 
                    decimal CASH_DIFF_AMT, 
                    System.DateTime UL_DTM, 
                    global::System.Nullable<decimal> NCCC_CC_IN, 
                    string CREATE_USER, 
                    decimal POS_CC_IN, 
                    System.DateTime CREATE_DTM, 
                    global::System.Nullable<decimal> CC_DIFF_AMT, 
                    string MODI_USER, 
                    string EXCEPTION_CAUSE, 
                    System.DateTime MODI_DTM) {
            if ((BANK_CASH_D_ID == null)) {
                throw new global::System.ArgumentNullException("BANK_CASH_D_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(BANK_CASH_D_ID));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(TRADE_DATE));
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(BANK_CASH_IN));
            if ((STORE_NO == null)) {
                throw new global::System.ArgumentNullException("STORE_NO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(STORE_NO));
            }
            if ((POS_CASH_IN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(POS_CASH_IN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((UL_BATCH_NO == null)) {
                throw new global::System.ArgumentNullException("UL_BATCH_NO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(UL_BATCH_NO));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(CASH_DIFF_AMT));
            this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(UL_DTM));
            if ((NCCC_CC_IN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(NCCC_CC_IN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((CREATE_USER == null)) {
                throw new global::System.ArgumentNullException("CREATE_USER");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(CREATE_USER));
            }
            this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(POS_CC_IN));
            this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(CREATE_DTM));
            if ((CC_DIFF_AMT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(CC_DIFF_AMT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((MODI_USER == null)) {
                throw new global::System.ArgumentNullException("MODI_USER");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(MODI_USER));
            }
            if ((EXCEPTION_CAUSE == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(EXCEPTION_CAUSE));
            }
            this.Adapter.InsertCommand.Parameters[15].Value = ((System.DateTime)(MODI_DTM));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string BANK_CASH_D_ID, 
                    System.DateTime TRADE_DATE, 
                    decimal BANK_CASH_IN, 
                    string STORE_NO, 
                    global::System.Nullable<decimal> POS_CASH_IN, 
                    string UL_BATCH_NO, 
                    decimal CASH_DIFF_AMT, 
                    System.DateTime UL_DTM, 
                    global::System.Nullable<decimal> NCCC_CC_IN, 
                    string CREATE_USER, 
                    decimal POS_CC_IN, 
                    System.DateTime CREATE_DTM, 
                    global::System.Nullable<decimal> CC_DIFF_AMT, 
                    string MODI_USER, 
                    string EXCEPTION_CAUSE, 
                    System.DateTime MODI_DTM, 
                    string Original_BANK_CASH_D_ID, 
                    System.DateTime Original_TRADE_DATE, 
                    decimal Original_BANK_CASH_IN, 
                    string Original_STORE_NO, 
                    global::System.Nullable<decimal> Original_POS_CASH_IN, 
                    string Original_UL_BATCH_NO, 
                    decimal Original_CASH_DIFF_AMT, 
                    System.DateTime Original_UL_DTM, 
                    global::System.Nullable<decimal> Original_NCCC_CC_IN, 
                    string Original_CREATE_USER, 
                    decimal Original_POS_CC_IN, 
                    System.DateTime Original_CREATE_DTM, 
                    global::System.Nullable<decimal> Original_CC_DIFF_AMT, 
                    string Original_MODI_USER, 
                    string Original_EXCEPTION_CAUSE, 
                    System.DateTime Original_MODI_DTM) {
            if ((BANK_CASH_D_ID == null)) {
                throw new global::System.ArgumentNullException("BANK_CASH_D_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(BANK_CASH_D_ID));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(TRADE_DATE));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(BANK_CASH_IN));
            if ((STORE_NO == null)) {
                throw new global::System.ArgumentNullException("STORE_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(STORE_NO));
            }
            if ((POS_CASH_IN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(POS_CASH_IN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((UL_BATCH_NO == null)) {
                throw new global::System.ArgumentNullException("UL_BATCH_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(UL_BATCH_NO));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(CASH_DIFF_AMT));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(UL_DTM));
            if ((NCCC_CC_IN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(NCCC_CC_IN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((CREATE_USER == null)) {
                throw new global::System.ArgumentNullException("CREATE_USER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(CREATE_USER));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(POS_CC_IN));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(CREATE_DTM));
            if ((CC_DIFF_AMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(CC_DIFF_AMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((MODI_USER == null)) {
                throw new global::System.ArgumentNullException("MODI_USER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(MODI_USER));
            }
            if ((EXCEPTION_CAUSE == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(EXCEPTION_CAUSE));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(MODI_DTM));
            if ((Original_BANK_CASH_D_ID == null)) {
                throw new global::System.ArgumentNullException("Original_BANK_CASH_D_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_BANK_CASH_D_ID));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((System.DateTime)(Original_TRADE_DATE));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(Original_BANK_CASH_IN));
            if ((Original_STORE_NO == null)) {
                throw new global::System.ArgumentNullException("Original_STORE_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_STORE_NO));
            }
            if ((Original_POS_CASH_IN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(Original_POS_CASH_IN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_UL_BATCH_NO == null)) {
                throw new global::System.ArgumentNullException("Original_UL_BATCH_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_UL_BATCH_NO));
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(Original_CASH_DIFF_AMT));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((System.DateTime)(Original_UL_DTM));
            if ((Original_NCCC_CC_IN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((decimal)(Original_NCCC_CC_IN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_CREATE_USER == null)) {
                throw new global::System.ArgumentNullException("Original_CREATE_USER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_CREATE_USER));
            }
            this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(Original_POS_CC_IN));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((System.DateTime)(Original_CREATE_DTM));
            if ((Original_CC_DIFF_AMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((decimal)(Original_CC_DIFF_AMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_MODI_USER == null)) {
                throw new global::System.ArgumentNullException("Original_MODI_USER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_MODI_USER));
            }
            if ((Original_EXCEPTION_CAUSE == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_EXCEPTION_CAUSE));
            }
            this.Adapter.UpdateCommand.Parameters[35].Value = ((System.DateTime)(Original_MODI_DTM));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime TRADE_DATE, 
                    decimal BANK_CASH_IN, 
                    string STORE_NO, 
                    global::System.Nullable<decimal> POS_CASH_IN, 
                    string UL_BATCH_NO, 
                    decimal CASH_DIFF_AMT, 
                    System.DateTime UL_DTM, 
                    global::System.Nullable<decimal> NCCC_CC_IN, 
                    string CREATE_USER, 
                    decimal POS_CC_IN, 
                    System.DateTime CREATE_DTM, 
                    global::System.Nullable<decimal> CC_DIFF_AMT, 
                    string MODI_USER, 
                    string EXCEPTION_CAUSE, 
                    System.DateTime MODI_DTM, 
                    string Original_BANK_CASH_D_ID, 
                    System.DateTime Original_TRADE_DATE, 
                    decimal Original_BANK_CASH_IN, 
                    string Original_STORE_NO, 
                    global::System.Nullable<decimal> Original_POS_CASH_IN, 
                    string Original_UL_BATCH_NO, 
                    decimal Original_CASH_DIFF_AMT, 
                    System.DateTime Original_UL_DTM, 
                    global::System.Nullable<decimal> Original_NCCC_CC_IN, 
                    string Original_CREATE_USER, 
                    decimal Original_POS_CC_IN, 
                    System.DateTime Original_CREATE_DTM, 
                    global::System.Nullable<decimal> Original_CC_DIFF_AMT, 
                    string Original_MODI_USER, 
                    string Original_EXCEPTION_CAUSE, 
                    System.DateTime Original_MODI_DTM) {
            return this.Update(Original_BANK_CASH_D_ID, TRADE_DATE, BANK_CASH_IN, STORE_NO, POS_CASH_IN, UL_BATCH_NO, CASH_DIFF_AMT, UL_DTM, NCCC_CC_IN, CREATE_USER, POS_CC_IN, CREATE_DTM, CC_DIFF_AMT, MODI_USER, EXCEPTION_CAUSE, MODI_DTM, Original_BANK_CASH_D_ID, Original_TRADE_DATE, Original_BANK_CASH_IN, Original_STORE_NO, Original_POS_CASH_IN, Original_UL_BATCH_NO, Original_CASH_DIFF_AMT, Original_UL_DTM, Original_NCCC_CC_IN, Original_CREATE_USER, Original_POS_CC_IN, Original_CREATE_DTM, Original_CC_DIFF_AMT, Original_MODI_USER, Original_EXCEPTION_CAUSE, Original_MODI_DTM);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BANK_CASH_MASTER_TEMPTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public BANK_CASH_MASTER_TEMPTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "BANK_CASH_MASTER_TEMP";
            tableMapping.ColumnMappings.Add("BANK_CASH_M_ID", "BANK_CASH_M_ID");
            tableMapping.ColumnMappings.Add("TRADE_DATE", "TRADE_DATE");
            tableMapping.ColumnMappings.Add("BANK_CASH_IN", "BANK_CASH_IN");
            tableMapping.ColumnMappings.Add("POS_CASH_IN", "POS_CASH_IN");
            tableMapping.ColumnMappings.Add("UL_BATCH_NO", "UL_BATCH_NO");
            tableMapping.ColumnMappings.Add("CASH_DIFF_AMT", "CASH_DIFF_AMT");
            tableMapping.ColumnMappings.Add("UL_DTM", "UL_DTM");
            tableMapping.ColumnMappings.Add("NCCC_CC_IN", "NCCC_CC_IN");
            tableMapping.ColumnMappings.Add("CREATE_USER", "CREATE_USER");
            tableMapping.ColumnMappings.Add("POS_CC_IN", "POS_CC_IN");
            tableMapping.ColumnMappings.Add("CREATE_DTM", "CREATE_DTM");
            tableMapping.ColumnMappings.Add("CC_DIFF_AMT", "CC_DIFF_AMT");
            tableMapping.ColumnMappings.Add("MODI_USER", "MODI_USER");
            tableMapping.ColumnMappings.Add("EXCEPTION_CAUSE", "EXCEPTION_CAUSE");
            tableMapping.ColumnMappings.Add("MODI_DTM", "MODI_DTM");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""WEBPOS"".""BANK_CASH_MASTER_TEMP"" WHERE ((""BANK_CASH_M_ID"" = :Original_BANK_CASH_M_ID) AND (""TRADE_DATE"" = :Original_TRADE_DATE) AND (""BANK_CASH_IN"" = :Original_BANK_CASH_IN) AND ((:IsNull_POS_CASH_IN = 1 AND ""POS_CASH_IN"" IS NULL) OR (""POS_CASH_IN"" = :Original_POS_CASH_IN)) AND (""UL_BATCH_NO"" = :Original_UL_BATCH_NO) AND (""CASH_DIFF_AMT"" = :Original_CASH_DIFF_AMT) AND (""UL_DTM"" = :Original_UL_DTM) AND ((:IsNull_NCCC_CC_IN = 1 AND ""NCCC_CC_IN"" IS NULL) OR (""NCCC_CC_IN"" = :Original_NCCC_CC_IN)) AND (""CREATE_USER"" = :Original_CREATE_USER) AND (""POS_CC_IN"" = :Original_POS_CC_IN) AND (""CREATE_DTM"" = :Original_CREATE_DTM) AND ((:IsNull_CC_DIFF_AMT = 1 AND ""CC_DIFF_AMT"" IS NULL) OR (""CC_DIFF_AMT"" = :Original_CC_DIFF_AMT)) AND (""MODI_USER"" = :Original_MODI_USER) AND ((:IsNull_EXCEPTION_CAUSE = 1 AND ""EXCEPTION_CAUSE"" IS NULL) OR (""EXCEPTION_CAUSE"" = :Original_EXCEPTION_CAUSE)) AND (""MODI_DTM"" = :Original_MODI_DTM))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_BANK_CASH_M_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "BANK_CASH_M_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_TRADE_DATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "TRADE_DATE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_BANK_CASH_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "BANK_CASH_IN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_POS_CASH_IN", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "POS_CASH_IN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_POS_CASH_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "POS_CASH_IN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_UL_BATCH_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "UL_BATCH_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CASH_DIFF_AMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "CASH_DIFF_AMT", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_UL_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "UL_DTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_NCCC_CC_IN", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "NCCC_CC_IN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_NCCC_CC_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NCCC_CC_IN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CREATE_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CREATE_USER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_POS_CC_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "POS_CC_IN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CREATE_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "CREATE_DTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_CC_DIFF_AMT", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "CC_DIFF_AMT", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CC_DIFF_AMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "CC_DIFF_AMT", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MODI_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MODI_USER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_EXCEPTION_CAUSE", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "EXCEPTION_CAUSE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_EXCEPTION_CAUSE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "EXCEPTION_CAUSE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MODI_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "MODI_DTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""WEBPOS"".""BANK_CASH_MASTER_TEMP"" (""BANK_CASH_M_ID"", ""TRADE_DATE"", ""BANK_CASH_IN"", ""POS_CASH_IN"", ""UL_BATCH_NO"", ""CASH_DIFF_AMT"", ""UL_DTM"", ""NCCC_CC_IN"", ""CREATE_USER"", ""POS_CC_IN"", ""CREATE_DTM"", ""CC_DIFF_AMT"", ""MODI_USER"", ""EXCEPTION_CAUSE"", ""MODI_DTM"") VALUES (:BANK_CASH_M_ID, :TRADE_DATE, :BANK_CASH_IN, :POS_CASH_IN, :UL_BATCH_NO, :CASH_DIFF_AMT, :UL_DTM, :NCCC_CC_IN, :CREATE_USER, :POS_CC_IN, :CREATE_DTM, :CC_DIFF_AMT, :MODI_USER, :EXCEPTION_CAUSE, :MODI_DTM)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BANK_CASH_M_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "BANK_CASH_M_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TRADE_DATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "TRADE_DATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BANK_CASH_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "BANK_CASH_IN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("POS_CASH_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "POS_CASH_IN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("UL_BATCH_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "UL_BATCH_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CASH_DIFF_AMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "CASH_DIFF_AMT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("UL_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "UL_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NCCC_CC_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NCCC_CC_IN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CREATE_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CREATE_USER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("POS_CC_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "POS_CC_IN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CREATE_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "CREATE_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CC_DIFF_AMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "CC_DIFF_AMT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MODI_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MODI_USER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("EXCEPTION_CAUSE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "EXCEPTION_CAUSE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MODI_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "MODI_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""WEBPOS"".""BANK_CASH_MASTER_TEMP"" SET ""BANK_CASH_M_ID"" = :BANK_CASH_M_ID, ""TRADE_DATE"" = :TRADE_DATE, ""BANK_CASH_IN"" = :BANK_CASH_IN, ""POS_CASH_IN"" = :POS_CASH_IN, ""UL_BATCH_NO"" = :UL_BATCH_NO, ""CASH_DIFF_AMT"" = :CASH_DIFF_AMT, ""UL_DTM"" = :UL_DTM, ""NCCC_CC_IN"" = :NCCC_CC_IN, ""CREATE_USER"" = :CREATE_USER, ""POS_CC_IN"" = :POS_CC_IN, ""CREATE_DTM"" = :CREATE_DTM, ""CC_DIFF_AMT"" = :CC_DIFF_AMT, ""MODI_USER"" = :MODI_USER, ""EXCEPTION_CAUSE"" = :EXCEPTION_CAUSE, ""MODI_DTM"" = :MODI_DTM WHERE ((""BANK_CASH_M_ID"" = :Original_BANK_CASH_M_ID) AND (""TRADE_DATE"" = :Original_TRADE_DATE) AND (""BANK_CASH_IN"" = :Original_BANK_CASH_IN) AND ((:IsNull_POS_CASH_IN = 1 AND ""POS_CASH_IN"" IS NULL) OR (""POS_CASH_IN"" = :Original_POS_CASH_IN)) AND (""UL_BATCH_NO"" = :Original_UL_BATCH_NO) AND (""CASH_DIFF_AMT"" = :Original_CASH_DIFF_AMT) AND (""UL_DTM"" = :Original_UL_DTM) AND ((:IsNull_NCCC_CC_IN = 1 AND ""NCCC_CC_IN"" IS NULL) OR (""NCCC_CC_IN"" = :Original_NCCC_CC_IN)) AND (""CREATE_USER"" = :Original_CREATE_USER) AND (""POS_CC_IN"" = :Original_POS_CC_IN) AND (""CREATE_DTM"" = :Original_CREATE_DTM) AND ((:IsNull_CC_DIFF_AMT = 1 AND ""CC_DIFF_AMT"" IS NULL) OR (""CC_DIFF_AMT"" = :Original_CC_DIFF_AMT)) AND (""MODI_USER"" = :Original_MODI_USER) AND ((:IsNull_EXCEPTION_CAUSE = 1 AND ""EXCEPTION_CAUSE"" IS NULL) OR (""EXCEPTION_CAUSE"" = :Original_EXCEPTION_CAUSE)) AND (""MODI_DTM"" = :Original_MODI_DTM))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BANK_CASH_M_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "BANK_CASH_M_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TRADE_DATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "TRADE_DATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BANK_CASH_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "BANK_CASH_IN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("POS_CASH_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "POS_CASH_IN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("UL_BATCH_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "UL_BATCH_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CASH_DIFF_AMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "CASH_DIFF_AMT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("UL_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "UL_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NCCC_CC_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NCCC_CC_IN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CREATE_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CREATE_USER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("POS_CC_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "POS_CC_IN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CREATE_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "CREATE_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CC_DIFF_AMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "CC_DIFF_AMT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MODI_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MODI_USER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("EXCEPTION_CAUSE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "EXCEPTION_CAUSE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MODI_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "MODI_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_BANK_CASH_M_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "BANK_CASH_M_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_TRADE_DATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "TRADE_DATE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_BANK_CASH_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "BANK_CASH_IN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_POS_CASH_IN", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "POS_CASH_IN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_POS_CASH_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "POS_CASH_IN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_UL_BATCH_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "UL_BATCH_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CASH_DIFF_AMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "CASH_DIFF_AMT", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_UL_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "UL_DTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_NCCC_CC_IN", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "NCCC_CC_IN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_NCCC_CC_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NCCC_CC_IN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CREATE_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CREATE_USER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_POS_CC_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "POS_CC_IN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CREATE_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "CREATE_DTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_CC_DIFF_AMT", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "CC_DIFF_AMT", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CC_DIFF_AMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "CC_DIFF_AMT", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MODI_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MODI_USER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_EXCEPTION_CAUSE", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "EXCEPTION_CAUSE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_EXCEPTION_CAUSE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "EXCEPTION_CAUSE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MODI_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "MODI_DTM", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::FET.POS.Model.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT BANK_CASH_M_ID, TRADE_DATE, BANK_CASH_IN, POS_CASH_IN, UL_BATCH_NO, CASH_D" +
                "IFF_AMT, UL_DTM, NCCC_CC_IN, CREATE_USER, POS_CC_IN, CREATE_DTM, CC_DIFF_AMT, MO" +
                "DI_USER, EXCEPTION_CAUSE, MODI_DTM FROM WEBPOS.BANK_CASH_MASTER_TEMP";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(CHK06_BankCash_DTO.BANK_CASH_MASTER_TEMPDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual CHK06_BankCash_DTO.BANK_CASH_MASTER_TEMPDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            CHK06_BankCash_DTO.BANK_CASH_MASTER_TEMPDataTable dataTable = new CHK06_BankCash_DTO.BANK_CASH_MASTER_TEMPDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(CHK06_BankCash_DTO.BANK_CASH_MASTER_TEMPDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(CHK06_BankCash_DTO dataSet) {
            return this.Adapter.Update(dataSet, "BANK_CASH_MASTER_TEMP");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_BANK_CASH_M_ID, System.DateTime Original_TRADE_DATE, decimal Original_BANK_CASH_IN, global::System.Nullable<decimal> Original_POS_CASH_IN, string Original_UL_BATCH_NO, decimal Original_CASH_DIFF_AMT, System.DateTime Original_UL_DTM, global::System.Nullable<decimal> Original_NCCC_CC_IN, string Original_CREATE_USER, decimal Original_POS_CC_IN, System.DateTime Original_CREATE_DTM, global::System.Nullable<decimal> Original_CC_DIFF_AMT, string Original_MODI_USER, string Original_EXCEPTION_CAUSE, System.DateTime Original_MODI_DTM) {
            if ((Original_BANK_CASH_M_ID == null)) {
                throw new global::System.ArgumentNullException("Original_BANK_CASH_M_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_BANK_CASH_M_ID));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_TRADE_DATE));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_BANK_CASH_IN));
            if ((Original_POS_CASH_IN.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_POS_CASH_IN.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_UL_BATCH_NO == null)) {
                throw new global::System.ArgumentNullException("Original_UL_BATCH_NO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_UL_BATCH_NO));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_CASH_DIFF_AMT));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_UL_DTM));
            if ((Original_NCCC_CC_IN.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((decimal)(Original_NCCC_CC_IN.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_CREATE_USER == null)) {
                throw new global::System.ArgumentNullException("Original_CREATE_USER");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_CREATE_USER));
            }
            this.Adapter.DeleteCommand.Parameters[11].Value = ((decimal)(Original_POS_CC_IN));
            this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_CREATE_DTM));
            if ((Original_CC_DIFF_AMT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((decimal)(Original_CC_DIFF_AMT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_MODI_USER == null)) {
                throw new global::System.ArgumentNullException("Original_MODI_USER");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_MODI_USER));
            }
            if ((Original_EXCEPTION_CAUSE == null)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_EXCEPTION_CAUSE));
            }
            this.Adapter.DeleteCommand.Parameters[18].Value = ((System.DateTime)(Original_MODI_DTM));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string BANK_CASH_M_ID, System.DateTime TRADE_DATE, decimal BANK_CASH_IN, global::System.Nullable<decimal> POS_CASH_IN, string UL_BATCH_NO, decimal CASH_DIFF_AMT, System.DateTime UL_DTM, global::System.Nullable<decimal> NCCC_CC_IN, string CREATE_USER, decimal POS_CC_IN, System.DateTime CREATE_DTM, global::System.Nullable<decimal> CC_DIFF_AMT, string MODI_USER, string EXCEPTION_CAUSE, System.DateTime MODI_DTM) {
            if ((BANK_CASH_M_ID == null)) {
                throw new global::System.ArgumentNullException("BANK_CASH_M_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(BANK_CASH_M_ID));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(TRADE_DATE));
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(BANK_CASH_IN));
            if ((POS_CASH_IN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(POS_CASH_IN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((UL_BATCH_NO == null)) {
                throw new global::System.ArgumentNullException("UL_BATCH_NO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(UL_BATCH_NO));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(CASH_DIFF_AMT));
            this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(UL_DTM));
            if ((NCCC_CC_IN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(NCCC_CC_IN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((CREATE_USER == null)) {
                throw new global::System.ArgumentNullException("CREATE_USER");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(CREATE_USER));
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(POS_CC_IN));
            this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(CREATE_DTM));
            if ((CC_DIFF_AMT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(CC_DIFF_AMT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((MODI_USER == null)) {
                throw new global::System.ArgumentNullException("MODI_USER");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(MODI_USER));
            }
            if ((EXCEPTION_CAUSE == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(EXCEPTION_CAUSE));
            }
            this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(MODI_DTM));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string BANK_CASH_M_ID, 
                    System.DateTime TRADE_DATE, 
                    decimal BANK_CASH_IN, 
                    global::System.Nullable<decimal> POS_CASH_IN, 
                    string UL_BATCH_NO, 
                    decimal CASH_DIFF_AMT, 
                    System.DateTime UL_DTM, 
                    global::System.Nullable<decimal> NCCC_CC_IN, 
                    string CREATE_USER, 
                    decimal POS_CC_IN, 
                    System.DateTime CREATE_DTM, 
                    global::System.Nullable<decimal> CC_DIFF_AMT, 
                    string MODI_USER, 
                    string EXCEPTION_CAUSE, 
                    System.DateTime MODI_DTM, 
                    string Original_BANK_CASH_M_ID, 
                    System.DateTime Original_TRADE_DATE, 
                    decimal Original_BANK_CASH_IN, 
                    global::System.Nullable<decimal> Original_POS_CASH_IN, 
                    string Original_UL_BATCH_NO, 
                    decimal Original_CASH_DIFF_AMT, 
                    System.DateTime Original_UL_DTM, 
                    global::System.Nullable<decimal> Original_NCCC_CC_IN, 
                    string Original_CREATE_USER, 
                    decimal Original_POS_CC_IN, 
                    System.DateTime Original_CREATE_DTM, 
                    global::System.Nullable<decimal> Original_CC_DIFF_AMT, 
                    string Original_MODI_USER, 
                    string Original_EXCEPTION_CAUSE, 
                    System.DateTime Original_MODI_DTM) {
            if ((BANK_CASH_M_ID == null)) {
                throw new global::System.ArgumentNullException("BANK_CASH_M_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(BANK_CASH_M_ID));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(TRADE_DATE));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(BANK_CASH_IN));
            if ((POS_CASH_IN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(POS_CASH_IN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((UL_BATCH_NO == null)) {
                throw new global::System.ArgumentNullException("UL_BATCH_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(UL_BATCH_NO));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(CASH_DIFF_AMT));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(UL_DTM));
            if ((NCCC_CC_IN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(NCCC_CC_IN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((CREATE_USER == null)) {
                throw new global::System.ArgumentNullException("CREATE_USER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(CREATE_USER));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(POS_CC_IN));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(CREATE_DTM));
            if ((CC_DIFF_AMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(CC_DIFF_AMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((MODI_USER == null)) {
                throw new global::System.ArgumentNullException("MODI_USER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(MODI_USER));
            }
            if ((EXCEPTION_CAUSE == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(EXCEPTION_CAUSE));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(MODI_DTM));
            if ((Original_BANK_CASH_M_ID == null)) {
                throw new global::System.ArgumentNullException("Original_BANK_CASH_M_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_BANK_CASH_M_ID));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(Original_TRADE_DATE));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(Original_BANK_CASH_IN));
            if ((Original_POS_CASH_IN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(Original_POS_CASH_IN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_UL_BATCH_NO == null)) {
                throw new global::System.ArgumentNullException("Original_UL_BATCH_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_UL_BATCH_NO));
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(Original_CASH_DIFF_AMT));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((System.DateTime)(Original_UL_DTM));
            if ((Original_NCCC_CC_IN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(Original_NCCC_CC_IN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_CREATE_USER == null)) {
                throw new global::System.ArgumentNullException("Original_CREATE_USER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_CREATE_USER));
            }
            this.Adapter.UpdateCommand.Parameters[26].Value = ((decimal)(Original_POS_CC_IN));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((System.DateTime)(Original_CREATE_DTM));
            if ((Original_CC_DIFF_AMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((decimal)(Original_CC_DIFF_AMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_MODI_USER == null)) {
                throw new global::System.ArgumentNullException("Original_MODI_USER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_MODI_USER));
            }
            if ((Original_EXCEPTION_CAUSE == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_EXCEPTION_CAUSE));
            }
            this.Adapter.UpdateCommand.Parameters[33].Value = ((System.DateTime)(Original_MODI_DTM));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime TRADE_DATE, 
                    decimal BANK_CASH_IN, 
                    global::System.Nullable<decimal> POS_CASH_IN, 
                    string UL_BATCH_NO, 
                    decimal CASH_DIFF_AMT, 
                    System.DateTime UL_DTM, 
                    global::System.Nullable<decimal> NCCC_CC_IN, 
                    string CREATE_USER, 
                    decimal POS_CC_IN, 
                    System.DateTime CREATE_DTM, 
                    global::System.Nullable<decimal> CC_DIFF_AMT, 
                    string MODI_USER, 
                    string EXCEPTION_CAUSE, 
                    System.DateTime MODI_DTM, 
                    string Original_BANK_CASH_M_ID, 
                    System.DateTime Original_TRADE_DATE, 
                    decimal Original_BANK_CASH_IN, 
                    global::System.Nullable<decimal> Original_POS_CASH_IN, 
                    string Original_UL_BATCH_NO, 
                    decimal Original_CASH_DIFF_AMT, 
                    System.DateTime Original_UL_DTM, 
                    global::System.Nullable<decimal> Original_NCCC_CC_IN, 
                    string Original_CREATE_USER, 
                    decimal Original_POS_CC_IN, 
                    System.DateTime Original_CREATE_DTM, 
                    global::System.Nullable<decimal> Original_CC_DIFF_AMT, 
                    string Original_MODI_USER, 
                    string Original_EXCEPTION_CAUSE, 
                    System.DateTime Original_MODI_DTM) {
            return this.Update(Original_BANK_CASH_M_ID, TRADE_DATE, BANK_CASH_IN, POS_CASH_IN, UL_BATCH_NO, CASH_DIFF_AMT, UL_DTM, NCCC_CC_IN, CREATE_USER, POS_CC_IN, CREATE_DTM, CC_DIFF_AMT, MODI_USER, EXCEPTION_CAUSE, MODI_DTM, Original_BANK_CASH_M_ID, Original_TRADE_DATE, Original_BANK_CASH_IN, Original_POS_CASH_IN, Original_UL_BATCH_NO, Original_CASH_DIFF_AMT, Original_UL_DTM, Original_NCCC_CC_IN, Original_CREATE_USER, Original_POS_CC_IN, Original_CREATE_DTM, Original_CC_DIFF_AMT, Original_MODI_USER, Original_EXCEPTION_CAUSE, Original_MODI_DTM);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BANK_CASH_MASTERTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public BANK_CASH_MASTERTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "BANK_CASH_MASTER";
            tableMapping.ColumnMappings.Add("BANK_CASH_M_ID", "BANK_CASH_M_ID");
            tableMapping.ColumnMappings.Add("TRADE_DATE", "TRADE_DATE");
            tableMapping.ColumnMappings.Add("BANK_CASH_IN", "BANK_CASH_IN");
            tableMapping.ColumnMappings.Add("POS_CASH_IN", "POS_CASH_IN");
            tableMapping.ColumnMappings.Add("UL_BATCH_NO", "UL_BATCH_NO");
            tableMapping.ColumnMappings.Add("CASH_DIFF_AMT", "CASH_DIFF_AMT");
            tableMapping.ColumnMappings.Add("UL_DTM", "UL_DTM");
            tableMapping.ColumnMappings.Add("NCCC_CC_IN", "NCCC_CC_IN");
            tableMapping.ColumnMappings.Add("CREATE_USER", "CREATE_USER");
            tableMapping.ColumnMappings.Add("POS_CC_IN", "POS_CC_IN");
            tableMapping.ColumnMappings.Add("CREATE_DTM", "CREATE_DTM");
            tableMapping.ColumnMappings.Add("CC_DIFF_AMT", "CC_DIFF_AMT");
            tableMapping.ColumnMappings.Add("MODI_USER", "MODI_USER");
            tableMapping.ColumnMappings.Add("EXCEPTION_CAUSE", "EXCEPTION_CAUSE");
            tableMapping.ColumnMappings.Add("MODI_DTM", "MODI_DTM");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""WEBPOS"".""BANK_CASH_MASTER"" WHERE ((""BANK_CASH_M_ID"" = :Original_BANK_CASH_M_ID) AND (""TRADE_DATE"" = :Original_TRADE_DATE) AND (""BANK_CASH_IN"" = :Original_BANK_CASH_IN) AND ((:IsNull_POS_CASH_IN = 1 AND ""POS_CASH_IN"" IS NULL) OR (""POS_CASH_IN"" = :Original_POS_CASH_IN)) AND (""UL_BATCH_NO"" = :Original_UL_BATCH_NO) AND (""CASH_DIFF_AMT"" = :Original_CASH_DIFF_AMT) AND (""UL_DTM"" = :Original_UL_DTM) AND ((:IsNull_NCCC_CC_IN = 1 AND ""NCCC_CC_IN"" IS NULL) OR (""NCCC_CC_IN"" = :Original_NCCC_CC_IN)) AND (""CREATE_USER"" = :Original_CREATE_USER) AND (""POS_CC_IN"" = :Original_POS_CC_IN) AND (""CREATE_DTM"" = :Original_CREATE_DTM) AND ((:IsNull_CC_DIFF_AMT = 1 AND ""CC_DIFF_AMT"" IS NULL) OR (""CC_DIFF_AMT"" = :Original_CC_DIFF_AMT)) AND (""MODI_USER"" = :Original_MODI_USER) AND ((:IsNull_EXCEPTION_CAUSE = 1 AND ""EXCEPTION_CAUSE"" IS NULL) OR (""EXCEPTION_CAUSE"" = :Original_EXCEPTION_CAUSE)) AND (""MODI_DTM"" = :Original_MODI_DTM))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_BANK_CASH_M_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "BANK_CASH_M_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_TRADE_DATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "TRADE_DATE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_BANK_CASH_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "BANK_CASH_IN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_POS_CASH_IN", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "POS_CASH_IN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_POS_CASH_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "POS_CASH_IN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_UL_BATCH_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "UL_BATCH_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CASH_DIFF_AMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "CASH_DIFF_AMT", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_UL_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "UL_DTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_NCCC_CC_IN", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "NCCC_CC_IN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_NCCC_CC_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NCCC_CC_IN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CREATE_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CREATE_USER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_POS_CC_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "POS_CC_IN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CREATE_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "CREATE_DTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_CC_DIFF_AMT", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "CC_DIFF_AMT", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CC_DIFF_AMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "CC_DIFF_AMT", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MODI_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MODI_USER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_EXCEPTION_CAUSE", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "EXCEPTION_CAUSE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_EXCEPTION_CAUSE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "EXCEPTION_CAUSE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MODI_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "MODI_DTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""WEBPOS"".""BANK_CASH_MASTER"" (""BANK_CASH_M_ID"", ""TRADE_DATE"", ""BANK_CASH_IN"", ""POS_CASH_IN"", ""UL_BATCH_NO"", ""CASH_DIFF_AMT"", ""UL_DTM"", ""NCCC_CC_IN"", ""CREATE_USER"", ""POS_CC_IN"", ""CREATE_DTM"", ""CC_DIFF_AMT"", ""MODI_USER"", ""EXCEPTION_CAUSE"", ""MODI_DTM"") VALUES (:BANK_CASH_M_ID, :TRADE_DATE, :BANK_CASH_IN, :POS_CASH_IN, :UL_BATCH_NO, :CASH_DIFF_AMT, :UL_DTM, :NCCC_CC_IN, :CREATE_USER, :POS_CC_IN, :CREATE_DTM, :CC_DIFF_AMT, :MODI_USER, :EXCEPTION_CAUSE, :MODI_DTM)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BANK_CASH_M_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "BANK_CASH_M_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TRADE_DATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "TRADE_DATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BANK_CASH_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "BANK_CASH_IN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("POS_CASH_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "POS_CASH_IN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("UL_BATCH_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "UL_BATCH_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CASH_DIFF_AMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "CASH_DIFF_AMT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("UL_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "UL_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NCCC_CC_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NCCC_CC_IN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CREATE_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CREATE_USER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("POS_CC_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "POS_CC_IN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CREATE_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "CREATE_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CC_DIFF_AMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "CC_DIFF_AMT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MODI_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MODI_USER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("EXCEPTION_CAUSE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "EXCEPTION_CAUSE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MODI_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "MODI_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""WEBPOS"".""BANK_CASH_MASTER"" SET ""BANK_CASH_M_ID"" = :BANK_CASH_M_ID, ""TRADE_DATE"" = :TRADE_DATE, ""BANK_CASH_IN"" = :BANK_CASH_IN, ""POS_CASH_IN"" = :POS_CASH_IN, ""UL_BATCH_NO"" = :UL_BATCH_NO, ""CASH_DIFF_AMT"" = :CASH_DIFF_AMT, ""UL_DTM"" = :UL_DTM, ""NCCC_CC_IN"" = :NCCC_CC_IN, ""CREATE_USER"" = :CREATE_USER, ""POS_CC_IN"" = :POS_CC_IN, ""CREATE_DTM"" = :CREATE_DTM, ""CC_DIFF_AMT"" = :CC_DIFF_AMT, ""MODI_USER"" = :MODI_USER, ""EXCEPTION_CAUSE"" = :EXCEPTION_CAUSE, ""MODI_DTM"" = :MODI_DTM WHERE ((""BANK_CASH_M_ID"" = :Original_BANK_CASH_M_ID) AND (""TRADE_DATE"" = :Original_TRADE_DATE) AND (""BANK_CASH_IN"" = :Original_BANK_CASH_IN) AND ((:IsNull_POS_CASH_IN = 1 AND ""POS_CASH_IN"" IS NULL) OR (""POS_CASH_IN"" = :Original_POS_CASH_IN)) AND (""UL_BATCH_NO"" = :Original_UL_BATCH_NO) AND (""CASH_DIFF_AMT"" = :Original_CASH_DIFF_AMT) AND (""UL_DTM"" = :Original_UL_DTM) AND ((:IsNull_NCCC_CC_IN = 1 AND ""NCCC_CC_IN"" IS NULL) OR (""NCCC_CC_IN"" = :Original_NCCC_CC_IN)) AND (""CREATE_USER"" = :Original_CREATE_USER) AND (""POS_CC_IN"" = :Original_POS_CC_IN) AND (""CREATE_DTM"" = :Original_CREATE_DTM) AND ((:IsNull_CC_DIFF_AMT = 1 AND ""CC_DIFF_AMT"" IS NULL) OR (""CC_DIFF_AMT"" = :Original_CC_DIFF_AMT)) AND (""MODI_USER"" = :Original_MODI_USER) AND ((:IsNull_EXCEPTION_CAUSE = 1 AND ""EXCEPTION_CAUSE"" IS NULL) OR (""EXCEPTION_CAUSE"" = :Original_EXCEPTION_CAUSE)) AND (""MODI_DTM"" = :Original_MODI_DTM))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BANK_CASH_M_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "BANK_CASH_M_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TRADE_DATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "TRADE_DATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BANK_CASH_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "BANK_CASH_IN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("POS_CASH_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "POS_CASH_IN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("UL_BATCH_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "UL_BATCH_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CASH_DIFF_AMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "CASH_DIFF_AMT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("UL_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "UL_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NCCC_CC_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NCCC_CC_IN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CREATE_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CREATE_USER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("POS_CC_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "POS_CC_IN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CREATE_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "CREATE_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CC_DIFF_AMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "CC_DIFF_AMT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MODI_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MODI_USER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("EXCEPTION_CAUSE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "EXCEPTION_CAUSE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MODI_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "MODI_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_BANK_CASH_M_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "BANK_CASH_M_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_TRADE_DATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "TRADE_DATE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_BANK_CASH_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "BANK_CASH_IN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_POS_CASH_IN", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "POS_CASH_IN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_POS_CASH_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "POS_CASH_IN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_UL_BATCH_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "UL_BATCH_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CASH_DIFF_AMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "CASH_DIFF_AMT", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_UL_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "UL_DTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_NCCC_CC_IN", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "NCCC_CC_IN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_NCCC_CC_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NCCC_CC_IN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CREATE_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CREATE_USER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_POS_CC_IN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "POS_CC_IN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CREATE_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "CREATE_DTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_CC_DIFF_AMT", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "CC_DIFF_AMT", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CC_DIFF_AMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "CC_DIFF_AMT", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MODI_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MODI_USER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_EXCEPTION_CAUSE", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "EXCEPTION_CAUSE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_EXCEPTION_CAUSE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "EXCEPTION_CAUSE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MODI_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "MODI_DTM", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::FET.POS.Model.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT BANK_CASH_M_ID, TRADE_DATE, BANK_CASH_IN, POS_CASH_IN, UL_BATCH_NO, CASH_D" +
                "IFF_AMT, UL_DTM, NCCC_CC_IN, CREATE_USER, POS_CC_IN, CREATE_DTM, CC_DIFF_AMT, MO" +
                "DI_USER, EXCEPTION_CAUSE, MODI_DTM FROM WEBPOS.BANK_CASH_MASTER";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(CHK06_BankCash_DTO.BANK_CASH_MASTERDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual CHK06_BankCash_DTO.BANK_CASH_MASTERDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            CHK06_BankCash_DTO.BANK_CASH_MASTERDataTable dataTable = new CHK06_BankCash_DTO.BANK_CASH_MASTERDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(CHK06_BankCash_DTO.BANK_CASH_MASTERDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(CHK06_BankCash_DTO dataSet) {
            return this.Adapter.Update(dataSet, "BANK_CASH_MASTER");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_BANK_CASH_M_ID, System.DateTime Original_TRADE_DATE, decimal Original_BANK_CASH_IN, global::System.Nullable<decimal> Original_POS_CASH_IN, string Original_UL_BATCH_NO, decimal Original_CASH_DIFF_AMT, System.DateTime Original_UL_DTM, global::System.Nullable<decimal> Original_NCCC_CC_IN, string Original_CREATE_USER, decimal Original_POS_CC_IN, System.DateTime Original_CREATE_DTM, global::System.Nullable<decimal> Original_CC_DIFF_AMT, string Original_MODI_USER, string Original_EXCEPTION_CAUSE, System.DateTime Original_MODI_DTM) {
            if ((Original_BANK_CASH_M_ID == null)) {
                throw new global::System.ArgumentNullException("Original_BANK_CASH_M_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_BANK_CASH_M_ID));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_TRADE_DATE));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_BANK_CASH_IN));
            if ((Original_POS_CASH_IN.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_POS_CASH_IN.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_UL_BATCH_NO == null)) {
                throw new global::System.ArgumentNullException("Original_UL_BATCH_NO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_UL_BATCH_NO));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_CASH_DIFF_AMT));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_UL_DTM));
            if ((Original_NCCC_CC_IN.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((decimal)(Original_NCCC_CC_IN.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_CREATE_USER == null)) {
                throw new global::System.ArgumentNullException("Original_CREATE_USER");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_CREATE_USER));
            }
            this.Adapter.DeleteCommand.Parameters[11].Value = ((decimal)(Original_POS_CC_IN));
            this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_CREATE_DTM));
            if ((Original_CC_DIFF_AMT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((decimal)(Original_CC_DIFF_AMT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_MODI_USER == null)) {
                throw new global::System.ArgumentNullException("Original_MODI_USER");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_MODI_USER));
            }
            if ((Original_EXCEPTION_CAUSE == null)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_EXCEPTION_CAUSE));
            }
            this.Adapter.DeleteCommand.Parameters[18].Value = ((System.DateTime)(Original_MODI_DTM));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string BANK_CASH_M_ID, System.DateTime TRADE_DATE, decimal BANK_CASH_IN, global::System.Nullable<decimal> POS_CASH_IN, string UL_BATCH_NO, decimal CASH_DIFF_AMT, System.DateTime UL_DTM, global::System.Nullable<decimal> NCCC_CC_IN, string CREATE_USER, decimal POS_CC_IN, System.DateTime CREATE_DTM, global::System.Nullable<decimal> CC_DIFF_AMT, string MODI_USER, string EXCEPTION_CAUSE, System.DateTime MODI_DTM) {
            if ((BANK_CASH_M_ID == null)) {
                throw new global::System.ArgumentNullException("BANK_CASH_M_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(BANK_CASH_M_ID));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(TRADE_DATE));
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(BANK_CASH_IN));
            if ((POS_CASH_IN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(POS_CASH_IN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((UL_BATCH_NO == null)) {
                throw new global::System.ArgumentNullException("UL_BATCH_NO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(UL_BATCH_NO));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(CASH_DIFF_AMT));
            this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(UL_DTM));
            if ((NCCC_CC_IN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(NCCC_CC_IN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((CREATE_USER == null)) {
                throw new global::System.ArgumentNullException("CREATE_USER");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(CREATE_USER));
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(POS_CC_IN));
            this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(CREATE_DTM));
            if ((CC_DIFF_AMT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(CC_DIFF_AMT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((MODI_USER == null)) {
                throw new global::System.ArgumentNullException("MODI_USER");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(MODI_USER));
            }
            if ((EXCEPTION_CAUSE == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(EXCEPTION_CAUSE));
            }
            this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(MODI_DTM));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string BANK_CASH_M_ID, 
                    System.DateTime TRADE_DATE, 
                    decimal BANK_CASH_IN, 
                    global::System.Nullable<decimal> POS_CASH_IN, 
                    string UL_BATCH_NO, 
                    decimal CASH_DIFF_AMT, 
                    System.DateTime UL_DTM, 
                    global::System.Nullable<decimal> NCCC_CC_IN, 
                    string CREATE_USER, 
                    decimal POS_CC_IN, 
                    System.DateTime CREATE_DTM, 
                    global::System.Nullable<decimal> CC_DIFF_AMT, 
                    string MODI_USER, 
                    string EXCEPTION_CAUSE, 
                    System.DateTime MODI_DTM, 
                    string Original_BANK_CASH_M_ID, 
                    System.DateTime Original_TRADE_DATE, 
                    decimal Original_BANK_CASH_IN, 
                    global::System.Nullable<decimal> Original_POS_CASH_IN, 
                    string Original_UL_BATCH_NO, 
                    decimal Original_CASH_DIFF_AMT, 
                    System.DateTime Original_UL_DTM, 
                    global::System.Nullable<decimal> Original_NCCC_CC_IN, 
                    string Original_CREATE_USER, 
                    decimal Original_POS_CC_IN, 
                    System.DateTime Original_CREATE_DTM, 
                    global::System.Nullable<decimal> Original_CC_DIFF_AMT, 
                    string Original_MODI_USER, 
                    string Original_EXCEPTION_CAUSE, 
                    System.DateTime Original_MODI_DTM) {
            if ((BANK_CASH_M_ID == null)) {
                throw new global::System.ArgumentNullException("BANK_CASH_M_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(BANK_CASH_M_ID));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(TRADE_DATE));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(BANK_CASH_IN));
            if ((POS_CASH_IN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(POS_CASH_IN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((UL_BATCH_NO == null)) {
                throw new global::System.ArgumentNullException("UL_BATCH_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(UL_BATCH_NO));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(CASH_DIFF_AMT));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(UL_DTM));
            if ((NCCC_CC_IN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(NCCC_CC_IN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((CREATE_USER == null)) {
                throw new global::System.ArgumentNullException("CREATE_USER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(CREATE_USER));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(POS_CC_IN));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(CREATE_DTM));
            if ((CC_DIFF_AMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(CC_DIFF_AMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((MODI_USER == null)) {
                throw new global::System.ArgumentNullException("MODI_USER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(MODI_USER));
            }
            if ((EXCEPTION_CAUSE == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(EXCEPTION_CAUSE));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(MODI_DTM));
            if ((Original_BANK_CASH_M_ID == null)) {
                throw new global::System.ArgumentNullException("Original_BANK_CASH_M_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_BANK_CASH_M_ID));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(Original_TRADE_DATE));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(Original_BANK_CASH_IN));
            if ((Original_POS_CASH_IN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(Original_POS_CASH_IN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_UL_BATCH_NO == null)) {
                throw new global::System.ArgumentNullException("Original_UL_BATCH_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_UL_BATCH_NO));
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(Original_CASH_DIFF_AMT));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((System.DateTime)(Original_UL_DTM));
            if ((Original_NCCC_CC_IN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(Original_NCCC_CC_IN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_CREATE_USER == null)) {
                throw new global::System.ArgumentNullException("Original_CREATE_USER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_CREATE_USER));
            }
            this.Adapter.UpdateCommand.Parameters[26].Value = ((decimal)(Original_POS_CC_IN));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((System.DateTime)(Original_CREATE_DTM));
            if ((Original_CC_DIFF_AMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((decimal)(Original_CC_DIFF_AMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_MODI_USER == null)) {
                throw new global::System.ArgumentNullException("Original_MODI_USER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_MODI_USER));
            }
            if ((Original_EXCEPTION_CAUSE == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_EXCEPTION_CAUSE));
            }
            this.Adapter.UpdateCommand.Parameters[33].Value = ((System.DateTime)(Original_MODI_DTM));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime TRADE_DATE, 
                    decimal BANK_CASH_IN, 
                    global::System.Nullable<decimal> POS_CASH_IN, 
                    string UL_BATCH_NO, 
                    decimal CASH_DIFF_AMT, 
                    System.DateTime UL_DTM, 
                    global::System.Nullable<decimal> NCCC_CC_IN, 
                    string CREATE_USER, 
                    decimal POS_CC_IN, 
                    System.DateTime CREATE_DTM, 
                    global::System.Nullable<decimal> CC_DIFF_AMT, 
                    string MODI_USER, 
                    string EXCEPTION_CAUSE, 
                    System.DateTime MODI_DTM, 
                    string Original_BANK_CASH_M_ID, 
                    System.DateTime Original_TRADE_DATE, 
                    decimal Original_BANK_CASH_IN, 
                    global::System.Nullable<decimal> Original_POS_CASH_IN, 
                    string Original_UL_BATCH_NO, 
                    decimal Original_CASH_DIFF_AMT, 
                    System.DateTime Original_UL_DTM, 
                    global::System.Nullable<decimal> Original_NCCC_CC_IN, 
                    string Original_CREATE_USER, 
                    decimal Original_POS_CC_IN, 
                    System.DateTime Original_CREATE_DTM, 
                    global::System.Nullable<decimal> Original_CC_DIFF_AMT, 
                    string Original_MODI_USER, 
                    string Original_EXCEPTION_CAUSE, 
                    System.DateTime Original_MODI_DTM) {
            return this.Update(Original_BANK_CASH_M_ID, TRADE_DATE, BANK_CASH_IN, POS_CASH_IN, UL_BATCH_NO, CASH_DIFF_AMT, UL_DTM, NCCC_CC_IN, CREATE_USER, POS_CC_IN, CREATE_DTM, CC_DIFF_AMT, MODI_USER, EXCEPTION_CAUSE, MODI_DTM, Original_BANK_CASH_M_ID, Original_TRADE_DATE, Original_BANK_CASH_IN, Original_POS_CASH_IN, Original_UL_BATCH_NO, Original_CASH_DIFF_AMT, Original_UL_DTM, Original_NCCC_CC_IN, Original_CREATE_USER, Original_POS_CC_IN, Original_CREATE_DTM, Original_CC_DIFF_AMT, Original_MODI_USER, Original_EXCEPTION_CAUSE, Original_MODI_DTM);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private UPLOAD_TEMPTableAdapter _uPLOAD_TEMPTableAdapter;
        
        private BANK_CASH_DETAILTableAdapter _bANK_CASH_DETAILTableAdapter;
        
        private BANK_CASH_DETAIL_TEMPTableAdapter _bANK_CASH_DETAIL_TEMPTableAdapter;
        
        private BANK_CASH_MASTER_TEMPTableAdapter _bANK_CASH_MASTER_TEMPTableAdapter;
        
        private BANK_CASH_MASTERTableAdapter _bANK_CASH_MASTERTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public UPLOAD_TEMPTableAdapter UPLOAD_TEMPTableAdapter {
            get {
                return this._uPLOAD_TEMPTableAdapter;
            }
            set {
                this._uPLOAD_TEMPTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public BANK_CASH_DETAILTableAdapter BANK_CASH_DETAILTableAdapter {
            get {
                return this._bANK_CASH_DETAILTableAdapter;
            }
            set {
                this._bANK_CASH_DETAILTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public BANK_CASH_DETAIL_TEMPTableAdapter BANK_CASH_DETAIL_TEMPTableAdapter {
            get {
                return this._bANK_CASH_DETAIL_TEMPTableAdapter;
            }
            set {
                this._bANK_CASH_DETAIL_TEMPTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public BANK_CASH_MASTER_TEMPTableAdapter BANK_CASH_MASTER_TEMPTableAdapter {
            get {
                return this._bANK_CASH_MASTER_TEMPTableAdapter;
            }
            set {
                this._bANK_CASH_MASTER_TEMPTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public BANK_CASH_MASTERTableAdapter BANK_CASH_MASTERTableAdapter {
            get {
                return this._bANK_CASH_MASTERTableAdapter;
            }
            set {
                this._bANK_CASH_MASTERTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._uPLOAD_TEMPTableAdapter != null) 
                            && (this._uPLOAD_TEMPTableAdapter.Connection != null))) {
                    return this._uPLOAD_TEMPTableAdapter.Connection;
                }
                if (((this._bANK_CASH_DETAILTableAdapter != null) 
                            && (this._bANK_CASH_DETAILTableAdapter.Connection != null))) {
                    return this._bANK_CASH_DETAILTableAdapter.Connection;
                }
                if (((this._bANK_CASH_DETAIL_TEMPTableAdapter != null) 
                            && (this._bANK_CASH_DETAIL_TEMPTableAdapter.Connection != null))) {
                    return this._bANK_CASH_DETAIL_TEMPTableAdapter.Connection;
                }
                if (((this._bANK_CASH_MASTER_TEMPTableAdapter != null) 
                            && (this._bANK_CASH_MASTER_TEMPTableAdapter.Connection != null))) {
                    return this._bANK_CASH_MASTER_TEMPTableAdapter.Connection;
                }
                if (((this._bANK_CASH_MASTERTableAdapter != null) 
                            && (this._bANK_CASH_MASTERTableAdapter.Connection != null))) {
                    return this._bANK_CASH_MASTERTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._uPLOAD_TEMPTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._bANK_CASH_DETAILTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._bANK_CASH_DETAIL_TEMPTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._bANK_CASH_MASTER_TEMPTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._bANK_CASH_MASTERTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(CHK06_BankCash_DTO dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._bANK_CASH_MASTER_TEMPTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.BANK_CASH_MASTER_TEMP.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._bANK_CASH_MASTER_TEMPTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._bANK_CASH_MASTERTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.BANK_CASH_MASTER.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._bANK_CASH_MASTERTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._bANK_CASH_DETAIL_TEMPTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.BANK_CASH_DETAIL_TEMP.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._bANK_CASH_DETAIL_TEMPTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._uPLOAD_TEMPTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.UPLOAD_TEMP.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._uPLOAD_TEMPTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._bANK_CASH_DETAILTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.BANK_CASH_DETAIL.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._bANK_CASH_DETAILTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(CHK06_BankCash_DTO dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._bANK_CASH_MASTER_TEMPTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.BANK_CASH_MASTER_TEMP.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._bANK_CASH_MASTER_TEMPTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._bANK_CASH_MASTERTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.BANK_CASH_MASTER.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._bANK_CASH_MASTERTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._bANK_CASH_DETAIL_TEMPTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.BANK_CASH_DETAIL_TEMP.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._bANK_CASH_DETAIL_TEMPTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._uPLOAD_TEMPTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.UPLOAD_TEMP.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._uPLOAD_TEMPTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._bANK_CASH_DETAILTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.BANK_CASH_DETAIL.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._bANK_CASH_DETAILTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(CHK06_BankCash_DTO dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._bANK_CASH_DETAILTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.BANK_CASH_DETAIL.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._bANK_CASH_DETAILTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._uPLOAD_TEMPTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.UPLOAD_TEMP.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._uPLOAD_TEMPTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._bANK_CASH_DETAIL_TEMPTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.BANK_CASH_DETAIL_TEMP.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._bANK_CASH_DETAIL_TEMPTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._bANK_CASH_MASTERTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.BANK_CASH_MASTER.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._bANK_CASH_MASTERTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._bANK_CASH_MASTER_TEMPTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.BANK_CASH_MASTER_TEMP.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._bANK_CASH_MASTER_TEMPTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(CHK06_BankCash_DTO dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._uPLOAD_TEMPTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._uPLOAD_TEMPTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._bANK_CASH_DETAILTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._bANK_CASH_DETAILTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._bANK_CASH_DETAIL_TEMPTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._bANK_CASH_DETAIL_TEMPTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._bANK_CASH_MASTER_TEMPTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._bANK_CASH_MASTER_TEMPTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._bANK_CASH_MASTERTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._bANK_CASH_MASTERTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager 未包含連接資訊。請將每個 TableAdapterManager 的 TableAdapter 屬性設成有效的 Table" +
                        "Adapter 執行個體。");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("無法開始交易。目前的資料連接不支援交易或是目前的狀態不允許交易開始。");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._uPLOAD_TEMPTableAdapter != null)) {
                    revertConnections.Add(this._uPLOAD_TEMPTableAdapter, this._uPLOAD_TEMPTableAdapter.Connection);
                    this._uPLOAD_TEMPTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(workConnection));
                    this._uPLOAD_TEMPTableAdapter.Transaction = ((global::System.Data.OracleClient.OracleTransaction)(workTransaction));
                    if (this._uPLOAD_TEMPTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._uPLOAD_TEMPTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._uPLOAD_TEMPTableAdapter.Adapter);
                    }
                }
                if ((this._bANK_CASH_DETAILTableAdapter != null)) {
                    revertConnections.Add(this._bANK_CASH_DETAILTableAdapter, this._bANK_CASH_DETAILTableAdapter.Connection);
                    this._bANK_CASH_DETAILTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(workConnection));
                    this._bANK_CASH_DETAILTableAdapter.Transaction = ((global::System.Data.OracleClient.OracleTransaction)(workTransaction));
                    if (this._bANK_CASH_DETAILTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._bANK_CASH_DETAILTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._bANK_CASH_DETAILTableAdapter.Adapter);
                    }
                }
                if ((this._bANK_CASH_DETAIL_TEMPTableAdapter != null)) {
                    revertConnections.Add(this._bANK_CASH_DETAIL_TEMPTableAdapter, this._bANK_CASH_DETAIL_TEMPTableAdapter.Connection);
                    this._bANK_CASH_DETAIL_TEMPTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(workConnection));
                    this._bANK_CASH_DETAIL_TEMPTableAdapter.Transaction = ((global::System.Data.OracleClient.OracleTransaction)(workTransaction));
                    if (this._bANK_CASH_DETAIL_TEMPTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._bANK_CASH_DETAIL_TEMPTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._bANK_CASH_DETAIL_TEMPTableAdapter.Adapter);
                    }
                }
                if ((this._bANK_CASH_MASTER_TEMPTableAdapter != null)) {
                    revertConnections.Add(this._bANK_CASH_MASTER_TEMPTableAdapter, this._bANK_CASH_MASTER_TEMPTableAdapter.Connection);
                    this._bANK_CASH_MASTER_TEMPTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(workConnection));
                    this._bANK_CASH_MASTER_TEMPTableAdapter.Transaction = ((global::System.Data.OracleClient.OracleTransaction)(workTransaction));
                    if (this._bANK_CASH_MASTER_TEMPTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._bANK_CASH_MASTER_TEMPTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._bANK_CASH_MASTER_TEMPTableAdapter.Adapter);
                    }
                }
                if ((this._bANK_CASH_MASTERTableAdapter != null)) {
                    revertConnections.Add(this._bANK_CASH_MASTERTableAdapter, this._bANK_CASH_MASTERTableAdapter.Connection);
                    this._bANK_CASH_MASTERTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(workConnection));
                    this._bANK_CASH_MASTERTableAdapter.Transaction = ((global::System.Data.OracleClient.OracleTransaction)(workTransaction));
                    if (this._bANK_CASH_MASTERTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._bANK_CASH_MASTERTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._bANK_CASH_MASTERTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._uPLOAD_TEMPTableAdapter != null)) {
                    this._uPLOAD_TEMPTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(revertConnections[this._uPLOAD_TEMPTableAdapter]));
                    this._uPLOAD_TEMPTableAdapter.Transaction = null;
                }
                if ((this._bANK_CASH_DETAILTableAdapter != null)) {
                    this._bANK_CASH_DETAILTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(revertConnections[this._bANK_CASH_DETAILTableAdapter]));
                    this._bANK_CASH_DETAILTableAdapter.Transaction = null;
                }
                if ((this._bANK_CASH_DETAIL_TEMPTableAdapter != null)) {
                    this._bANK_CASH_DETAIL_TEMPTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(revertConnections[this._bANK_CASH_DETAIL_TEMPTableAdapter]));
                    this._bANK_CASH_DETAIL_TEMPTableAdapter.Transaction = null;
                }
                if ((this._bANK_CASH_MASTER_TEMPTableAdapter != null)) {
                    this._bANK_CASH_MASTER_TEMPTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(revertConnections[this._bANK_CASH_MASTER_TEMPTableAdapter]));
                    this._bANK_CASH_MASTER_TEMPTableAdapter.Transaction = null;
                }
                if ((this._bANK_CASH_MASTERTableAdapter != null)) {
                    this._bANK_CASH_MASTERTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(revertConnections[this._bANK_CASH_MASTERTableAdapter]));
                    this._bANK_CASH_MASTERTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591