//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:2.0.50727.4952
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace FET.POS.Model.DTO {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("OPT03_CreditCardInstallment_DTO")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class OPT03_CreditCardInstallment_DTO : global::System.Data.DataSet {
        
        private BANKDataTable tableBANK;
        
        private COST_CENTERDataTable tableCOST_CENTER;
        
        private CREDIT_CARD_SETTLEMMENTDataTable tableCREDIT_CARD_SETTLEMMENT;
        
        private CREDIT_CART_INSTELLMENTDataTable tableCREDIT_CART_INSTELLMENT;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public OPT03_CreditCardInstallment_DTO() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected OPT03_CreditCardInstallment_DTO(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["BANK"] != null)) {
                    base.Tables.Add(new BANKDataTable(ds.Tables["BANK"]));
                }
                if ((ds.Tables["COST_CENTER"] != null)) {
                    base.Tables.Add(new COST_CENTERDataTable(ds.Tables["COST_CENTER"]));
                }
                if ((ds.Tables["CREDIT_CARD_SETTLEMMENT"] != null)) {
                    base.Tables.Add(new CREDIT_CARD_SETTLEMMENTDataTable(ds.Tables["CREDIT_CARD_SETTLEMMENT"]));
                }
                if ((ds.Tables["CREDIT_CART_INSTELLMENT"] != null)) {
                    base.Tables.Add(new CREDIT_CART_INSTELLMENTDataTable(ds.Tables["CREDIT_CART_INSTELLMENT"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BANKDataTable BANK {
            get {
                return this.tableBANK;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public COST_CENTERDataTable COST_CENTER {
            get {
                return this.tableCOST_CENTER;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CREDIT_CARD_SETTLEMMENTDataTable CREDIT_CARD_SETTLEMMENT {
            get {
                return this.tableCREDIT_CARD_SETTLEMMENT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CREDIT_CART_INSTELLMENTDataTable CREDIT_CART_INSTELLMENT {
            get {
                return this.tableCREDIT_CART_INSTELLMENT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            OPT03_CreditCardInstallment_DTO cln = ((OPT03_CreditCardInstallment_DTO)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["BANK"] != null)) {
                    base.Tables.Add(new BANKDataTable(ds.Tables["BANK"]));
                }
                if ((ds.Tables["COST_CENTER"] != null)) {
                    base.Tables.Add(new COST_CENTERDataTable(ds.Tables["COST_CENTER"]));
                }
                if ((ds.Tables["CREDIT_CARD_SETTLEMMENT"] != null)) {
                    base.Tables.Add(new CREDIT_CARD_SETTLEMMENTDataTable(ds.Tables["CREDIT_CARD_SETTLEMMENT"]));
                }
                if ((ds.Tables["CREDIT_CART_INSTELLMENT"] != null)) {
                    base.Tables.Add(new CREDIT_CART_INSTELLMENTDataTable(ds.Tables["CREDIT_CART_INSTELLMENT"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableBANK = ((BANKDataTable)(base.Tables["BANK"]));
            if ((initTable == true)) {
                if ((this.tableBANK != null)) {
                    this.tableBANK.InitVars();
                }
            }
            this.tableCOST_CENTER = ((COST_CENTERDataTable)(base.Tables["COST_CENTER"]));
            if ((initTable == true)) {
                if ((this.tableCOST_CENTER != null)) {
                    this.tableCOST_CENTER.InitVars();
                }
            }
            this.tableCREDIT_CARD_SETTLEMMENT = ((CREDIT_CARD_SETTLEMMENTDataTable)(base.Tables["CREDIT_CARD_SETTLEMMENT"]));
            if ((initTable == true)) {
                if ((this.tableCREDIT_CARD_SETTLEMMENT != null)) {
                    this.tableCREDIT_CARD_SETTLEMMENT.InitVars();
                }
            }
            this.tableCREDIT_CART_INSTELLMENT = ((CREDIT_CART_INSTELLMENTDataTable)(base.Tables["CREDIT_CART_INSTELLMENT"]));
            if ((initTable == true)) {
                if ((this.tableCREDIT_CART_INSTELLMENT != null)) {
                    this.tableCREDIT_CART_INSTELLMENT.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "OPT03_CreditCardInstallment_DTO";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/OPT03_CreditCardInstallment.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableBANK = new BANKDataTable();
            base.Tables.Add(this.tableBANK);
            this.tableCOST_CENTER = new COST_CENTERDataTable();
            base.Tables.Add(this.tableCOST_CENTER);
            this.tableCREDIT_CARD_SETTLEMMENT = new CREDIT_CARD_SETTLEMMENTDataTable();
            base.Tables.Add(this.tableCREDIT_CARD_SETTLEMMENT);
            this.tableCREDIT_CART_INSTELLMENT = new CREDIT_CART_INSTELLMENTDataTable();
            base.Tables.Add(this.tableCREDIT_CART_INSTELLMENT);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeBANK() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCOST_CENTER() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCREDIT_CARD_SETTLEMMENT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCREDIT_CART_INSTELLMENT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            OPT03_CreditCardInstallment_DTO ds = new OPT03_CreditCardInstallment_DTO();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void BANKRowChangeEventHandler(object sender, BANKRowChangeEvent e);
        
        public delegate void COST_CENTERRowChangeEventHandler(object sender, COST_CENTERRowChangeEvent e);
        
        public delegate void CREDIT_CARD_SETTLEMMENTRowChangeEventHandler(object sender, CREDIT_CARD_SETTLEMMENTRowChangeEvent e);
        
        public delegate void CREDIT_CART_INSTELLMENTRowChangeEventHandler(object sender, CREDIT_CART_INSTELLMENTRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BANKDataTable : global::System.Data.TypedTableBase<BANKRow> {
            
            private global::System.Data.DataColumn columnBANK_ID;
            
            private global::System.Data.DataColumn columnBANK_NAME;
            
            private global::System.Data.DataColumn columnCREATE_USER;
            
            private global::System.Data.DataColumn columnCREATE_DTM;
            
            private global::System.Data.DataColumn columnMODI_USER;
            
            private global::System.Data.DataColumn columnMODI_DTM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BANKDataTable() {
                this.TableName = "BANK";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BANKDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected BANKDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BANK_IDColumn {
                get {
                    return this.columnBANK_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BANK_NAMEColumn {
                get {
                    return this.columnBANK_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_USERColumn {
                get {
                    return this.columnCREATE_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_DTMColumn {
                get {
                    return this.columnCREATE_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODI_USERColumn {
                get {
                    return this.columnMODI_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODI_DTMColumn {
                get {
                    return this.columnMODI_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BANKRow this[int index] {
                get {
                    return ((BANKRow)(this.Rows[index]));
                }
            }
            
            public event BANKRowChangeEventHandler BANKRowChanging;
            
            public event BANKRowChangeEventHandler BANKRowChanged;
            
            public event BANKRowChangeEventHandler BANKRowDeleting;
            
            public event BANKRowChangeEventHandler BANKRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddBANKRow(BANKRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BANKRow AddBANKRow(string BANK_ID, string BANK_NAME, string CREATE_USER, System.DateTime CREATE_DTM, string MODI_USER, System.DateTime MODI_DTM) {
                BANKRow rowBANKRow = ((BANKRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BANK_ID,
                        BANK_NAME,
                        CREATE_USER,
                        CREATE_DTM,
                        MODI_USER,
                        MODI_DTM};
                rowBANKRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBANKRow);
                return rowBANKRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BANKRow FindByBANK_ID(string BANK_ID) {
                return ((BANKRow)(this.Rows.Find(new object[] {
                            BANK_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                BANKDataTable cln = ((BANKDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BANKDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBANK_ID = base.Columns["BANK_ID"];
                this.columnBANK_NAME = base.Columns["BANK_NAME"];
                this.columnCREATE_USER = base.Columns["CREATE_USER"];
                this.columnCREATE_DTM = base.Columns["CREATE_DTM"];
                this.columnMODI_USER = base.Columns["MODI_USER"];
                this.columnMODI_DTM = base.Columns["MODI_DTM"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBANK_ID = new global::System.Data.DataColumn("BANK_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBANK_ID);
                this.columnBANK_NAME = new global::System.Data.DataColumn("BANK_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBANK_NAME);
                this.columnCREATE_USER = new global::System.Data.DataColumn("CREATE_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_USER);
                this.columnCREATE_DTM = new global::System.Data.DataColumn("CREATE_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_DTM);
                this.columnMODI_USER = new global::System.Data.DataColumn("MODI_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODI_USER);
                this.columnMODI_DTM = new global::System.Data.DataColumn("MODI_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODI_DTM);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnBANK_ID}, true));
                this.columnBANK_ID.AllowDBNull = false;
                this.columnBANK_ID.Unique = true;
                this.columnBANK_ID.MaxLength = 50;
                this.columnBANK_NAME.AllowDBNull = false;
                this.columnBANK_NAME.MaxLength = 50;
                this.columnCREATE_USER.AllowDBNull = false;
                this.columnCREATE_USER.MaxLength = 50;
                this.columnCREATE_DTM.AllowDBNull = false;
                this.columnMODI_USER.AllowDBNull = false;
                this.columnMODI_USER.MaxLength = 50;
                this.columnMODI_DTM.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BANKRow NewBANKRow() {
                return ((BANKRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BANKRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(BANKRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BANKRowChanged != null)) {
                    this.BANKRowChanged(this, new BANKRowChangeEvent(((BANKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BANKRowChanging != null)) {
                    this.BANKRowChanging(this, new BANKRowChangeEvent(((BANKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BANKRowDeleted != null)) {
                    this.BANKRowDeleted(this, new BANKRowChangeEvent(((BANKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BANKRowDeleting != null)) {
                    this.BANKRowDeleting(this, new BANKRowChangeEvent(((BANKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveBANKRow(BANKRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                OPT03_CreditCardInstallment_DTO ds = new OPT03_CreditCardInstallment_DTO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BANKDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class COST_CENTERDataTable : global::System.Data.TypedTableBase<COST_CENTERRow> {
            
            private global::System.Data.DataColumn columnCOST_CENTER_ID;
            
            private global::System.Data.DataColumn columnCOST_CENTER_NO;
            
            private global::System.Data.DataColumn columnCOST_CENTER_NAME;
            
            private global::System.Data.DataColumn columnCREATE_USER;
            
            private global::System.Data.DataColumn columnCREATE_DTM;
            
            private global::System.Data.DataColumn columnMODI_USER;
            
            private global::System.Data.DataColumn columnMODI_DTM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public COST_CENTERDataTable() {
                this.TableName = "COST_CENTER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal COST_CENTERDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected COST_CENTERDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COST_CENTER_IDColumn {
                get {
                    return this.columnCOST_CENTER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COST_CENTER_NOColumn {
                get {
                    return this.columnCOST_CENTER_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COST_CENTER_NAMEColumn {
                get {
                    return this.columnCOST_CENTER_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_USERColumn {
                get {
                    return this.columnCREATE_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_DTMColumn {
                get {
                    return this.columnCREATE_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODI_USERColumn {
                get {
                    return this.columnMODI_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODI_DTMColumn {
                get {
                    return this.columnMODI_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public COST_CENTERRow this[int index] {
                get {
                    return ((COST_CENTERRow)(this.Rows[index]));
                }
            }
            
            public event COST_CENTERRowChangeEventHandler COST_CENTERRowChanging;
            
            public event COST_CENTERRowChangeEventHandler COST_CENTERRowChanged;
            
            public event COST_CENTERRowChangeEventHandler COST_CENTERRowDeleting;
            
            public event COST_CENTERRowChangeEventHandler COST_CENTERRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCOST_CENTERRow(COST_CENTERRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public COST_CENTERRow AddCOST_CENTERRow(string COST_CENTER_ID, string COST_CENTER_NO, string COST_CENTER_NAME, string CREATE_USER, System.DateTime CREATE_DTM, string MODI_USER, System.DateTime MODI_DTM) {
                COST_CENTERRow rowCOST_CENTERRow = ((COST_CENTERRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        COST_CENTER_ID,
                        COST_CENTER_NO,
                        COST_CENTER_NAME,
                        CREATE_USER,
                        CREATE_DTM,
                        MODI_USER,
                        MODI_DTM};
                rowCOST_CENTERRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCOST_CENTERRow);
                return rowCOST_CENTERRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public COST_CENTERRow FindByCOST_CENTER_ID(string COST_CENTER_ID) {
                return ((COST_CENTERRow)(this.Rows.Find(new object[] {
                            COST_CENTER_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                COST_CENTERDataTable cln = ((COST_CENTERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new COST_CENTERDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCOST_CENTER_ID = base.Columns["COST_CENTER_ID"];
                this.columnCOST_CENTER_NO = base.Columns["COST_CENTER_NO"];
                this.columnCOST_CENTER_NAME = base.Columns["COST_CENTER_NAME"];
                this.columnCREATE_USER = base.Columns["CREATE_USER"];
                this.columnCREATE_DTM = base.Columns["CREATE_DTM"];
                this.columnMODI_USER = base.Columns["MODI_USER"];
                this.columnMODI_DTM = base.Columns["MODI_DTM"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCOST_CENTER_ID = new global::System.Data.DataColumn("COST_CENTER_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOST_CENTER_ID);
                this.columnCOST_CENTER_NO = new global::System.Data.DataColumn("COST_CENTER_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOST_CENTER_NO);
                this.columnCOST_CENTER_NAME = new global::System.Data.DataColumn("COST_CENTER_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOST_CENTER_NAME);
                this.columnCREATE_USER = new global::System.Data.DataColumn("CREATE_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_USER);
                this.columnCREATE_DTM = new global::System.Data.DataColumn("CREATE_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_DTM);
                this.columnMODI_USER = new global::System.Data.DataColumn("MODI_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODI_USER);
                this.columnMODI_DTM = new global::System.Data.DataColumn("MODI_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODI_DTM);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCOST_CENTER_ID}, true));
                this.columnCOST_CENTER_ID.AllowDBNull = false;
                this.columnCOST_CENTER_ID.Unique = true;
                this.columnCOST_CENTER_ID.MaxLength = 32;
                this.columnCOST_CENTER_NO.AllowDBNull = false;
                this.columnCOST_CENTER_NO.MaxLength = 50;
                this.columnCOST_CENTER_NAME.AllowDBNull = false;
                this.columnCOST_CENTER_NAME.MaxLength = 50;
                this.columnCREATE_USER.AllowDBNull = false;
                this.columnCREATE_USER.MaxLength = 50;
                this.columnCREATE_DTM.AllowDBNull = false;
                this.columnMODI_USER.AllowDBNull = false;
                this.columnMODI_USER.MaxLength = 50;
                this.columnMODI_DTM.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public COST_CENTERRow NewCOST_CENTERRow() {
                return ((COST_CENTERRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new COST_CENTERRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(COST_CENTERRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.COST_CENTERRowChanged != null)) {
                    this.COST_CENTERRowChanged(this, new COST_CENTERRowChangeEvent(((COST_CENTERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.COST_CENTERRowChanging != null)) {
                    this.COST_CENTERRowChanging(this, new COST_CENTERRowChangeEvent(((COST_CENTERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.COST_CENTERRowDeleted != null)) {
                    this.COST_CENTERRowDeleted(this, new COST_CENTERRowChangeEvent(((COST_CENTERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.COST_CENTERRowDeleting != null)) {
                    this.COST_CENTERRowDeleting(this, new COST_CENTERRowChangeEvent(((COST_CENTERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCOST_CENTERRow(COST_CENTERRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                OPT03_CreditCardInstallment_DTO ds = new OPT03_CreditCardInstallment_DTO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "COST_CENTERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CREDIT_CARD_SETTLEMMENTDataTable : global::System.Data.TypedTableBase<CREDIT_CARD_SETTLEMMENTRow> {
            
            private global::System.Data.DataColumn columnSETTLEMENT_ID;
            
            private global::System.Data.DataColumn columnINSTELLMENT_ID;
            
            private global::System.Data.DataColumn columnLINE_NO;
            
            private global::System.Data.DataColumn columnSETTLEMENT_RATE;
            
            private global::System.Data.DataColumn columnCREATE_USER;
            
            private global::System.Data.DataColumn columnCREATE_DTM;
            
            private global::System.Data.DataColumn columnMODI_USER;
            
            private global::System.Data.DataColumn columnMODI_DTM;
            
            private global::System.Data.DataColumn columnCOST_CENTER_NO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CREDIT_CARD_SETTLEMMENTDataTable() {
                this.TableName = "CREDIT_CARD_SETTLEMMENT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CREDIT_CARD_SETTLEMMENTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CREDIT_CARD_SETTLEMMENTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SETTLEMENT_IDColumn {
                get {
                    return this.columnSETTLEMENT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INSTELLMENT_IDColumn {
                get {
                    return this.columnINSTELLMENT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LINE_NOColumn {
                get {
                    return this.columnLINE_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SETTLEMENT_RATEColumn {
                get {
                    return this.columnSETTLEMENT_RATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_USERColumn {
                get {
                    return this.columnCREATE_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_DTMColumn {
                get {
                    return this.columnCREATE_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODI_USERColumn {
                get {
                    return this.columnMODI_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODI_DTMColumn {
                get {
                    return this.columnMODI_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COST_CENTER_NOColumn {
                get {
                    return this.columnCOST_CENTER_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CREDIT_CARD_SETTLEMMENTRow this[int index] {
                get {
                    return ((CREDIT_CARD_SETTLEMMENTRow)(this.Rows[index]));
                }
            }
            
            public event CREDIT_CARD_SETTLEMMENTRowChangeEventHandler CREDIT_CARD_SETTLEMMENTRowChanging;
            
            public event CREDIT_CARD_SETTLEMMENTRowChangeEventHandler CREDIT_CARD_SETTLEMMENTRowChanged;
            
            public event CREDIT_CARD_SETTLEMMENTRowChangeEventHandler CREDIT_CARD_SETTLEMMENTRowDeleting;
            
            public event CREDIT_CARD_SETTLEMMENTRowChangeEventHandler CREDIT_CARD_SETTLEMMENTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCREDIT_CARD_SETTLEMMENTRow(CREDIT_CARD_SETTLEMMENTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CREDIT_CARD_SETTLEMMENTRow AddCREDIT_CARD_SETTLEMMENTRow(string SETTLEMENT_ID, string INSTELLMENT_ID, decimal LINE_NO, decimal SETTLEMENT_RATE, string CREATE_USER, System.DateTime CREATE_DTM, string MODI_USER, System.DateTime MODI_DTM, string COST_CENTER_NO) {
                CREDIT_CARD_SETTLEMMENTRow rowCREDIT_CARD_SETTLEMMENTRow = ((CREDIT_CARD_SETTLEMMENTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SETTLEMENT_ID,
                        INSTELLMENT_ID,
                        LINE_NO,
                        SETTLEMENT_RATE,
                        CREATE_USER,
                        CREATE_DTM,
                        MODI_USER,
                        MODI_DTM,
                        COST_CENTER_NO};
                rowCREDIT_CARD_SETTLEMMENTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCREDIT_CARD_SETTLEMMENTRow);
                return rowCREDIT_CARD_SETTLEMMENTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CREDIT_CARD_SETTLEMMENTRow FindBySETTLEMENT_ID(string SETTLEMENT_ID) {
                return ((CREDIT_CARD_SETTLEMMENTRow)(this.Rows.Find(new object[] {
                            SETTLEMENT_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CREDIT_CARD_SETTLEMMENTDataTable cln = ((CREDIT_CARD_SETTLEMMENTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CREDIT_CARD_SETTLEMMENTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSETTLEMENT_ID = base.Columns["SETTLEMENT_ID"];
                this.columnINSTELLMENT_ID = base.Columns["INSTELLMENT_ID"];
                this.columnLINE_NO = base.Columns["LINE_NO"];
                this.columnSETTLEMENT_RATE = base.Columns["SETTLEMENT_RATE"];
                this.columnCREATE_USER = base.Columns["CREATE_USER"];
                this.columnCREATE_DTM = base.Columns["CREATE_DTM"];
                this.columnMODI_USER = base.Columns["MODI_USER"];
                this.columnMODI_DTM = base.Columns["MODI_DTM"];
                this.columnCOST_CENTER_NO = base.Columns["COST_CENTER_NO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSETTLEMENT_ID = new global::System.Data.DataColumn("SETTLEMENT_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSETTLEMENT_ID);
                this.columnINSTELLMENT_ID = new global::System.Data.DataColumn("INSTELLMENT_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSTELLMENT_ID);
                this.columnLINE_NO = new global::System.Data.DataColumn("LINE_NO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLINE_NO);
                this.columnSETTLEMENT_RATE = new global::System.Data.DataColumn("SETTLEMENT_RATE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSETTLEMENT_RATE);
                this.columnCREATE_USER = new global::System.Data.DataColumn("CREATE_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_USER);
                this.columnCREATE_DTM = new global::System.Data.DataColumn("CREATE_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_DTM);
                this.columnMODI_USER = new global::System.Data.DataColumn("MODI_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODI_USER);
                this.columnMODI_DTM = new global::System.Data.DataColumn("MODI_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODI_DTM);
                this.columnCOST_CENTER_NO = new global::System.Data.DataColumn("COST_CENTER_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOST_CENTER_NO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSETTLEMENT_ID}, true));
                this.columnSETTLEMENT_ID.AllowDBNull = false;
                this.columnSETTLEMENT_ID.Unique = true;
                this.columnSETTLEMENT_ID.MaxLength = 32;
                this.columnINSTELLMENT_ID.MaxLength = 32;
                this.columnLINE_NO.AllowDBNull = false;
                this.columnSETTLEMENT_RATE.AllowDBNull = false;
                this.columnCREATE_USER.AllowDBNull = false;
                this.columnCREATE_USER.MaxLength = 50;
                this.columnCREATE_DTM.AllowDBNull = false;
                this.columnMODI_USER.AllowDBNull = false;
                this.columnMODI_USER.MaxLength = 50;
                this.columnMODI_DTM.AllowDBNull = false;
                this.columnCOST_CENTER_NO.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CREDIT_CARD_SETTLEMMENTRow NewCREDIT_CARD_SETTLEMMENTRow() {
                return ((CREDIT_CARD_SETTLEMMENTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CREDIT_CARD_SETTLEMMENTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CREDIT_CARD_SETTLEMMENTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CREDIT_CARD_SETTLEMMENTRowChanged != null)) {
                    this.CREDIT_CARD_SETTLEMMENTRowChanged(this, new CREDIT_CARD_SETTLEMMENTRowChangeEvent(((CREDIT_CARD_SETTLEMMENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CREDIT_CARD_SETTLEMMENTRowChanging != null)) {
                    this.CREDIT_CARD_SETTLEMMENTRowChanging(this, new CREDIT_CARD_SETTLEMMENTRowChangeEvent(((CREDIT_CARD_SETTLEMMENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CREDIT_CARD_SETTLEMMENTRowDeleted != null)) {
                    this.CREDIT_CARD_SETTLEMMENTRowDeleted(this, new CREDIT_CARD_SETTLEMMENTRowChangeEvent(((CREDIT_CARD_SETTLEMMENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CREDIT_CARD_SETTLEMMENTRowDeleting != null)) {
                    this.CREDIT_CARD_SETTLEMMENTRowDeleting(this, new CREDIT_CARD_SETTLEMMENTRowChangeEvent(((CREDIT_CARD_SETTLEMMENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCREDIT_CARD_SETTLEMMENTRow(CREDIT_CARD_SETTLEMMENTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                OPT03_CreditCardInstallment_DTO ds = new OPT03_CreditCardInstallment_DTO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CREDIT_CARD_SETTLEMMENTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CREDIT_CART_INSTELLMENTDataTable : global::System.Data.TypedTableBase<CREDIT_CART_INSTELLMENTRow> {
            
            private global::System.Data.DataColumn columnINSTELLMENT_ID;
            
            private global::System.Data.DataColumn columnPAY_SEQMENT;
            
            private global::System.Data.DataColumn columnSEQMENT_RATE;
            
            private global::System.Data.DataColumn columnS_DATE;
            
            private global::System.Data.DataColumn columnE_DATE;
            
            private global::System.Data.DataColumn columnCREATE_USER;
            
            private global::System.Data.DataColumn columnCREATE_DTM;
            
            private global::System.Data.DataColumn columnMODI_USER;
            
            private global::System.Data.DataColumn columnMODI_DTM;
            
            private global::System.Data.DataColumn columnBANK_ID;
            
            private global::System.Data.DataColumn columnCREDIT_CARD_TYPE_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CREDIT_CART_INSTELLMENTDataTable() {
                this.TableName = "CREDIT_CART_INSTELLMENT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CREDIT_CART_INSTELLMENTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CREDIT_CART_INSTELLMENTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INSTELLMENT_IDColumn {
                get {
                    return this.columnINSTELLMENT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PAY_SEQMENTColumn {
                get {
                    return this.columnPAY_SEQMENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEQMENT_RATEColumn {
                get {
                    return this.columnSEQMENT_RATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn S_DATEColumn {
                get {
                    return this.columnS_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn E_DATEColumn {
                get {
                    return this.columnE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_USERColumn {
                get {
                    return this.columnCREATE_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_DTMColumn {
                get {
                    return this.columnCREATE_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODI_USERColumn {
                get {
                    return this.columnMODI_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODI_DTMColumn {
                get {
                    return this.columnMODI_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BANK_IDColumn {
                get {
                    return this.columnBANK_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREDIT_CARD_TYPE_IDColumn {
                get {
                    return this.columnCREDIT_CARD_TYPE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CREDIT_CART_INSTELLMENTRow this[int index] {
                get {
                    return ((CREDIT_CART_INSTELLMENTRow)(this.Rows[index]));
                }
            }
            
            public event CREDIT_CART_INSTELLMENTRowChangeEventHandler CREDIT_CART_INSTELLMENTRowChanging;
            
            public event CREDIT_CART_INSTELLMENTRowChangeEventHandler CREDIT_CART_INSTELLMENTRowChanged;
            
            public event CREDIT_CART_INSTELLMENTRowChangeEventHandler CREDIT_CART_INSTELLMENTRowDeleting;
            
            public event CREDIT_CART_INSTELLMENTRowChangeEventHandler CREDIT_CART_INSTELLMENTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCREDIT_CART_INSTELLMENTRow(CREDIT_CART_INSTELLMENTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CREDIT_CART_INSTELLMENTRow AddCREDIT_CART_INSTELLMENTRow(string INSTELLMENT_ID, decimal PAY_SEQMENT, decimal SEQMENT_RATE, System.DateTime S_DATE, System.DateTime E_DATE, string CREATE_USER, System.DateTime CREATE_DTM, string MODI_USER, System.DateTime MODI_DTM, string BANK_ID, string CREDIT_CARD_TYPE_ID) {
                CREDIT_CART_INSTELLMENTRow rowCREDIT_CART_INSTELLMENTRow = ((CREDIT_CART_INSTELLMENTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        INSTELLMENT_ID,
                        PAY_SEQMENT,
                        SEQMENT_RATE,
                        S_DATE,
                        E_DATE,
                        CREATE_USER,
                        CREATE_DTM,
                        MODI_USER,
                        MODI_DTM,
                        BANK_ID,
                        CREDIT_CARD_TYPE_ID};
                rowCREDIT_CART_INSTELLMENTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCREDIT_CART_INSTELLMENTRow);
                return rowCREDIT_CART_INSTELLMENTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CREDIT_CART_INSTELLMENTRow FindByINSTELLMENT_ID(string INSTELLMENT_ID) {
                return ((CREDIT_CART_INSTELLMENTRow)(this.Rows.Find(new object[] {
                            INSTELLMENT_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CREDIT_CART_INSTELLMENTDataTable cln = ((CREDIT_CART_INSTELLMENTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CREDIT_CART_INSTELLMENTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnINSTELLMENT_ID = base.Columns["INSTELLMENT_ID"];
                this.columnPAY_SEQMENT = base.Columns["PAY_SEQMENT"];
                this.columnSEQMENT_RATE = base.Columns["SEQMENT_RATE"];
                this.columnS_DATE = base.Columns["S_DATE"];
                this.columnE_DATE = base.Columns["E_DATE"];
                this.columnCREATE_USER = base.Columns["CREATE_USER"];
                this.columnCREATE_DTM = base.Columns["CREATE_DTM"];
                this.columnMODI_USER = base.Columns["MODI_USER"];
                this.columnMODI_DTM = base.Columns["MODI_DTM"];
                this.columnBANK_ID = base.Columns["BANK_ID"];
                this.columnCREDIT_CARD_TYPE_ID = base.Columns["CREDIT_CARD_TYPE_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnINSTELLMENT_ID = new global::System.Data.DataColumn("INSTELLMENT_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSTELLMENT_ID);
                this.columnPAY_SEQMENT = new global::System.Data.DataColumn("PAY_SEQMENT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAY_SEQMENT);
                this.columnSEQMENT_RATE = new global::System.Data.DataColumn("SEQMENT_RATE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEQMENT_RATE);
                this.columnS_DATE = new global::System.Data.DataColumn("S_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS_DATE);
                this.columnE_DATE = new global::System.Data.DataColumn("E_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE_DATE);
                this.columnCREATE_USER = new global::System.Data.DataColumn("CREATE_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_USER);
                this.columnCREATE_DTM = new global::System.Data.DataColumn("CREATE_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_DTM);
                this.columnMODI_USER = new global::System.Data.DataColumn("MODI_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODI_USER);
                this.columnMODI_DTM = new global::System.Data.DataColumn("MODI_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODI_DTM);
                this.columnBANK_ID = new global::System.Data.DataColumn("BANK_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBANK_ID);
                this.columnCREDIT_CARD_TYPE_ID = new global::System.Data.DataColumn("CREDIT_CARD_TYPE_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREDIT_CARD_TYPE_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnINSTELLMENT_ID}, true));
                this.columnINSTELLMENT_ID.AllowDBNull = false;
                this.columnINSTELLMENT_ID.Unique = true;
                this.columnINSTELLMENT_ID.MaxLength = 32;
                this.columnPAY_SEQMENT.AllowDBNull = false;
                this.columnSEQMENT_RATE.AllowDBNull = false;
                this.columnS_DATE.AllowDBNull = false;
                this.columnCREATE_USER.AllowDBNull = false;
                this.columnCREATE_USER.MaxLength = 20;
                this.columnCREATE_DTM.AllowDBNull = false;
                this.columnMODI_USER.AllowDBNull = false;
                this.columnMODI_USER.MaxLength = 20;
                this.columnMODI_DTM.AllowDBNull = false;
                this.columnBANK_ID.MaxLength = 5;
                this.columnCREDIT_CARD_TYPE_ID.MaxLength = 32;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CREDIT_CART_INSTELLMENTRow NewCREDIT_CART_INSTELLMENTRow() {
                return ((CREDIT_CART_INSTELLMENTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CREDIT_CART_INSTELLMENTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CREDIT_CART_INSTELLMENTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CREDIT_CART_INSTELLMENTRowChanged != null)) {
                    this.CREDIT_CART_INSTELLMENTRowChanged(this, new CREDIT_CART_INSTELLMENTRowChangeEvent(((CREDIT_CART_INSTELLMENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CREDIT_CART_INSTELLMENTRowChanging != null)) {
                    this.CREDIT_CART_INSTELLMENTRowChanging(this, new CREDIT_CART_INSTELLMENTRowChangeEvent(((CREDIT_CART_INSTELLMENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CREDIT_CART_INSTELLMENTRowDeleted != null)) {
                    this.CREDIT_CART_INSTELLMENTRowDeleted(this, new CREDIT_CART_INSTELLMENTRowChangeEvent(((CREDIT_CART_INSTELLMENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CREDIT_CART_INSTELLMENTRowDeleting != null)) {
                    this.CREDIT_CART_INSTELLMENTRowDeleting(this, new CREDIT_CART_INSTELLMENTRowChangeEvent(((CREDIT_CART_INSTELLMENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCREDIT_CART_INSTELLMENTRow(CREDIT_CART_INSTELLMENTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                OPT03_CreditCardInstallment_DTO ds = new OPT03_CreditCardInstallment_DTO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CREDIT_CART_INSTELLMENTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class BANKRow : global::System.Data.DataRow {
            
            private BANKDataTable tableBANK;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BANKRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBANK = ((BANKDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BANK_ID {
                get {
                    return ((string)(this[this.tableBANK.BANK_IDColumn]));
                }
                set {
                    this[this.tableBANK.BANK_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BANK_NAME {
                get {
                    return ((string)(this[this.tableBANK.BANK_NAMEColumn]));
                }
                set {
                    this[this.tableBANK.BANK_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CREATE_USER {
                get {
                    return ((string)(this[this.tableBANK.CREATE_USERColumn]));
                }
                set {
                    this[this.tableBANK.CREATE_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CREATE_DTM {
                get {
                    return ((global::System.DateTime)(this[this.tableBANK.CREATE_DTMColumn]));
                }
                set {
                    this[this.tableBANK.CREATE_DTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODI_USER {
                get {
                    return ((string)(this[this.tableBANK.MODI_USERColumn]));
                }
                set {
                    this[this.tableBANK.MODI_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODI_DTM {
                get {
                    return ((global::System.DateTime)(this[this.tableBANK.MODI_DTMColumn]));
                }
                set {
                    this[this.tableBANK.MODI_DTMColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class COST_CENTERRow : global::System.Data.DataRow {
            
            private COST_CENTERDataTable tableCOST_CENTER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal COST_CENTERRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCOST_CENTER = ((COST_CENTERDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COST_CENTER_ID {
                get {
                    return ((string)(this[this.tableCOST_CENTER.COST_CENTER_IDColumn]));
                }
                set {
                    this[this.tableCOST_CENTER.COST_CENTER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COST_CENTER_NO {
                get {
                    return ((string)(this[this.tableCOST_CENTER.COST_CENTER_NOColumn]));
                }
                set {
                    this[this.tableCOST_CENTER.COST_CENTER_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COST_CENTER_NAME {
                get {
                    return ((string)(this[this.tableCOST_CENTER.COST_CENTER_NAMEColumn]));
                }
                set {
                    this[this.tableCOST_CENTER.COST_CENTER_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CREATE_USER {
                get {
                    return ((string)(this[this.tableCOST_CENTER.CREATE_USERColumn]));
                }
                set {
                    this[this.tableCOST_CENTER.CREATE_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CREATE_DTM {
                get {
                    return ((global::System.DateTime)(this[this.tableCOST_CENTER.CREATE_DTMColumn]));
                }
                set {
                    this[this.tableCOST_CENTER.CREATE_DTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODI_USER {
                get {
                    return ((string)(this[this.tableCOST_CENTER.MODI_USERColumn]));
                }
                set {
                    this[this.tableCOST_CENTER.MODI_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODI_DTM {
                get {
                    return ((global::System.DateTime)(this[this.tableCOST_CENTER.MODI_DTMColumn]));
                }
                set {
                    this[this.tableCOST_CENTER.MODI_DTMColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CREDIT_CARD_SETTLEMMENTRow : global::System.Data.DataRow {
            
            private CREDIT_CARD_SETTLEMMENTDataTable tableCREDIT_CARD_SETTLEMMENT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CREDIT_CARD_SETTLEMMENTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCREDIT_CARD_SETTLEMMENT = ((CREDIT_CARD_SETTLEMMENTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SETTLEMENT_ID {
                get {
                    return ((string)(this[this.tableCREDIT_CARD_SETTLEMMENT.SETTLEMENT_IDColumn]));
                }
                set {
                    this[this.tableCREDIT_CARD_SETTLEMMENT.SETTLEMENT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INSTELLMENT_ID {
                get {
                    try {
                        return ((string)(this[this.tableCREDIT_CARD_SETTLEMMENT.INSTELLMENT_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'CREDIT_CARD_SETTLEMMENT\' 中資料行 \'INSTELLMENT_ID\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCREDIT_CARD_SETTLEMMENT.INSTELLMENT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LINE_NO {
                get {
                    return ((decimal)(this[this.tableCREDIT_CARD_SETTLEMMENT.LINE_NOColumn]));
                }
                set {
                    this[this.tableCREDIT_CARD_SETTLEMMENT.LINE_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SETTLEMENT_RATE {
                get {
                    return ((decimal)(this[this.tableCREDIT_CARD_SETTLEMMENT.SETTLEMENT_RATEColumn]));
                }
                set {
                    this[this.tableCREDIT_CARD_SETTLEMMENT.SETTLEMENT_RATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CREATE_USER {
                get {
                    return ((string)(this[this.tableCREDIT_CARD_SETTLEMMENT.CREATE_USERColumn]));
                }
                set {
                    this[this.tableCREDIT_CARD_SETTLEMMENT.CREATE_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CREATE_DTM {
                get {
                    return ((global::System.DateTime)(this[this.tableCREDIT_CARD_SETTLEMMENT.CREATE_DTMColumn]));
                }
                set {
                    this[this.tableCREDIT_CARD_SETTLEMMENT.CREATE_DTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODI_USER {
                get {
                    return ((string)(this[this.tableCREDIT_CARD_SETTLEMMENT.MODI_USERColumn]));
                }
                set {
                    this[this.tableCREDIT_CARD_SETTLEMMENT.MODI_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODI_DTM {
                get {
                    return ((global::System.DateTime)(this[this.tableCREDIT_CARD_SETTLEMMENT.MODI_DTMColumn]));
                }
                set {
                    this[this.tableCREDIT_CARD_SETTLEMMENT.MODI_DTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COST_CENTER_NO {
                get {
                    try {
                        return ((string)(this[this.tableCREDIT_CARD_SETTLEMMENT.COST_CENTER_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'CREDIT_CARD_SETTLEMMENT\' 中資料行 \'COST_CENTER_NO\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCREDIT_CARD_SETTLEMMENT.COST_CENTER_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINSTELLMENT_IDNull() {
                return this.IsNull(this.tableCREDIT_CARD_SETTLEMMENT.INSTELLMENT_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINSTELLMENT_IDNull() {
                this[this.tableCREDIT_CARD_SETTLEMMENT.INSTELLMENT_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOST_CENTER_NONull() {
                return this.IsNull(this.tableCREDIT_CARD_SETTLEMMENT.COST_CENTER_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOST_CENTER_NONull() {
                this[this.tableCREDIT_CARD_SETTLEMMENT.COST_CENTER_NOColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CREDIT_CART_INSTELLMENTRow : global::System.Data.DataRow {
            
            private CREDIT_CART_INSTELLMENTDataTable tableCREDIT_CART_INSTELLMENT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CREDIT_CART_INSTELLMENTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCREDIT_CART_INSTELLMENT = ((CREDIT_CART_INSTELLMENTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INSTELLMENT_ID {
                get {
                    return ((string)(this[this.tableCREDIT_CART_INSTELLMENT.INSTELLMENT_IDColumn]));
                }
                set {
                    this[this.tableCREDIT_CART_INSTELLMENT.INSTELLMENT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PAY_SEQMENT {
                get {
                    return ((decimal)(this[this.tableCREDIT_CART_INSTELLMENT.PAY_SEQMENTColumn]));
                }
                set {
                    this[this.tableCREDIT_CART_INSTELLMENT.PAY_SEQMENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SEQMENT_RATE {
                get {
                    return ((decimal)(this[this.tableCREDIT_CART_INSTELLMENT.SEQMENT_RATEColumn]));
                }
                set {
                    this[this.tableCREDIT_CART_INSTELLMENT.SEQMENT_RATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime S_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableCREDIT_CART_INSTELLMENT.S_DATEColumn]));
                }
                set {
                    this[this.tableCREDIT_CART_INSTELLMENT.S_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime E_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCREDIT_CART_INSTELLMENT.E_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'CREDIT_CART_INSTELLMENT\' 中資料行 \'E_DATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCREDIT_CART_INSTELLMENT.E_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CREATE_USER {
                get {
                    return ((string)(this[this.tableCREDIT_CART_INSTELLMENT.CREATE_USERColumn]));
                }
                set {
                    this[this.tableCREDIT_CART_INSTELLMENT.CREATE_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CREATE_DTM {
                get {
                    return ((global::System.DateTime)(this[this.tableCREDIT_CART_INSTELLMENT.CREATE_DTMColumn]));
                }
                set {
                    this[this.tableCREDIT_CART_INSTELLMENT.CREATE_DTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODI_USER {
                get {
                    return ((string)(this[this.tableCREDIT_CART_INSTELLMENT.MODI_USERColumn]));
                }
                set {
                    this[this.tableCREDIT_CART_INSTELLMENT.MODI_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODI_DTM {
                get {
                    return ((global::System.DateTime)(this[this.tableCREDIT_CART_INSTELLMENT.MODI_DTMColumn]));
                }
                set {
                    this[this.tableCREDIT_CART_INSTELLMENT.MODI_DTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BANK_ID {
                get {
                    try {
                        return ((string)(this[this.tableCREDIT_CART_INSTELLMENT.BANK_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'CREDIT_CART_INSTELLMENT\' 中資料行 \'BANK_ID\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCREDIT_CART_INSTELLMENT.BANK_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CREDIT_CARD_TYPE_ID {
                get {
                    try {
                        return ((string)(this[this.tableCREDIT_CART_INSTELLMENT.CREDIT_CARD_TYPE_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'CREDIT_CART_INSTELLMENT\' 中資料行 \'CREDIT_CARD_TYPE_ID\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCREDIT_CART_INSTELLMENT.CREDIT_CARD_TYPE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsE_DATENull() {
                return this.IsNull(this.tableCREDIT_CART_INSTELLMENT.E_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetE_DATENull() {
                this[this.tableCREDIT_CART_INSTELLMENT.E_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBANK_IDNull() {
                return this.IsNull(this.tableCREDIT_CART_INSTELLMENT.BANK_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBANK_IDNull() {
                this[this.tableCREDIT_CART_INSTELLMENT.BANK_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCREDIT_CARD_TYPE_IDNull() {
                return this.IsNull(this.tableCREDIT_CART_INSTELLMENT.CREDIT_CARD_TYPE_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCREDIT_CARD_TYPE_IDNull() {
                this[this.tableCREDIT_CART_INSTELLMENT.CREDIT_CARD_TYPE_IDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class BANKRowChangeEvent : global::System.EventArgs {
            
            private BANKRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BANKRowChangeEvent(BANKRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BANKRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class COST_CENTERRowChangeEvent : global::System.EventArgs {
            
            private COST_CENTERRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public COST_CENTERRowChangeEvent(COST_CENTERRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public COST_CENTERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CREDIT_CARD_SETTLEMMENTRowChangeEvent : global::System.EventArgs {
            
            private CREDIT_CARD_SETTLEMMENTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CREDIT_CARD_SETTLEMMENTRowChangeEvent(CREDIT_CARD_SETTLEMMENTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CREDIT_CARD_SETTLEMMENTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CREDIT_CART_INSTELLMENTRowChangeEvent : global::System.EventArgs {
            
            private CREDIT_CART_INSTELLMENTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CREDIT_CART_INSTELLMENTRowChangeEvent(CREDIT_CART_INSTELLMENTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CREDIT_CART_INSTELLMENTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591