//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:2.0.50727.3082
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace FET.POS.Model.DTO.ConvertApp {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("cPOSATR_DataSet_DTO")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class cPOSATR_DataSet_DTO : global::System.Data.DataSet {
        
        private ERP_DS_ATRDataTable tableERP_DS_ATR;
        
        private POS_ATRDataTable tablePOS_ATR;
        
        private ERP_ATRDataTable tableERP_ATR;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public cPOSATR_DataSet_DTO() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected cPOSATR_DataSet_DTO(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ERP_DS_ATR"] != null)) {
                    base.Tables.Add(new ERP_DS_ATRDataTable(ds.Tables["ERP_DS_ATR"]));
                }
                if ((ds.Tables["POS_ATR"] != null)) {
                    base.Tables.Add(new POS_ATRDataTable(ds.Tables["POS_ATR"]));
                }
                if ((ds.Tables["ERP_ATR"] != null)) {
                    base.Tables.Add(new ERP_ATRDataTable(ds.Tables["ERP_ATR"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ERP_DS_ATRDataTable ERP_DS_ATR {
            get {
                return this.tableERP_DS_ATR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public POS_ATRDataTable POS_ATR {
            get {
                return this.tablePOS_ATR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ERP_ATRDataTable ERP_ATR {
            get {
                return this.tableERP_ATR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            cPOSATR_DataSet_DTO cln = ((cPOSATR_DataSet_DTO)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ERP_DS_ATR"] != null)) {
                    base.Tables.Add(new ERP_DS_ATRDataTable(ds.Tables["ERP_DS_ATR"]));
                }
                if ((ds.Tables["POS_ATR"] != null)) {
                    base.Tables.Add(new POS_ATRDataTable(ds.Tables["POS_ATR"]));
                }
                if ((ds.Tables["ERP_ATR"] != null)) {
                    base.Tables.Add(new ERP_ATRDataTable(ds.Tables["ERP_ATR"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableERP_DS_ATR = ((ERP_DS_ATRDataTable)(base.Tables["ERP_DS_ATR"]));
            if ((initTable == true)) {
                if ((this.tableERP_DS_ATR != null)) {
                    this.tableERP_DS_ATR.InitVars();
                }
            }
            this.tablePOS_ATR = ((POS_ATRDataTable)(base.Tables["POS_ATR"]));
            if ((initTable == true)) {
                if ((this.tablePOS_ATR != null)) {
                    this.tablePOS_ATR.InitVars();
                }
            }
            this.tableERP_ATR = ((ERP_ATRDataTable)(base.Tables["ERP_ATR"]));
            if ((initTable == true)) {
                if ((this.tableERP_ATR != null)) {
                    this.tableERP_ATR.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "cPOSATR_DataSet_DTO";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/cPOSATR_DataSet_DTO.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableERP_DS_ATR = new ERP_DS_ATRDataTable();
            base.Tables.Add(this.tableERP_DS_ATR);
            this.tablePOS_ATR = new POS_ATRDataTable();
            base.Tables.Add(this.tablePOS_ATR);
            this.tableERP_ATR = new ERP_ATRDataTable();
            base.Tables.Add(this.tableERP_ATR);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeERP_DS_ATR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePOS_ATR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeERP_ATR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            cPOSATR_DataSet_DTO ds = new cPOSATR_DataSet_DTO();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void ERP_DS_ATRRowChangeEventHandler(object sender, ERP_DS_ATRRowChangeEvent e);
        
        public delegate void POS_ATRRowChangeEventHandler(object sender, POS_ATRRowChangeEvent e);
        
        public delegate void ERP_ATRRowChangeEventHandler(object sender, ERP_ATRRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ERP_DS_ATRDataTable : global::System.Data.TypedTableBase<ERP_DS_ATRRow> {
            
            private global::System.Data.DataColumn columnBRANCHNO;
            
            private global::System.Data.DataColumn columnPRODNO;
            
            private global::System.Data.DataColumn columnDWNDATE;
            
            private global::System.Data.DataColumn columnATRQTY;
            
            private global::System.Data.DataColumn columnPRICE;
            
            private global::System.Data.DataColumn columnVENDORNAME;
            
            private global::System.Data.DataColumn columnDWNFLAG;
            
            private global::System.Data.DataColumn columnTRANSDATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ERP_DS_ATRDataTable() {
                this.TableName = "ERP_DS_ATR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ERP_DS_ATRDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ERP_DS_ATRDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BRANCHNOColumn {
                get {
                    return this.columnBRANCHNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODNOColumn {
                get {
                    return this.columnPRODNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DWNDATEColumn {
                get {
                    return this.columnDWNDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATRQTYColumn {
                get {
                    return this.columnATRQTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRICEColumn {
                get {
                    return this.columnPRICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VENDORNAMEColumn {
                get {
                    return this.columnVENDORNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DWNFLAGColumn {
                get {
                    return this.columnDWNFLAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRANSDATEColumn {
                get {
                    return this.columnTRANSDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ERP_DS_ATRRow this[int index] {
                get {
                    return ((ERP_DS_ATRRow)(this.Rows[index]));
                }
            }
            
            public event ERP_DS_ATRRowChangeEventHandler ERP_DS_ATRRowChanging;
            
            public event ERP_DS_ATRRowChangeEventHandler ERP_DS_ATRRowChanged;
            
            public event ERP_DS_ATRRowChangeEventHandler ERP_DS_ATRRowDeleting;
            
            public event ERP_DS_ATRRowChangeEventHandler ERP_DS_ATRRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddERP_DS_ATRRow(ERP_DS_ATRRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ERP_DS_ATRRow AddERP_DS_ATRRow(string BRANCHNO, string PRODNO, System.DateTime DWNDATE, decimal ATRQTY, decimal PRICE, string VENDORNAME, string DWNFLAG, string TRANSDATE) {
                ERP_DS_ATRRow rowERP_DS_ATRRow = ((ERP_DS_ATRRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BRANCHNO,
                        PRODNO,
                        DWNDATE,
                        ATRQTY,
                        PRICE,
                        VENDORNAME,
                        DWNFLAG,
                        TRANSDATE};
                rowERP_DS_ATRRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowERP_DS_ATRRow);
                return rowERP_DS_ATRRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ERP_DS_ATRDataTable cln = ((ERP_DS_ATRDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ERP_DS_ATRDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBRANCHNO = base.Columns["BRANCHNO"];
                this.columnPRODNO = base.Columns["PRODNO"];
                this.columnDWNDATE = base.Columns["DWNDATE"];
                this.columnATRQTY = base.Columns["ATRQTY"];
                this.columnPRICE = base.Columns["PRICE"];
                this.columnVENDORNAME = base.Columns["VENDORNAME"];
                this.columnDWNFLAG = base.Columns["DWNFLAG"];
                this.columnTRANSDATE = base.Columns["TRANSDATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBRANCHNO = new global::System.Data.DataColumn("BRANCHNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBRANCHNO);
                this.columnPRODNO = new global::System.Data.DataColumn("PRODNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODNO);
                this.columnDWNDATE = new global::System.Data.DataColumn("DWNDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDWNDATE);
                this.columnATRQTY = new global::System.Data.DataColumn("ATRQTY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATRQTY);
                this.columnPRICE = new global::System.Data.DataColumn("PRICE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRICE);
                this.columnVENDORNAME = new global::System.Data.DataColumn("VENDORNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVENDORNAME);
                this.columnDWNFLAG = new global::System.Data.DataColumn("DWNFLAG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDWNFLAG);
                this.columnTRANSDATE = new global::System.Data.DataColumn("TRANSDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANSDATE);
                this.columnBRANCHNO.MaxLength = 30;
                this.columnPRODNO.MaxLength = 20;
                this.columnVENDORNAME.MaxLength = 50;
                this.columnDWNFLAG.MaxLength = 1;
                this.columnTRANSDATE.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ERP_DS_ATRRow NewERP_DS_ATRRow() {
                return ((ERP_DS_ATRRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ERP_DS_ATRRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ERP_DS_ATRRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ERP_DS_ATRRowChanged != null)) {
                    this.ERP_DS_ATRRowChanged(this, new ERP_DS_ATRRowChangeEvent(((ERP_DS_ATRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ERP_DS_ATRRowChanging != null)) {
                    this.ERP_DS_ATRRowChanging(this, new ERP_DS_ATRRowChangeEvent(((ERP_DS_ATRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ERP_DS_ATRRowDeleted != null)) {
                    this.ERP_DS_ATRRowDeleted(this, new ERP_DS_ATRRowChangeEvent(((ERP_DS_ATRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ERP_DS_ATRRowDeleting != null)) {
                    this.ERP_DS_ATRRowDeleting(this, new ERP_DS_ATRRowChangeEvent(((ERP_DS_ATRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveERP_DS_ATRRow(ERP_DS_ATRRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                cPOSATR_DataSet_DTO ds = new cPOSATR_DataSet_DTO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ERP_DS_ATRDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class POS_ATRDataTable : global::System.Data.TypedTableBase<POS_ATRRow> {
            
            private global::System.Data.DataColumn columnTYPE;
            
            private global::System.Data.DataColumn columnATRQTY;
            
            private global::System.Data.DataColumn columnMIX_ORDER_QTY;
            
            private global::System.Data.DataColumn columnREMAINED_ATR;
            
            private global::System.Data.DataColumn columnCREATE_USER;
            
            private global::System.Data.DataColumn columnCREATE_DTM;
            
            private global::System.Data.DataColumn columnMODI_USER;
            
            private global::System.Data.DataColumn columnMODI_DTM;
            
            private global::System.Data.DataColumn columnLOC_ID;
            
            private global::System.Data.DataColumn columnPRODNO;
            
            private global::System.Data.DataColumn columnDWNDATE;
            
            private global::System.Data.DataColumn columnPRICE;
            
            private global::System.Data.DataColumn columnVENDOR_NAME;
            
            private global::System.Data.DataColumn columnTRANS_DATE;
            
            private global::System.Data.DataColumn columnDS_FLAG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POS_ATRDataTable() {
                this.TableName = "POS_ATR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal POS_ATRDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected POS_ATRDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TYPEColumn {
                get {
                    return this.columnTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATRQTYColumn {
                get {
                    return this.columnATRQTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MIX_ORDER_QTYColumn {
                get {
                    return this.columnMIX_ORDER_QTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REMAINED_ATRColumn {
                get {
                    return this.columnREMAINED_ATR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_USERColumn {
                get {
                    return this.columnCREATE_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_DTMColumn {
                get {
                    return this.columnCREATE_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODI_USERColumn {
                get {
                    return this.columnMODI_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODI_DTMColumn {
                get {
                    return this.columnMODI_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LOC_IDColumn {
                get {
                    return this.columnLOC_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODNOColumn {
                get {
                    return this.columnPRODNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DWNDATEColumn {
                get {
                    return this.columnDWNDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRICEColumn {
                get {
                    return this.columnPRICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VENDOR_NAMEColumn {
                get {
                    return this.columnVENDOR_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRANS_DATEColumn {
                get {
                    return this.columnTRANS_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DS_FLAGColumn {
                get {
                    return this.columnDS_FLAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POS_ATRRow this[int index] {
                get {
                    return ((POS_ATRRow)(this.Rows[index]));
                }
            }
            
            public event POS_ATRRowChangeEventHandler POS_ATRRowChanging;
            
            public event POS_ATRRowChangeEventHandler POS_ATRRowChanged;
            
            public event POS_ATRRowChangeEventHandler POS_ATRRowDeleting;
            
            public event POS_ATRRowChangeEventHandler POS_ATRRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPOS_ATRRow(POS_ATRRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POS_ATRRow AddPOS_ATRRow(string TYPE, decimal ATRQTY, decimal MIX_ORDER_QTY, decimal REMAINED_ATR, string CREATE_USER, System.DateTime CREATE_DTM, string MODI_USER, System.DateTime MODI_DTM, string LOC_ID, string PRODNO, System.DateTime DWNDATE, decimal PRICE, string VENDOR_NAME, System.DateTime TRANS_DATE, string DS_FLAG) {
                POS_ATRRow rowPOS_ATRRow = ((POS_ATRRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TYPE,
                        ATRQTY,
                        MIX_ORDER_QTY,
                        REMAINED_ATR,
                        CREATE_USER,
                        CREATE_DTM,
                        MODI_USER,
                        MODI_DTM,
                        LOC_ID,
                        PRODNO,
                        DWNDATE,
                        PRICE,
                        VENDOR_NAME,
                        TRANS_DATE,
                        DS_FLAG};
                rowPOS_ATRRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPOS_ATRRow);
                return rowPOS_ATRRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POS_ATRRow FindByLOC_IDPRODNODWNDATE(string LOC_ID, string PRODNO, System.DateTime DWNDATE) {
                return ((POS_ATRRow)(this.Rows.Find(new object[] {
                            LOC_ID,
                            PRODNO,
                            DWNDATE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                POS_ATRDataTable cln = ((POS_ATRDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new POS_ATRDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTYPE = base.Columns["TYPE"];
                this.columnATRQTY = base.Columns["ATRQTY"];
                this.columnMIX_ORDER_QTY = base.Columns["MIX_ORDER_QTY"];
                this.columnREMAINED_ATR = base.Columns["REMAINED_ATR"];
                this.columnCREATE_USER = base.Columns["CREATE_USER"];
                this.columnCREATE_DTM = base.Columns["CREATE_DTM"];
                this.columnMODI_USER = base.Columns["MODI_USER"];
                this.columnMODI_DTM = base.Columns["MODI_DTM"];
                this.columnLOC_ID = base.Columns["LOC_ID"];
                this.columnPRODNO = base.Columns["PRODNO"];
                this.columnDWNDATE = base.Columns["DWNDATE"];
                this.columnPRICE = base.Columns["PRICE"];
                this.columnVENDOR_NAME = base.Columns["VENDOR_NAME"];
                this.columnTRANS_DATE = base.Columns["TRANS_DATE"];
                this.columnDS_FLAG = base.Columns["DS_FLAG"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTYPE = new global::System.Data.DataColumn("TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTYPE);
                this.columnATRQTY = new global::System.Data.DataColumn("ATRQTY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATRQTY);
                this.columnMIX_ORDER_QTY = new global::System.Data.DataColumn("MIX_ORDER_QTY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIX_ORDER_QTY);
                this.columnREMAINED_ATR = new global::System.Data.DataColumn("REMAINED_ATR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREMAINED_ATR);
                this.columnCREATE_USER = new global::System.Data.DataColumn("CREATE_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_USER);
                this.columnCREATE_DTM = new global::System.Data.DataColumn("CREATE_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_DTM);
                this.columnMODI_USER = new global::System.Data.DataColumn("MODI_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODI_USER);
                this.columnMODI_DTM = new global::System.Data.DataColumn("MODI_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODI_DTM);
                this.columnLOC_ID = new global::System.Data.DataColumn("LOC_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOC_ID);
                this.columnPRODNO = new global::System.Data.DataColumn("PRODNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODNO);
                this.columnDWNDATE = new global::System.Data.DataColumn("DWNDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDWNDATE);
                this.columnPRICE = new global::System.Data.DataColumn("PRICE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRICE);
                this.columnVENDOR_NAME = new global::System.Data.DataColumn("VENDOR_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVENDOR_NAME);
                this.columnTRANS_DATE = new global::System.Data.DataColumn("TRANS_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANS_DATE);
                this.columnDS_FLAG = new global::System.Data.DataColumn("DS_FLAG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDS_FLAG);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnLOC_ID,
                                this.columnPRODNO,
                                this.columnDWNDATE}, true));
                this.columnTYPE.MaxLength = 5;
                this.columnCREATE_USER.MaxLength = 50;
                this.columnMODI_USER.MaxLength = 50;
                this.columnLOC_ID.AllowDBNull = false;
                this.columnLOC_ID.MaxLength = 32;
                this.columnPRODNO.AllowDBNull = false;
                this.columnPRODNO.MaxLength = 20;
                this.columnDWNDATE.AllowDBNull = false;
                this.columnVENDOR_NAME.MaxLength = 50;
                this.columnDS_FLAG.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POS_ATRRow NewPOS_ATRRow() {
                return ((POS_ATRRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new POS_ATRRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(POS_ATRRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.POS_ATRRowChanged != null)) {
                    this.POS_ATRRowChanged(this, new POS_ATRRowChangeEvent(((POS_ATRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.POS_ATRRowChanging != null)) {
                    this.POS_ATRRowChanging(this, new POS_ATRRowChangeEvent(((POS_ATRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.POS_ATRRowDeleted != null)) {
                    this.POS_ATRRowDeleted(this, new POS_ATRRowChangeEvent(((POS_ATRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.POS_ATRRowDeleting != null)) {
                    this.POS_ATRRowDeleting(this, new POS_ATRRowChangeEvent(((POS_ATRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePOS_ATRRow(POS_ATRRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                cPOSATR_DataSet_DTO ds = new cPOSATR_DataSet_DTO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "POS_ATRDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ERP_ATRDataTable : global::System.Data.TypedTableBase<ERP_ATRRow> {
            
            private global::System.Data.DataColumn columnBRANCHNO;
            
            private global::System.Data.DataColumn columnITEMCODE;
            
            private global::System.Data.DataColumn columnLOADDATE;
            
            private global::System.Data.DataColumn columnCOMPANYCODE;
            
            private global::System.Data.DataColumn columnATRQTY;
            
            private global::System.Data.DataColumn columnDWNFLAG;
            
            private global::System.Data.DataColumn columnDWNDATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ERP_ATRDataTable() {
                this.TableName = "ERP_ATR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ERP_ATRDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ERP_ATRDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BRANCHNOColumn {
                get {
                    return this.columnBRANCHNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ITEMCODEColumn {
                get {
                    return this.columnITEMCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LOADDATEColumn {
                get {
                    return this.columnLOADDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANYCODEColumn {
                get {
                    return this.columnCOMPANYCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATRQTYColumn {
                get {
                    return this.columnATRQTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DWNFLAGColumn {
                get {
                    return this.columnDWNFLAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DWNDATEColumn {
                get {
                    return this.columnDWNDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ERP_ATRRow this[int index] {
                get {
                    return ((ERP_ATRRow)(this.Rows[index]));
                }
            }
            
            public event ERP_ATRRowChangeEventHandler ERP_ATRRowChanging;
            
            public event ERP_ATRRowChangeEventHandler ERP_ATRRowChanged;
            
            public event ERP_ATRRowChangeEventHandler ERP_ATRRowDeleting;
            
            public event ERP_ATRRowChangeEventHandler ERP_ATRRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddERP_ATRRow(ERP_ATRRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ERP_ATRRow AddERP_ATRRow(string BRANCHNO, string ITEMCODE, System.DateTime LOADDATE, string COMPANYCODE, decimal ATRQTY, string DWNFLAG, string DWNDATE) {
                ERP_ATRRow rowERP_ATRRow = ((ERP_ATRRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BRANCHNO,
                        ITEMCODE,
                        LOADDATE,
                        COMPANYCODE,
                        ATRQTY,
                        DWNFLAG,
                        DWNDATE};
                rowERP_ATRRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowERP_ATRRow);
                return rowERP_ATRRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ERP_ATRDataTable cln = ((ERP_ATRDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ERP_ATRDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBRANCHNO = base.Columns["BRANCHNO"];
                this.columnITEMCODE = base.Columns["ITEMCODE"];
                this.columnLOADDATE = base.Columns["LOADDATE"];
                this.columnCOMPANYCODE = base.Columns["COMPANYCODE"];
                this.columnATRQTY = base.Columns["ATRQTY"];
                this.columnDWNFLAG = base.Columns["DWNFLAG"];
                this.columnDWNDATE = base.Columns["DWNDATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBRANCHNO = new global::System.Data.DataColumn("BRANCHNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBRANCHNO);
                this.columnITEMCODE = new global::System.Data.DataColumn("ITEMCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEMCODE);
                this.columnLOADDATE = new global::System.Data.DataColumn("LOADDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOADDATE);
                this.columnCOMPANYCODE = new global::System.Data.DataColumn("COMPANYCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANYCODE);
                this.columnATRQTY = new global::System.Data.DataColumn("ATRQTY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATRQTY);
                this.columnDWNFLAG = new global::System.Data.DataColumn("DWNFLAG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDWNFLAG);
                this.columnDWNDATE = new global::System.Data.DataColumn("DWNDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDWNDATE);
                this.columnBRANCHNO.AllowDBNull = false;
                this.columnBRANCHNO.MaxLength = 10;
                this.columnITEMCODE.AllowDBNull = false;
                this.columnITEMCODE.MaxLength = 20;
                this.columnLOADDATE.AllowDBNull = false;
                this.columnCOMPANYCODE.AllowDBNull = false;
                this.columnCOMPANYCODE.MaxLength = 10;
                this.columnDWNFLAG.MaxLength = 1;
                this.columnDWNDATE.MaxLength = 8;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ERP_ATRRow NewERP_ATRRow() {
                return ((ERP_ATRRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ERP_ATRRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ERP_ATRRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ERP_ATRRowChanged != null)) {
                    this.ERP_ATRRowChanged(this, new ERP_ATRRowChangeEvent(((ERP_ATRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ERP_ATRRowChanging != null)) {
                    this.ERP_ATRRowChanging(this, new ERP_ATRRowChangeEvent(((ERP_ATRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ERP_ATRRowDeleted != null)) {
                    this.ERP_ATRRowDeleted(this, new ERP_ATRRowChangeEvent(((ERP_ATRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ERP_ATRRowDeleting != null)) {
                    this.ERP_ATRRowDeleting(this, new ERP_ATRRowChangeEvent(((ERP_ATRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveERP_ATRRow(ERP_ATRRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                cPOSATR_DataSet_DTO ds = new cPOSATR_DataSet_DTO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ERP_ATRDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ERP_DS_ATRRow : global::System.Data.DataRow {
            
            private ERP_DS_ATRDataTable tableERP_DS_ATR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ERP_DS_ATRRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableERP_DS_ATR = ((ERP_DS_ATRDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BRANCHNO {
                get {
                    try {
                        return ((string)(this[this.tableERP_DS_ATR.BRANCHNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ERP_DS_ATR\' 中資料行 \'BRANCHNO\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableERP_DS_ATR.BRANCHNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODNO {
                get {
                    try {
                        return ((string)(this[this.tableERP_DS_ATR.PRODNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ERP_DS_ATR\' 中資料行 \'PRODNO\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableERP_DS_ATR.PRODNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DWNDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableERP_DS_ATR.DWNDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ERP_DS_ATR\' 中資料行 \'DWNDATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableERP_DS_ATR.DWNDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ATRQTY {
                get {
                    try {
                        return ((decimal)(this[this.tableERP_DS_ATR.ATRQTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ERP_DS_ATR\' 中資料行 \'ATRQTY\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableERP_DS_ATR.ATRQTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PRICE {
                get {
                    try {
                        return ((decimal)(this[this.tableERP_DS_ATR.PRICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ERP_DS_ATR\' 中資料行 \'PRICE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableERP_DS_ATR.PRICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VENDORNAME {
                get {
                    try {
                        return ((string)(this[this.tableERP_DS_ATR.VENDORNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ERP_DS_ATR\' 中資料行 \'VENDORNAME\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableERP_DS_ATR.VENDORNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DWNFLAG {
                get {
                    try {
                        return ((string)(this[this.tableERP_DS_ATR.DWNFLAGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ERP_DS_ATR\' 中資料行 \'DWNFLAG\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableERP_DS_ATR.DWNFLAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TRANSDATE {
                get {
                    try {
                        return ((string)(this[this.tableERP_DS_ATR.TRANSDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ERP_DS_ATR\' 中資料行 \'TRANSDATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableERP_DS_ATR.TRANSDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBRANCHNONull() {
                return this.IsNull(this.tableERP_DS_ATR.BRANCHNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBRANCHNONull() {
                this[this.tableERP_DS_ATR.BRANCHNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRODNONull() {
                return this.IsNull(this.tableERP_DS_ATR.PRODNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRODNONull() {
                this[this.tableERP_DS_ATR.PRODNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDWNDATENull() {
                return this.IsNull(this.tableERP_DS_ATR.DWNDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDWNDATENull() {
                this[this.tableERP_DS_ATR.DWNDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATRQTYNull() {
                return this.IsNull(this.tableERP_DS_ATR.ATRQTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATRQTYNull() {
                this[this.tableERP_DS_ATR.ATRQTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRICENull() {
                return this.IsNull(this.tableERP_DS_ATR.PRICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRICENull() {
                this[this.tableERP_DS_ATR.PRICEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVENDORNAMENull() {
                return this.IsNull(this.tableERP_DS_ATR.VENDORNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVENDORNAMENull() {
                this[this.tableERP_DS_ATR.VENDORNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDWNFLAGNull() {
                return this.IsNull(this.tableERP_DS_ATR.DWNFLAGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDWNFLAGNull() {
                this[this.tableERP_DS_ATR.DWNFLAGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRANSDATENull() {
                return this.IsNull(this.tableERP_DS_ATR.TRANSDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRANSDATENull() {
                this[this.tableERP_DS_ATR.TRANSDATEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class POS_ATRRow : global::System.Data.DataRow {
            
            private POS_ATRDataTable tablePOS_ATR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal POS_ATRRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePOS_ATR = ((POS_ATRDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TYPE {
                get {
                    try {
                        return ((string)(this[this.tablePOS_ATR.TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'POS_ATR\' 中資料行 \'TYPE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePOS_ATR.TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ATRQTY {
                get {
                    try {
                        return ((decimal)(this[this.tablePOS_ATR.ATRQTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'POS_ATR\' 中資料行 \'ATRQTY\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePOS_ATR.ATRQTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MIX_ORDER_QTY {
                get {
                    try {
                        return ((decimal)(this[this.tablePOS_ATR.MIX_ORDER_QTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'POS_ATR\' 中資料行 \'MIX_ORDER_QTY\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePOS_ATR.MIX_ORDER_QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal REMAINED_ATR {
                get {
                    try {
                        return ((decimal)(this[this.tablePOS_ATR.REMAINED_ATRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'POS_ATR\' 中資料行 \'REMAINED_ATR\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePOS_ATR.REMAINED_ATRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CREATE_USER {
                get {
                    try {
                        return ((string)(this[this.tablePOS_ATR.CREATE_USERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'POS_ATR\' 中資料行 \'CREATE_USER\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePOS_ATR.CREATE_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CREATE_DTM {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePOS_ATR.CREATE_DTMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'POS_ATR\' 中資料行 \'CREATE_DTM\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePOS_ATR.CREATE_DTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODI_USER {
                get {
                    try {
                        return ((string)(this[this.tablePOS_ATR.MODI_USERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'POS_ATR\' 中資料行 \'MODI_USER\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePOS_ATR.MODI_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODI_DTM {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePOS_ATR.MODI_DTMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'POS_ATR\' 中資料行 \'MODI_DTM\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePOS_ATR.MODI_DTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOC_ID {
                get {
                    return ((string)(this[this.tablePOS_ATR.LOC_IDColumn]));
                }
                set {
                    this[this.tablePOS_ATR.LOC_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODNO {
                get {
                    return ((string)(this[this.tablePOS_ATR.PRODNOColumn]));
                }
                set {
                    this[this.tablePOS_ATR.PRODNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DWNDATE {
                get {
                    return ((global::System.DateTime)(this[this.tablePOS_ATR.DWNDATEColumn]));
                }
                set {
                    this[this.tablePOS_ATR.DWNDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PRICE {
                get {
                    try {
                        return ((decimal)(this[this.tablePOS_ATR.PRICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'POS_ATR\' 中資料行 \'PRICE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePOS_ATR.PRICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VENDOR_NAME {
                get {
                    try {
                        return ((string)(this[this.tablePOS_ATR.VENDOR_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'POS_ATR\' 中資料行 \'VENDOR_NAME\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePOS_ATR.VENDOR_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TRANS_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePOS_ATR.TRANS_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'POS_ATR\' 中資料行 \'TRANS_DATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePOS_ATR.TRANS_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DS_FLAG {
                get {
                    try {
                        return ((string)(this[this.tablePOS_ATR.DS_FLAGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'POS_ATR\' 中資料行 \'DS_FLAG\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePOS_ATR.DS_FLAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTYPENull() {
                return this.IsNull(this.tablePOS_ATR.TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTYPENull() {
                this[this.tablePOS_ATR.TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATRQTYNull() {
                return this.IsNull(this.tablePOS_ATR.ATRQTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATRQTYNull() {
                this[this.tablePOS_ATR.ATRQTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMIX_ORDER_QTYNull() {
                return this.IsNull(this.tablePOS_ATR.MIX_ORDER_QTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMIX_ORDER_QTYNull() {
                this[this.tablePOS_ATR.MIX_ORDER_QTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREMAINED_ATRNull() {
                return this.IsNull(this.tablePOS_ATR.REMAINED_ATRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREMAINED_ATRNull() {
                this[this.tablePOS_ATR.REMAINED_ATRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCREATE_USERNull() {
                return this.IsNull(this.tablePOS_ATR.CREATE_USERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCREATE_USERNull() {
                this[this.tablePOS_ATR.CREATE_USERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCREATE_DTMNull() {
                return this.IsNull(this.tablePOS_ATR.CREATE_DTMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCREATE_DTMNull() {
                this[this.tablePOS_ATR.CREATE_DTMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODI_USERNull() {
                return this.IsNull(this.tablePOS_ATR.MODI_USERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODI_USERNull() {
                this[this.tablePOS_ATR.MODI_USERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODI_DTMNull() {
                return this.IsNull(this.tablePOS_ATR.MODI_DTMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODI_DTMNull() {
                this[this.tablePOS_ATR.MODI_DTMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRICENull() {
                return this.IsNull(this.tablePOS_ATR.PRICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRICENull() {
                this[this.tablePOS_ATR.PRICEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVENDOR_NAMENull() {
                return this.IsNull(this.tablePOS_ATR.VENDOR_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVENDOR_NAMENull() {
                this[this.tablePOS_ATR.VENDOR_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRANS_DATENull() {
                return this.IsNull(this.tablePOS_ATR.TRANS_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRANS_DATENull() {
                this[this.tablePOS_ATR.TRANS_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDS_FLAGNull() {
                return this.IsNull(this.tablePOS_ATR.DS_FLAGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDS_FLAGNull() {
                this[this.tablePOS_ATR.DS_FLAGColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ERP_ATRRow : global::System.Data.DataRow {
            
            private ERP_ATRDataTable tableERP_ATR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ERP_ATRRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableERP_ATR = ((ERP_ATRDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BRANCHNO {
                get {
                    return ((string)(this[this.tableERP_ATR.BRANCHNOColumn]));
                }
                set {
                    this[this.tableERP_ATR.BRANCHNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ITEMCODE {
                get {
                    return ((string)(this[this.tableERP_ATR.ITEMCODEColumn]));
                }
                set {
                    this[this.tableERP_ATR.ITEMCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LOADDATE {
                get {
                    return ((global::System.DateTime)(this[this.tableERP_ATR.LOADDATEColumn]));
                }
                set {
                    this[this.tableERP_ATR.LOADDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMPANYCODE {
                get {
                    return ((string)(this[this.tableERP_ATR.COMPANYCODEColumn]));
                }
                set {
                    this[this.tableERP_ATR.COMPANYCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ATRQTY {
                get {
                    try {
                        return ((decimal)(this[this.tableERP_ATR.ATRQTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ERP_ATR\' 中資料行 \'ATRQTY\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableERP_ATR.ATRQTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DWNFLAG {
                get {
                    try {
                        return ((string)(this[this.tableERP_ATR.DWNFLAGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ERP_ATR\' 中資料行 \'DWNFLAG\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableERP_ATR.DWNFLAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DWNDATE {
                get {
                    try {
                        return ((string)(this[this.tableERP_ATR.DWNDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ERP_ATR\' 中資料行 \'DWNDATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableERP_ATR.DWNDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATRQTYNull() {
                return this.IsNull(this.tableERP_ATR.ATRQTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATRQTYNull() {
                this[this.tableERP_ATR.ATRQTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDWNFLAGNull() {
                return this.IsNull(this.tableERP_ATR.DWNFLAGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDWNFLAGNull() {
                this[this.tableERP_ATR.DWNFLAGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDWNDATENull() {
                return this.IsNull(this.tableERP_ATR.DWNDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDWNDATENull() {
                this[this.tableERP_ATR.DWNDATEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ERP_DS_ATRRowChangeEvent : global::System.EventArgs {
            
            private ERP_DS_ATRRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ERP_DS_ATRRowChangeEvent(ERP_DS_ATRRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ERP_DS_ATRRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class POS_ATRRowChangeEvent : global::System.EventArgs {
            
            private POS_ATRRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POS_ATRRowChangeEvent(POS_ATRRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POS_ATRRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ERP_ATRRowChangeEvent : global::System.EventArgs {
            
            private ERP_ATRRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ERP_ATRRowChangeEvent(ERP_ATRRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ERP_ATRRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591