//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:2.0.50727.4206
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace FET.POS.Model.DTO.ConvertApp {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("SCH08_Product_Type_DTO")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class SCH08_Product_Type_DTO : global::System.Data.DataSet {
        
        private PRODTYPEDataTable tablePRODTYPE;
        
        private PRODTYPE_TEMPDataTable tablePRODTYPE_TEMP;
        
        private SO_UPDATE_LOGDataTable tableSO_UPDATE_LOG;
        
        private SO_UPDATE_LOG_OLDDataTable tableSO_UPDATE_LOG_OLD;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SCH08_Product_Type_DTO() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected SCH08_Product_Type_DTO(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["PRODTYPE"] != null)) {
                    base.Tables.Add(new PRODTYPEDataTable(ds.Tables["PRODTYPE"]));
                }
                if ((ds.Tables["PRODTYPE_TEMP"] != null)) {
                    base.Tables.Add(new PRODTYPE_TEMPDataTable(ds.Tables["PRODTYPE_TEMP"]));
                }
                if ((ds.Tables["SO_UPDATE_LOG"] != null)) {
                    base.Tables.Add(new SO_UPDATE_LOGDataTable(ds.Tables["SO_UPDATE_LOG"]));
                }
                if ((ds.Tables["SO_UPDATE_LOG_OLD"] != null)) {
                    base.Tables.Add(new SO_UPDATE_LOG_OLDDataTable(ds.Tables["SO_UPDATE_LOG_OLD"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PRODTYPEDataTable PRODTYPE {
            get {
                return this.tablePRODTYPE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PRODTYPE_TEMPDataTable PRODTYPE_TEMP {
            get {
                return this.tablePRODTYPE_TEMP;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SO_UPDATE_LOGDataTable SO_UPDATE_LOG {
            get {
                return this.tableSO_UPDATE_LOG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SO_UPDATE_LOG_OLDDataTable SO_UPDATE_LOG_OLD {
            get {
                return this.tableSO_UPDATE_LOG_OLD;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            SCH08_Product_Type_DTO cln = ((SCH08_Product_Type_DTO)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["PRODTYPE"] != null)) {
                    base.Tables.Add(new PRODTYPEDataTable(ds.Tables["PRODTYPE"]));
                }
                if ((ds.Tables["PRODTYPE_TEMP"] != null)) {
                    base.Tables.Add(new PRODTYPE_TEMPDataTable(ds.Tables["PRODTYPE_TEMP"]));
                }
                if ((ds.Tables["SO_UPDATE_LOG"] != null)) {
                    base.Tables.Add(new SO_UPDATE_LOGDataTable(ds.Tables["SO_UPDATE_LOG"]));
                }
                if ((ds.Tables["SO_UPDATE_LOG_OLD"] != null)) {
                    base.Tables.Add(new SO_UPDATE_LOG_OLDDataTable(ds.Tables["SO_UPDATE_LOG_OLD"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablePRODTYPE = ((PRODTYPEDataTable)(base.Tables["PRODTYPE"]));
            if ((initTable == true)) {
                if ((this.tablePRODTYPE != null)) {
                    this.tablePRODTYPE.InitVars();
                }
            }
            this.tablePRODTYPE_TEMP = ((PRODTYPE_TEMPDataTable)(base.Tables["PRODTYPE_TEMP"]));
            if ((initTable == true)) {
                if ((this.tablePRODTYPE_TEMP != null)) {
                    this.tablePRODTYPE_TEMP.InitVars();
                }
            }
            this.tableSO_UPDATE_LOG = ((SO_UPDATE_LOGDataTable)(base.Tables["SO_UPDATE_LOG"]));
            if ((initTable == true)) {
                if ((this.tableSO_UPDATE_LOG != null)) {
                    this.tableSO_UPDATE_LOG.InitVars();
                }
            }
            this.tableSO_UPDATE_LOG_OLD = ((SO_UPDATE_LOG_OLDDataTable)(base.Tables["SO_UPDATE_LOG_OLD"]));
            if ((initTable == true)) {
                if ((this.tableSO_UPDATE_LOG_OLD != null)) {
                    this.tableSO_UPDATE_LOG_OLD.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "SCH08_Product_Type_DTO";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/SCH08_Product_Type_DTO.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablePRODTYPE = new PRODTYPEDataTable();
            base.Tables.Add(this.tablePRODTYPE);
            this.tablePRODTYPE_TEMP = new PRODTYPE_TEMPDataTable();
            base.Tables.Add(this.tablePRODTYPE_TEMP);
            this.tableSO_UPDATE_LOG = new SO_UPDATE_LOGDataTable();
            base.Tables.Add(this.tableSO_UPDATE_LOG);
            this.tableSO_UPDATE_LOG_OLD = new SO_UPDATE_LOG_OLDDataTable();
            base.Tables.Add(this.tableSO_UPDATE_LOG_OLD);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePRODTYPE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePRODTYPE_TEMP() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSO_UPDATE_LOG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSO_UPDATE_LOG_OLD() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            SCH08_Product_Type_DTO ds = new SCH08_Product_Type_DTO();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void PRODTYPERowChangeEventHandler(object sender, PRODTYPERowChangeEvent e);
        
        public delegate void PRODTYPE_TEMPRowChangeEventHandler(object sender, PRODTYPE_TEMPRowChangeEvent e);
        
        public delegate void SO_UPDATE_LOGRowChangeEventHandler(object sender, SO_UPDATE_LOGRowChangeEvent e);
        
        public delegate void SO_UPDATE_LOG_OLDRowChangeEventHandler(object sender, SO_UPDATE_LOG_OLDRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PRODTYPEDataTable : global::System.Data.TypedTableBase<PRODTYPERow> {
            
            private global::System.Data.DataColumn columnPRODTYPENO;
            
            private global::System.Data.DataColumn columnCOMPANYCODE;
            
            private global::System.Data.DataColumn columnPRODTYPENAME;
            
            private global::System.Data.DataColumn columnUPDDATE;
            
            private global::System.Data.DataColumn columnUPDUSRNO;
            
            private global::System.Data.DataColumn columnULSNO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PRODTYPEDataTable() {
                this.TableName = "PRODTYPE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PRODTYPEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PRODTYPEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODTYPENOColumn {
                get {
                    return this.columnPRODTYPENO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANYCODEColumn {
                get {
                    return this.columnCOMPANYCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODTYPENAMEColumn {
                get {
                    return this.columnPRODTYPENAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UPDDATEColumn {
                get {
                    return this.columnUPDDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UPDUSRNOColumn {
                get {
                    return this.columnUPDUSRNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ULSNOColumn {
                get {
                    return this.columnULSNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PRODTYPERow this[int index] {
                get {
                    return ((PRODTYPERow)(this.Rows[index]));
                }
            }
            
            public event PRODTYPERowChangeEventHandler PRODTYPERowChanging;
            
            public event PRODTYPERowChangeEventHandler PRODTYPERowChanged;
            
            public event PRODTYPERowChangeEventHandler PRODTYPERowDeleting;
            
            public event PRODTYPERowChangeEventHandler PRODTYPERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPRODTYPERow(PRODTYPERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PRODTYPERow AddPRODTYPERow(string PRODTYPENO, string COMPANYCODE, string PRODTYPENAME, string UPDDATE, string UPDUSRNO, string ULSNO) {
                PRODTYPERow rowPRODTYPERow = ((PRODTYPERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PRODTYPENO,
                        COMPANYCODE,
                        PRODTYPENAME,
                        UPDDATE,
                        UPDUSRNO,
                        ULSNO};
                rowPRODTYPERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPRODTYPERow);
                return rowPRODTYPERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PRODTYPERow FindByPRODTYPENOCOMPANYCODE(string PRODTYPENO, string COMPANYCODE) {
                return ((PRODTYPERow)(this.Rows.Find(new object[] {
                            PRODTYPENO,
                            COMPANYCODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PRODTYPEDataTable cln = ((PRODTYPEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PRODTYPEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPRODTYPENO = base.Columns["PRODTYPENO"];
                this.columnCOMPANYCODE = base.Columns["COMPANYCODE"];
                this.columnPRODTYPENAME = base.Columns["PRODTYPENAME"];
                this.columnUPDDATE = base.Columns["UPDDATE"];
                this.columnUPDUSRNO = base.Columns["UPDUSRNO"];
                this.columnULSNO = base.Columns["ULSNO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPRODTYPENO = new global::System.Data.DataColumn("PRODTYPENO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODTYPENO);
                this.columnCOMPANYCODE = new global::System.Data.DataColumn("COMPANYCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANYCODE);
                this.columnPRODTYPENAME = new global::System.Data.DataColumn("PRODTYPENAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODTYPENAME);
                this.columnUPDDATE = new global::System.Data.DataColumn("UPDDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPDDATE);
                this.columnUPDUSRNO = new global::System.Data.DataColumn("UPDUSRNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPDUSRNO);
                this.columnULSNO = new global::System.Data.DataColumn("ULSNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnULSNO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPRODTYPENO,
                                this.columnCOMPANYCODE}, true));
                this.columnPRODTYPENO.AllowDBNull = false;
                this.columnPRODTYPENO.MaxLength = 8;
                this.columnCOMPANYCODE.AllowDBNull = false;
                this.columnCOMPANYCODE.MaxLength = 10;
                this.columnPRODTYPENAME.MaxLength = 50;
                this.columnUPDDATE.MaxLength = 8;
                this.columnUPDUSRNO.MaxLength = 10;
                this.columnULSNO.MaxLength = 13;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PRODTYPERow NewPRODTYPERow() {
                return ((PRODTYPERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PRODTYPERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PRODTYPERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PRODTYPERowChanged != null)) {
                    this.PRODTYPERowChanged(this, new PRODTYPERowChangeEvent(((PRODTYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PRODTYPERowChanging != null)) {
                    this.PRODTYPERowChanging(this, new PRODTYPERowChangeEvent(((PRODTYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PRODTYPERowDeleted != null)) {
                    this.PRODTYPERowDeleted(this, new PRODTYPERowChangeEvent(((PRODTYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PRODTYPERowDeleting != null)) {
                    this.PRODTYPERowDeleting(this, new PRODTYPERowChangeEvent(((PRODTYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePRODTYPERow(PRODTYPERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SCH08_Product_Type_DTO ds = new SCH08_Product_Type_DTO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PRODTYPEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PRODTYPE_TEMPDataTable : global::System.Data.TypedTableBase<PRODTYPE_TEMPRow> {
            
            private global::System.Data.DataColumn columnPRODTYPENO;
            
            private global::System.Data.DataColumn columnCOMPANYCODE;
            
            private global::System.Data.DataColumn columnPRODTYPENAME;
            
            private global::System.Data.DataColumn columnUPDDATE;
            
            private global::System.Data.DataColumn columnUPDUSRNO;
            
            private global::System.Data.DataColumn columnULSNO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PRODTYPE_TEMPDataTable() {
                this.TableName = "PRODTYPE_TEMP";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PRODTYPE_TEMPDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PRODTYPE_TEMPDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODTYPENOColumn {
                get {
                    return this.columnPRODTYPENO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANYCODEColumn {
                get {
                    return this.columnCOMPANYCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODTYPENAMEColumn {
                get {
                    return this.columnPRODTYPENAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UPDDATEColumn {
                get {
                    return this.columnUPDDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UPDUSRNOColumn {
                get {
                    return this.columnUPDUSRNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ULSNOColumn {
                get {
                    return this.columnULSNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PRODTYPE_TEMPRow this[int index] {
                get {
                    return ((PRODTYPE_TEMPRow)(this.Rows[index]));
                }
            }
            
            public event PRODTYPE_TEMPRowChangeEventHandler PRODTYPE_TEMPRowChanging;
            
            public event PRODTYPE_TEMPRowChangeEventHandler PRODTYPE_TEMPRowChanged;
            
            public event PRODTYPE_TEMPRowChangeEventHandler PRODTYPE_TEMPRowDeleting;
            
            public event PRODTYPE_TEMPRowChangeEventHandler PRODTYPE_TEMPRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPRODTYPE_TEMPRow(PRODTYPE_TEMPRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PRODTYPE_TEMPRow AddPRODTYPE_TEMPRow(string PRODTYPENO, string COMPANYCODE, string PRODTYPENAME, string UPDDATE, string UPDUSRNO, string ULSNO) {
                PRODTYPE_TEMPRow rowPRODTYPE_TEMPRow = ((PRODTYPE_TEMPRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PRODTYPENO,
                        COMPANYCODE,
                        PRODTYPENAME,
                        UPDDATE,
                        UPDUSRNO,
                        ULSNO};
                rowPRODTYPE_TEMPRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPRODTYPE_TEMPRow);
                return rowPRODTYPE_TEMPRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PRODTYPE_TEMPDataTable cln = ((PRODTYPE_TEMPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PRODTYPE_TEMPDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPRODTYPENO = base.Columns["PRODTYPENO"];
                this.columnCOMPANYCODE = base.Columns["COMPANYCODE"];
                this.columnPRODTYPENAME = base.Columns["PRODTYPENAME"];
                this.columnUPDDATE = base.Columns["UPDDATE"];
                this.columnUPDUSRNO = base.Columns["UPDUSRNO"];
                this.columnULSNO = base.Columns["ULSNO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPRODTYPENO = new global::System.Data.DataColumn("PRODTYPENO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODTYPENO);
                this.columnCOMPANYCODE = new global::System.Data.DataColumn("COMPANYCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANYCODE);
                this.columnPRODTYPENAME = new global::System.Data.DataColumn("PRODTYPENAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODTYPENAME);
                this.columnUPDDATE = new global::System.Data.DataColumn("UPDDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPDDATE);
                this.columnUPDUSRNO = new global::System.Data.DataColumn("UPDUSRNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPDUSRNO);
                this.columnULSNO = new global::System.Data.DataColumn("ULSNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnULSNO);
                this.columnPRODTYPENO.AllowDBNull = false;
                this.columnPRODTYPENO.MaxLength = 8;
                this.columnCOMPANYCODE.AllowDBNull = false;
                this.columnCOMPANYCODE.MaxLength = 10;
                this.columnPRODTYPENAME.MaxLength = 50;
                this.columnUPDDATE.MaxLength = 8;
                this.columnUPDUSRNO.MaxLength = 10;
                this.columnULSNO.MaxLength = 13;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PRODTYPE_TEMPRow NewPRODTYPE_TEMPRow() {
                return ((PRODTYPE_TEMPRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PRODTYPE_TEMPRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PRODTYPE_TEMPRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PRODTYPE_TEMPRowChanged != null)) {
                    this.PRODTYPE_TEMPRowChanged(this, new PRODTYPE_TEMPRowChangeEvent(((PRODTYPE_TEMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PRODTYPE_TEMPRowChanging != null)) {
                    this.PRODTYPE_TEMPRowChanging(this, new PRODTYPE_TEMPRowChangeEvent(((PRODTYPE_TEMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PRODTYPE_TEMPRowDeleted != null)) {
                    this.PRODTYPE_TEMPRowDeleted(this, new PRODTYPE_TEMPRowChangeEvent(((PRODTYPE_TEMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PRODTYPE_TEMPRowDeleting != null)) {
                    this.PRODTYPE_TEMPRowDeleting(this, new PRODTYPE_TEMPRowChangeEvent(((PRODTYPE_TEMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePRODTYPE_TEMPRow(PRODTYPE_TEMPRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SCH08_Product_Type_DTO ds = new SCH08_Product_Type_DTO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PRODTYPE_TEMPDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SO_UPDATE_LOGDataTable : global::System.Data.TypedTableBase<SO_UPDATE_LOGRow> {
            
            private global::System.Data.DataColumn columnSONO;
            
            private global::System.Data.DataColumn columnSTATUS;
            
            private global::System.Data.DataColumn columnTRANS_DATE;
            
            private global::System.Data.DataColumn columnDWNFLAG;
            
            private global::System.Data.DataColumn columnDWNDATE;
            
            private global::System.Data.DataColumn columnSENDDATE;
            
            private global::System.Data.DataColumn columnSONOX;
            
            private global::System.Data.DataColumn columnSOID;
            
            private global::System.Data.DataColumn columnCREATE_USER;
            
            private global::System.Data.DataColumn columnCREATE_DTM;
            
            private global::System.Data.DataColumn columnMODI_USER;
            
            private global::System.Data.DataColumn columnMODI_DTM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SO_UPDATE_LOGDataTable() {
                this.TableName = "SO_UPDATE_LOG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SO_UPDATE_LOGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SO_UPDATE_LOGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SONOColumn {
                get {
                    return this.columnSONO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STATUSColumn {
                get {
                    return this.columnSTATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRANS_DATEColumn {
                get {
                    return this.columnTRANS_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DWNFLAGColumn {
                get {
                    return this.columnDWNFLAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DWNDATEColumn {
                get {
                    return this.columnDWNDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SENDDATEColumn {
                get {
                    return this.columnSENDDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SONOXColumn {
                get {
                    return this.columnSONOX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SOIDColumn {
                get {
                    return this.columnSOID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_USERColumn {
                get {
                    return this.columnCREATE_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_DTMColumn {
                get {
                    return this.columnCREATE_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODI_USERColumn {
                get {
                    return this.columnMODI_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODI_DTMColumn {
                get {
                    return this.columnMODI_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SO_UPDATE_LOGRow this[int index] {
                get {
                    return ((SO_UPDATE_LOGRow)(this.Rows[index]));
                }
            }
            
            public event SO_UPDATE_LOGRowChangeEventHandler SO_UPDATE_LOGRowChanging;
            
            public event SO_UPDATE_LOGRowChangeEventHandler SO_UPDATE_LOGRowChanged;
            
            public event SO_UPDATE_LOGRowChangeEventHandler SO_UPDATE_LOGRowDeleting;
            
            public event SO_UPDATE_LOGRowChangeEventHandler SO_UPDATE_LOGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSO_UPDATE_LOGRow(SO_UPDATE_LOGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SO_UPDATE_LOGRow AddSO_UPDATE_LOGRow(string SONO, string STATUS, System.DateTime TRANS_DATE, string DWNFLAG, System.DateTime DWNDATE, System.DateTime SENDDATE, string SONOX, string SOID, string CREATE_USER, System.DateTime CREATE_DTM, string MODI_USER, System.DateTime MODI_DTM) {
                SO_UPDATE_LOGRow rowSO_UPDATE_LOGRow = ((SO_UPDATE_LOGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SONO,
                        STATUS,
                        TRANS_DATE,
                        DWNFLAG,
                        DWNDATE,
                        SENDDATE,
                        SONOX,
                        SOID,
                        CREATE_USER,
                        CREATE_DTM,
                        MODI_USER,
                        MODI_DTM};
                rowSO_UPDATE_LOGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSO_UPDATE_LOGRow);
                return rowSO_UPDATE_LOGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SO_UPDATE_LOGDataTable cln = ((SO_UPDATE_LOGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SO_UPDATE_LOGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSONO = base.Columns["SONO"];
                this.columnSTATUS = base.Columns["STATUS"];
                this.columnTRANS_DATE = base.Columns["TRANS_DATE"];
                this.columnDWNFLAG = base.Columns["DWNFLAG"];
                this.columnDWNDATE = base.Columns["DWNDATE"];
                this.columnSENDDATE = base.Columns["SENDDATE"];
                this.columnSONOX = base.Columns["SONOX"];
                this.columnSOID = base.Columns["SOID"];
                this.columnCREATE_USER = base.Columns["CREATE_USER"];
                this.columnCREATE_DTM = base.Columns["CREATE_DTM"];
                this.columnMODI_USER = base.Columns["MODI_USER"];
                this.columnMODI_DTM = base.Columns["MODI_DTM"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSONO = new global::System.Data.DataColumn("SONO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSONO);
                this.columnSTATUS = new global::System.Data.DataColumn("STATUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATUS);
                this.columnTRANS_DATE = new global::System.Data.DataColumn("TRANS_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANS_DATE);
                this.columnDWNFLAG = new global::System.Data.DataColumn("DWNFLAG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDWNFLAG);
                this.columnDWNDATE = new global::System.Data.DataColumn("DWNDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDWNDATE);
                this.columnSENDDATE = new global::System.Data.DataColumn("SENDDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSENDDATE);
                this.columnSONOX = new global::System.Data.DataColumn("SONOX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSONOX);
                this.columnSOID = new global::System.Data.DataColumn("SOID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOID);
                this.columnCREATE_USER = new global::System.Data.DataColumn("CREATE_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_USER);
                this.columnCREATE_DTM = new global::System.Data.DataColumn("CREATE_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_DTM);
                this.columnMODI_USER = new global::System.Data.DataColumn("MODI_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODI_USER);
                this.columnMODI_DTM = new global::System.Data.DataColumn("MODI_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODI_DTM);
                this.columnSONO.AllowDBNull = false;
                this.columnSONO.MaxLength = 20;
                this.columnSTATUS.AllowDBNull = false;
                this.columnSTATUS.MaxLength = 3;
                this.columnTRANS_DATE.AllowDBNull = false;
                this.columnDWNFLAG.MaxLength = 1;
                this.columnSONOX.MaxLength = 20;
                this.columnSOID.MaxLength = 18;
                this.columnCREATE_USER.MaxLength = 50;
                this.columnMODI_USER.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SO_UPDATE_LOGRow NewSO_UPDATE_LOGRow() {
                return ((SO_UPDATE_LOGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SO_UPDATE_LOGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SO_UPDATE_LOGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SO_UPDATE_LOGRowChanged != null)) {
                    this.SO_UPDATE_LOGRowChanged(this, new SO_UPDATE_LOGRowChangeEvent(((SO_UPDATE_LOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SO_UPDATE_LOGRowChanging != null)) {
                    this.SO_UPDATE_LOGRowChanging(this, new SO_UPDATE_LOGRowChangeEvent(((SO_UPDATE_LOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SO_UPDATE_LOGRowDeleted != null)) {
                    this.SO_UPDATE_LOGRowDeleted(this, new SO_UPDATE_LOGRowChangeEvent(((SO_UPDATE_LOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SO_UPDATE_LOGRowDeleting != null)) {
                    this.SO_UPDATE_LOGRowDeleting(this, new SO_UPDATE_LOGRowChangeEvent(((SO_UPDATE_LOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSO_UPDATE_LOGRow(SO_UPDATE_LOGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SCH08_Product_Type_DTO ds = new SCH08_Product_Type_DTO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SO_UPDATE_LOGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SO_UPDATE_LOG_OLDDataTable : global::System.Data.TypedTableBase<SO_UPDATE_LOG_OLDRow> {
            
            private global::System.Data.DataColumn columnSONO;
            
            private global::System.Data.DataColumn columnSTATUS;
            
            private global::System.Data.DataColumn columnTRANS_DATE;
            
            private global::System.Data.DataColumn columnDWNFLAG;
            
            private global::System.Data.DataColumn columnDWNDATE;
            
            private global::System.Data.DataColumn columnSENDDATE;
            
            private global::System.Data.DataColumn columnSONOX;
            
            private global::System.Data.DataColumn columnSOID;
            
            private global::System.Data.DataColumn columnCREATE_USER;
            
            private global::System.Data.DataColumn columnCREATE_DTM;
            
            private global::System.Data.DataColumn columnMODI_USER;
            
            private global::System.Data.DataColumn columnMODI_DTM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SO_UPDATE_LOG_OLDDataTable() {
                this.TableName = "SO_UPDATE_LOG_OLD";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SO_UPDATE_LOG_OLDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SO_UPDATE_LOG_OLDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SONOColumn {
                get {
                    return this.columnSONO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STATUSColumn {
                get {
                    return this.columnSTATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRANS_DATEColumn {
                get {
                    return this.columnTRANS_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DWNFLAGColumn {
                get {
                    return this.columnDWNFLAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DWNDATEColumn {
                get {
                    return this.columnDWNDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SENDDATEColumn {
                get {
                    return this.columnSENDDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SONOXColumn {
                get {
                    return this.columnSONOX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SOIDColumn {
                get {
                    return this.columnSOID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_USERColumn {
                get {
                    return this.columnCREATE_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_DTMColumn {
                get {
                    return this.columnCREATE_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODI_USERColumn {
                get {
                    return this.columnMODI_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODI_DTMColumn {
                get {
                    return this.columnMODI_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SO_UPDATE_LOG_OLDRow this[int index] {
                get {
                    return ((SO_UPDATE_LOG_OLDRow)(this.Rows[index]));
                }
            }
            
            public event SO_UPDATE_LOG_OLDRowChangeEventHandler SO_UPDATE_LOG_OLDRowChanging;
            
            public event SO_UPDATE_LOG_OLDRowChangeEventHandler SO_UPDATE_LOG_OLDRowChanged;
            
            public event SO_UPDATE_LOG_OLDRowChangeEventHandler SO_UPDATE_LOG_OLDRowDeleting;
            
            public event SO_UPDATE_LOG_OLDRowChangeEventHandler SO_UPDATE_LOG_OLDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSO_UPDATE_LOG_OLDRow(SO_UPDATE_LOG_OLDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SO_UPDATE_LOG_OLDRow AddSO_UPDATE_LOG_OLDRow(string SONO, string STATUS, System.DateTime TRANS_DATE, string DWNFLAG, System.DateTime DWNDATE, System.DateTime SENDDATE, string SONOX, string SOID, string CREATE_USER, System.DateTime CREATE_DTM, string MODI_USER, System.DateTime MODI_DTM) {
                SO_UPDATE_LOG_OLDRow rowSO_UPDATE_LOG_OLDRow = ((SO_UPDATE_LOG_OLDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SONO,
                        STATUS,
                        TRANS_DATE,
                        DWNFLAG,
                        DWNDATE,
                        SENDDATE,
                        SONOX,
                        SOID,
                        CREATE_USER,
                        CREATE_DTM,
                        MODI_USER,
                        MODI_DTM};
                rowSO_UPDATE_LOG_OLDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSO_UPDATE_LOG_OLDRow);
                return rowSO_UPDATE_LOG_OLDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SO_UPDATE_LOG_OLDDataTable cln = ((SO_UPDATE_LOG_OLDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SO_UPDATE_LOG_OLDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSONO = base.Columns["SONO"];
                this.columnSTATUS = base.Columns["STATUS"];
                this.columnTRANS_DATE = base.Columns["TRANS_DATE"];
                this.columnDWNFLAG = base.Columns["DWNFLAG"];
                this.columnDWNDATE = base.Columns["DWNDATE"];
                this.columnSENDDATE = base.Columns["SENDDATE"];
                this.columnSONOX = base.Columns["SONOX"];
                this.columnSOID = base.Columns["SOID"];
                this.columnCREATE_USER = base.Columns["CREATE_USER"];
                this.columnCREATE_DTM = base.Columns["CREATE_DTM"];
                this.columnMODI_USER = base.Columns["MODI_USER"];
                this.columnMODI_DTM = base.Columns["MODI_DTM"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSONO = new global::System.Data.DataColumn("SONO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSONO);
                this.columnSTATUS = new global::System.Data.DataColumn("STATUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATUS);
                this.columnTRANS_DATE = new global::System.Data.DataColumn("TRANS_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANS_DATE);
                this.columnDWNFLAG = new global::System.Data.DataColumn("DWNFLAG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDWNFLAG);
                this.columnDWNDATE = new global::System.Data.DataColumn("DWNDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDWNDATE);
                this.columnSENDDATE = new global::System.Data.DataColumn("SENDDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSENDDATE);
                this.columnSONOX = new global::System.Data.DataColumn("SONOX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSONOX);
                this.columnSOID = new global::System.Data.DataColumn("SOID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOID);
                this.columnCREATE_USER = new global::System.Data.DataColumn("CREATE_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_USER);
                this.columnCREATE_DTM = new global::System.Data.DataColumn("CREATE_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_DTM);
                this.columnMODI_USER = new global::System.Data.DataColumn("MODI_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODI_USER);
                this.columnMODI_DTM = new global::System.Data.DataColumn("MODI_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODI_DTM);
                this.columnSONO.AllowDBNull = false;
                this.columnSONO.MaxLength = 20;
                this.columnSTATUS.AllowDBNull = false;
                this.columnSTATUS.MaxLength = 3;
                this.columnTRANS_DATE.AllowDBNull = false;
                this.columnDWNFLAG.MaxLength = 1;
                this.columnSONOX.MaxLength = 20;
                this.columnSOID.MaxLength = 18;
                this.columnCREATE_USER.MaxLength = 50;
                this.columnMODI_USER.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SO_UPDATE_LOG_OLDRow NewSO_UPDATE_LOG_OLDRow() {
                return ((SO_UPDATE_LOG_OLDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SO_UPDATE_LOG_OLDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SO_UPDATE_LOG_OLDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SO_UPDATE_LOG_OLDRowChanged != null)) {
                    this.SO_UPDATE_LOG_OLDRowChanged(this, new SO_UPDATE_LOG_OLDRowChangeEvent(((SO_UPDATE_LOG_OLDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SO_UPDATE_LOG_OLDRowChanging != null)) {
                    this.SO_UPDATE_LOG_OLDRowChanging(this, new SO_UPDATE_LOG_OLDRowChangeEvent(((SO_UPDATE_LOG_OLDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SO_UPDATE_LOG_OLDRowDeleted != null)) {
                    this.SO_UPDATE_LOG_OLDRowDeleted(this, new SO_UPDATE_LOG_OLDRowChangeEvent(((SO_UPDATE_LOG_OLDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SO_UPDATE_LOG_OLDRowDeleting != null)) {
                    this.SO_UPDATE_LOG_OLDRowDeleting(this, new SO_UPDATE_LOG_OLDRowChangeEvent(((SO_UPDATE_LOG_OLDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSO_UPDATE_LOG_OLDRow(SO_UPDATE_LOG_OLDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SCH08_Product_Type_DTO ds = new SCH08_Product_Type_DTO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SO_UPDATE_LOG_OLDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PRODTYPERow : global::System.Data.DataRow {
            
            private PRODTYPEDataTable tablePRODTYPE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PRODTYPERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePRODTYPE = ((PRODTYPEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODTYPENO {
                get {
                    return ((string)(this[this.tablePRODTYPE.PRODTYPENOColumn]));
                }
                set {
                    this[this.tablePRODTYPE.PRODTYPENOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMPANYCODE {
                get {
                    return ((string)(this[this.tablePRODTYPE.COMPANYCODEColumn]));
                }
                set {
                    this[this.tablePRODTYPE.COMPANYCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODTYPENAME {
                get {
                    try {
                        return ((string)(this[this.tablePRODTYPE.PRODTYPENAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'PRODTYPE\' 中資料行 \'PRODTYPENAME\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePRODTYPE.PRODTYPENAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UPDDATE {
                get {
                    try {
                        return ((string)(this[this.tablePRODTYPE.UPDDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'PRODTYPE\' 中資料行 \'UPDDATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePRODTYPE.UPDDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UPDUSRNO {
                get {
                    try {
                        return ((string)(this[this.tablePRODTYPE.UPDUSRNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'PRODTYPE\' 中資料行 \'UPDUSRNO\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePRODTYPE.UPDUSRNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ULSNO {
                get {
                    try {
                        return ((string)(this[this.tablePRODTYPE.ULSNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'PRODTYPE\' 中資料行 \'ULSNO\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePRODTYPE.ULSNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRODTYPENAMENull() {
                return this.IsNull(this.tablePRODTYPE.PRODTYPENAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRODTYPENAMENull() {
                this[this.tablePRODTYPE.PRODTYPENAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUPDDATENull() {
                return this.IsNull(this.tablePRODTYPE.UPDDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUPDDATENull() {
                this[this.tablePRODTYPE.UPDDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUPDUSRNONull() {
                return this.IsNull(this.tablePRODTYPE.UPDUSRNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUPDUSRNONull() {
                this[this.tablePRODTYPE.UPDUSRNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsULSNONull() {
                return this.IsNull(this.tablePRODTYPE.ULSNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetULSNONull() {
                this[this.tablePRODTYPE.ULSNOColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PRODTYPE_TEMPRow : global::System.Data.DataRow {
            
            private PRODTYPE_TEMPDataTable tablePRODTYPE_TEMP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PRODTYPE_TEMPRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePRODTYPE_TEMP = ((PRODTYPE_TEMPDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODTYPENO {
                get {
                    return ((string)(this[this.tablePRODTYPE_TEMP.PRODTYPENOColumn]));
                }
                set {
                    this[this.tablePRODTYPE_TEMP.PRODTYPENOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMPANYCODE {
                get {
                    return ((string)(this[this.tablePRODTYPE_TEMP.COMPANYCODEColumn]));
                }
                set {
                    this[this.tablePRODTYPE_TEMP.COMPANYCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODTYPENAME {
                get {
                    try {
                        return ((string)(this[this.tablePRODTYPE_TEMP.PRODTYPENAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'PRODTYPE_TEMP\' 中資料行 \'PRODTYPENAME\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePRODTYPE_TEMP.PRODTYPENAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UPDDATE {
                get {
                    try {
                        return ((string)(this[this.tablePRODTYPE_TEMP.UPDDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'PRODTYPE_TEMP\' 中資料行 \'UPDDATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePRODTYPE_TEMP.UPDDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UPDUSRNO {
                get {
                    try {
                        return ((string)(this[this.tablePRODTYPE_TEMP.UPDUSRNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'PRODTYPE_TEMP\' 中資料行 \'UPDUSRNO\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePRODTYPE_TEMP.UPDUSRNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ULSNO {
                get {
                    try {
                        return ((string)(this[this.tablePRODTYPE_TEMP.ULSNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'PRODTYPE_TEMP\' 中資料行 \'ULSNO\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePRODTYPE_TEMP.ULSNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRODTYPENAMENull() {
                return this.IsNull(this.tablePRODTYPE_TEMP.PRODTYPENAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRODTYPENAMENull() {
                this[this.tablePRODTYPE_TEMP.PRODTYPENAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUPDDATENull() {
                return this.IsNull(this.tablePRODTYPE_TEMP.UPDDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUPDDATENull() {
                this[this.tablePRODTYPE_TEMP.UPDDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUPDUSRNONull() {
                return this.IsNull(this.tablePRODTYPE_TEMP.UPDUSRNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUPDUSRNONull() {
                this[this.tablePRODTYPE_TEMP.UPDUSRNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsULSNONull() {
                return this.IsNull(this.tablePRODTYPE_TEMP.ULSNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetULSNONull() {
                this[this.tablePRODTYPE_TEMP.ULSNOColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SO_UPDATE_LOGRow : global::System.Data.DataRow {
            
            private SO_UPDATE_LOGDataTable tableSO_UPDATE_LOG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SO_UPDATE_LOGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSO_UPDATE_LOG = ((SO_UPDATE_LOGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SONO {
                get {
                    return ((string)(this[this.tableSO_UPDATE_LOG.SONOColumn]));
                }
                set {
                    this[this.tableSO_UPDATE_LOG.SONOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STATUS {
                get {
                    return ((string)(this[this.tableSO_UPDATE_LOG.STATUSColumn]));
                }
                set {
                    this[this.tableSO_UPDATE_LOG.STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TRANS_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableSO_UPDATE_LOG.TRANS_DATEColumn]));
                }
                set {
                    this[this.tableSO_UPDATE_LOG.TRANS_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DWNFLAG {
                get {
                    try {
                        return ((string)(this[this.tableSO_UPDATE_LOG.DWNFLAGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SO_UPDATE_LOG\' 中資料行 \'DWNFLAG\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSO_UPDATE_LOG.DWNFLAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DWNDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSO_UPDATE_LOG.DWNDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SO_UPDATE_LOG\' 中資料行 \'DWNDATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSO_UPDATE_LOG.DWNDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SENDDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSO_UPDATE_LOG.SENDDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SO_UPDATE_LOG\' 中資料行 \'SENDDATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSO_UPDATE_LOG.SENDDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SONOX {
                get {
                    try {
                        return ((string)(this[this.tableSO_UPDATE_LOG.SONOXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SO_UPDATE_LOG\' 中資料行 \'SONOX\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSO_UPDATE_LOG.SONOXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SOID {
                get {
                    try {
                        return ((string)(this[this.tableSO_UPDATE_LOG.SOIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SO_UPDATE_LOG\' 中資料行 \'SOID\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSO_UPDATE_LOG.SOIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CREATE_USER {
                get {
                    try {
                        return ((string)(this[this.tableSO_UPDATE_LOG.CREATE_USERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SO_UPDATE_LOG\' 中資料行 \'CREATE_USER\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSO_UPDATE_LOG.CREATE_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CREATE_DTM {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSO_UPDATE_LOG.CREATE_DTMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SO_UPDATE_LOG\' 中資料行 \'CREATE_DTM\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSO_UPDATE_LOG.CREATE_DTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODI_USER {
                get {
                    try {
                        return ((string)(this[this.tableSO_UPDATE_LOG.MODI_USERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SO_UPDATE_LOG\' 中資料行 \'MODI_USER\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSO_UPDATE_LOG.MODI_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODI_DTM {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSO_UPDATE_LOG.MODI_DTMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SO_UPDATE_LOG\' 中資料行 \'MODI_DTM\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSO_UPDATE_LOG.MODI_DTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDWNFLAGNull() {
                return this.IsNull(this.tableSO_UPDATE_LOG.DWNFLAGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDWNFLAGNull() {
                this[this.tableSO_UPDATE_LOG.DWNFLAGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDWNDATENull() {
                return this.IsNull(this.tableSO_UPDATE_LOG.DWNDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDWNDATENull() {
                this[this.tableSO_UPDATE_LOG.DWNDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSENDDATENull() {
                return this.IsNull(this.tableSO_UPDATE_LOG.SENDDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSENDDATENull() {
                this[this.tableSO_UPDATE_LOG.SENDDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSONOXNull() {
                return this.IsNull(this.tableSO_UPDATE_LOG.SONOXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSONOXNull() {
                this[this.tableSO_UPDATE_LOG.SONOXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOIDNull() {
                return this.IsNull(this.tableSO_UPDATE_LOG.SOIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOIDNull() {
                this[this.tableSO_UPDATE_LOG.SOIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCREATE_USERNull() {
                return this.IsNull(this.tableSO_UPDATE_LOG.CREATE_USERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCREATE_USERNull() {
                this[this.tableSO_UPDATE_LOG.CREATE_USERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCREATE_DTMNull() {
                return this.IsNull(this.tableSO_UPDATE_LOG.CREATE_DTMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCREATE_DTMNull() {
                this[this.tableSO_UPDATE_LOG.CREATE_DTMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODI_USERNull() {
                return this.IsNull(this.tableSO_UPDATE_LOG.MODI_USERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODI_USERNull() {
                this[this.tableSO_UPDATE_LOG.MODI_USERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODI_DTMNull() {
                return this.IsNull(this.tableSO_UPDATE_LOG.MODI_DTMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODI_DTMNull() {
                this[this.tableSO_UPDATE_LOG.MODI_DTMColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SO_UPDATE_LOG_OLDRow : global::System.Data.DataRow {
            
            private SO_UPDATE_LOG_OLDDataTable tableSO_UPDATE_LOG_OLD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SO_UPDATE_LOG_OLDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSO_UPDATE_LOG_OLD = ((SO_UPDATE_LOG_OLDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SONO {
                get {
                    return ((string)(this[this.tableSO_UPDATE_LOG_OLD.SONOColumn]));
                }
                set {
                    this[this.tableSO_UPDATE_LOG_OLD.SONOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STATUS {
                get {
                    return ((string)(this[this.tableSO_UPDATE_LOG_OLD.STATUSColumn]));
                }
                set {
                    this[this.tableSO_UPDATE_LOG_OLD.STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TRANS_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableSO_UPDATE_LOG_OLD.TRANS_DATEColumn]));
                }
                set {
                    this[this.tableSO_UPDATE_LOG_OLD.TRANS_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DWNFLAG {
                get {
                    try {
                        return ((string)(this[this.tableSO_UPDATE_LOG_OLD.DWNFLAGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SO_UPDATE_LOG_OLD\' 中資料行 \'DWNFLAG\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSO_UPDATE_LOG_OLD.DWNFLAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DWNDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSO_UPDATE_LOG_OLD.DWNDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SO_UPDATE_LOG_OLD\' 中資料行 \'DWNDATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSO_UPDATE_LOG_OLD.DWNDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SENDDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSO_UPDATE_LOG_OLD.SENDDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SO_UPDATE_LOG_OLD\' 中資料行 \'SENDDATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSO_UPDATE_LOG_OLD.SENDDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SONOX {
                get {
                    try {
                        return ((string)(this[this.tableSO_UPDATE_LOG_OLD.SONOXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SO_UPDATE_LOG_OLD\' 中資料行 \'SONOX\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSO_UPDATE_LOG_OLD.SONOXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SOID {
                get {
                    try {
                        return ((string)(this[this.tableSO_UPDATE_LOG_OLD.SOIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SO_UPDATE_LOG_OLD\' 中資料行 \'SOID\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSO_UPDATE_LOG_OLD.SOIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CREATE_USER {
                get {
                    try {
                        return ((string)(this[this.tableSO_UPDATE_LOG_OLD.CREATE_USERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SO_UPDATE_LOG_OLD\' 中資料行 \'CREATE_USER\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSO_UPDATE_LOG_OLD.CREATE_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CREATE_DTM {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSO_UPDATE_LOG_OLD.CREATE_DTMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SO_UPDATE_LOG_OLD\' 中資料行 \'CREATE_DTM\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSO_UPDATE_LOG_OLD.CREATE_DTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODI_USER {
                get {
                    try {
                        return ((string)(this[this.tableSO_UPDATE_LOG_OLD.MODI_USERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SO_UPDATE_LOG_OLD\' 中資料行 \'MODI_USER\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSO_UPDATE_LOG_OLD.MODI_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODI_DTM {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSO_UPDATE_LOG_OLD.MODI_DTMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SO_UPDATE_LOG_OLD\' 中資料行 \'MODI_DTM\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSO_UPDATE_LOG_OLD.MODI_DTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDWNFLAGNull() {
                return this.IsNull(this.tableSO_UPDATE_LOG_OLD.DWNFLAGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDWNFLAGNull() {
                this[this.tableSO_UPDATE_LOG_OLD.DWNFLAGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDWNDATENull() {
                return this.IsNull(this.tableSO_UPDATE_LOG_OLD.DWNDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDWNDATENull() {
                this[this.tableSO_UPDATE_LOG_OLD.DWNDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSENDDATENull() {
                return this.IsNull(this.tableSO_UPDATE_LOG_OLD.SENDDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSENDDATENull() {
                this[this.tableSO_UPDATE_LOG_OLD.SENDDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSONOXNull() {
                return this.IsNull(this.tableSO_UPDATE_LOG_OLD.SONOXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSONOXNull() {
                this[this.tableSO_UPDATE_LOG_OLD.SONOXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOIDNull() {
                return this.IsNull(this.tableSO_UPDATE_LOG_OLD.SOIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOIDNull() {
                this[this.tableSO_UPDATE_LOG_OLD.SOIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCREATE_USERNull() {
                return this.IsNull(this.tableSO_UPDATE_LOG_OLD.CREATE_USERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCREATE_USERNull() {
                this[this.tableSO_UPDATE_LOG_OLD.CREATE_USERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCREATE_DTMNull() {
                return this.IsNull(this.tableSO_UPDATE_LOG_OLD.CREATE_DTMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCREATE_DTMNull() {
                this[this.tableSO_UPDATE_LOG_OLD.CREATE_DTMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODI_USERNull() {
                return this.IsNull(this.tableSO_UPDATE_LOG_OLD.MODI_USERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODI_USERNull() {
                this[this.tableSO_UPDATE_LOG_OLD.MODI_USERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODI_DTMNull() {
                return this.IsNull(this.tableSO_UPDATE_LOG_OLD.MODI_DTMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODI_DTMNull() {
                this[this.tableSO_UPDATE_LOG_OLD.MODI_DTMColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PRODTYPERowChangeEvent : global::System.EventArgs {
            
            private PRODTYPERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PRODTYPERowChangeEvent(PRODTYPERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PRODTYPERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PRODTYPE_TEMPRowChangeEvent : global::System.EventArgs {
            
            private PRODTYPE_TEMPRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PRODTYPE_TEMPRowChangeEvent(PRODTYPE_TEMPRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PRODTYPE_TEMPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SO_UPDATE_LOGRowChangeEvent : global::System.EventArgs {
            
            private SO_UPDATE_LOGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SO_UPDATE_LOGRowChangeEvent(SO_UPDATE_LOGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SO_UPDATE_LOGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SO_UPDATE_LOG_OLDRowChangeEvent : global::System.EventArgs {
            
            private SO_UPDATE_LOG_OLDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SO_UPDATE_LOG_OLDRowChangeEvent(SO_UPDATE_LOG_OLDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SO_UPDATE_LOG_OLDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591