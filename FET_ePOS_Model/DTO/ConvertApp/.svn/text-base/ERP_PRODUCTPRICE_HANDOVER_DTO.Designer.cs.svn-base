//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:2.0.50727.4206
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace FET.POS.Model.DTO.ConvertApp {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ERP_PRODUCTPRICE_HANDOVER_DTO")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ERP_PRODUCTPRICE_HANDOVER_DTO : global::System.Data.DataSet {
        
        private ERP_SALESDataTable tableERP_SALES;
        
        private SALE_HEADDataTable tableSALE_HEAD;
        
        private SALE_DETAILDataTable tableSALE_DETAIL;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ERP_PRODUCTPRICE_HANDOVER_DTO() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ERP_PRODUCTPRICE_HANDOVER_DTO(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ERP_SALES"] != null)) {
                    base.Tables.Add(new ERP_SALESDataTable(ds.Tables["ERP_SALES"]));
                }
                if ((ds.Tables["SALE_HEAD"] != null)) {
                    base.Tables.Add(new SALE_HEADDataTable(ds.Tables["SALE_HEAD"]));
                }
                if ((ds.Tables["SALE_DETAIL"] != null)) {
                    base.Tables.Add(new SALE_DETAILDataTable(ds.Tables["SALE_DETAIL"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ERP_SALESDataTable ERP_SALES {
            get {
                return this.tableERP_SALES;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SALE_HEADDataTable SALE_HEAD {
            get {
                return this.tableSALE_HEAD;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SALE_DETAILDataTable SALE_DETAIL {
            get {
                return this.tableSALE_DETAIL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            ERP_PRODUCTPRICE_HANDOVER_DTO cln = ((ERP_PRODUCTPRICE_HANDOVER_DTO)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ERP_SALES"] != null)) {
                    base.Tables.Add(new ERP_SALESDataTable(ds.Tables["ERP_SALES"]));
                }
                if ((ds.Tables["SALE_HEAD"] != null)) {
                    base.Tables.Add(new SALE_HEADDataTable(ds.Tables["SALE_HEAD"]));
                }
                if ((ds.Tables["SALE_DETAIL"] != null)) {
                    base.Tables.Add(new SALE_DETAILDataTable(ds.Tables["SALE_DETAIL"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableERP_SALES = ((ERP_SALESDataTable)(base.Tables["ERP_SALES"]));
            if ((initTable == true)) {
                if ((this.tableERP_SALES != null)) {
                    this.tableERP_SALES.InitVars();
                }
            }
            this.tableSALE_HEAD = ((SALE_HEADDataTable)(base.Tables["SALE_HEAD"]));
            if ((initTable == true)) {
                if ((this.tableSALE_HEAD != null)) {
                    this.tableSALE_HEAD.InitVars();
                }
            }
            this.tableSALE_DETAIL = ((SALE_DETAILDataTable)(base.Tables["SALE_DETAIL"]));
            if ((initTable == true)) {
                if ((this.tableSALE_DETAIL != null)) {
                    this.tableSALE_DETAIL.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "ERP_PRODUCTPRICE_HANDOVER_DTO";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ERP_PRODUCTPRICE_HANDOVER_DTO.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableERP_SALES = new ERP_SALESDataTable();
            base.Tables.Add(this.tableERP_SALES);
            this.tableSALE_HEAD = new SALE_HEADDataTable();
            base.Tables.Add(this.tableSALE_HEAD);
            this.tableSALE_DETAIL = new SALE_DETAILDataTable();
            base.Tables.Add(this.tableSALE_DETAIL);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeERP_SALES() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSALE_HEAD() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSALE_DETAIL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ERP_PRODUCTPRICE_HANDOVER_DTO ds = new ERP_PRODUCTPRICE_HANDOVER_DTO();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void ERP_SALESRowChangeEventHandler(object sender, ERP_SALESRowChangeEvent e);
        
        public delegate void SALE_HEADRowChangeEventHandler(object sender, SALE_HEADRowChangeEvent e);
        
        public delegate void SALE_DETAILRowChangeEventHandler(object sender, SALE_DETAILRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ERP_SALESDataTable : global::System.Data.TypedTableBase<ERP_SALESRow> {
            
            private global::System.Data.DataColumn columnMYNO;
            
            private global::System.Data.DataColumn columnCOMPANYCODE;
            
            private global::System.Data.DataColumn columnTXTYPE;
            
            private global::System.Data.DataColumn columnSTORENO;
            
            private global::System.Data.DataColumn columnTRANDATE;
            
            private global::System.Data.DataColumn columnITEMCODE;
            
            private global::System.Data.DataColumn columnQTY;
            
            private global::System.Data.DataColumn columnDWNFLAG;
            
            private global::System.Data.DataColumn columnDWNDATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ERP_SALESDataTable() {
                this.TableName = "ERP_SALES";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ERP_SALESDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ERP_SALESDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MYNOColumn {
                get {
                    return this.columnMYNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANYCODEColumn {
                get {
                    return this.columnCOMPANYCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TXTYPEColumn {
                get {
                    return this.columnTXTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STORENOColumn {
                get {
                    return this.columnSTORENO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRANDATEColumn {
                get {
                    return this.columnTRANDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ITEMCODEColumn {
                get {
                    return this.columnITEMCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QTYColumn {
                get {
                    return this.columnQTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DWNFLAGColumn {
                get {
                    return this.columnDWNFLAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DWNDATEColumn {
                get {
                    return this.columnDWNDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ERP_SALESRow this[int index] {
                get {
                    return ((ERP_SALESRow)(this.Rows[index]));
                }
            }
            
            public event ERP_SALESRowChangeEventHandler ERP_SALESRowChanging;
            
            public event ERP_SALESRowChangeEventHandler ERP_SALESRowChanged;
            
            public event ERP_SALESRowChangeEventHandler ERP_SALESRowDeleting;
            
            public event ERP_SALESRowChangeEventHandler ERP_SALESRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddERP_SALESRow(ERP_SALESRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ERP_SALESRow AddERP_SALESRow(string MYNO, string COMPANYCODE, string TXTYPE, string STORENO, System.DateTime TRANDATE, string ITEMCODE, decimal QTY, string DWNFLAG, System.DateTime DWNDATE) {
                ERP_SALESRow rowERP_SALESRow = ((ERP_SALESRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MYNO,
                        COMPANYCODE,
                        TXTYPE,
                        STORENO,
                        TRANDATE,
                        ITEMCODE,
                        QTY,
                        DWNFLAG,
                        DWNDATE};
                rowERP_SALESRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowERP_SALESRow);
                return rowERP_SALESRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ERP_SALESRow FindByMYNOCOMPANYCODE(string MYNO, string COMPANYCODE) {
                return ((ERP_SALESRow)(this.Rows.Find(new object[] {
                            MYNO,
                            COMPANYCODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ERP_SALESDataTable cln = ((ERP_SALESDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ERP_SALESDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMYNO = base.Columns["MYNO"];
                this.columnCOMPANYCODE = base.Columns["COMPANYCODE"];
                this.columnTXTYPE = base.Columns["TXTYPE"];
                this.columnSTORENO = base.Columns["STORENO"];
                this.columnTRANDATE = base.Columns["TRANDATE"];
                this.columnITEMCODE = base.Columns["ITEMCODE"];
                this.columnQTY = base.Columns["QTY"];
                this.columnDWNFLAG = base.Columns["DWNFLAG"];
                this.columnDWNDATE = base.Columns["DWNDATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMYNO = new global::System.Data.DataColumn("MYNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMYNO);
                this.columnCOMPANYCODE = new global::System.Data.DataColumn("COMPANYCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANYCODE);
                this.columnTXTYPE = new global::System.Data.DataColumn("TXTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTXTYPE);
                this.columnSTORENO = new global::System.Data.DataColumn("STORENO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTORENO);
                this.columnTRANDATE = new global::System.Data.DataColumn("TRANDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANDATE);
                this.columnITEMCODE = new global::System.Data.DataColumn("ITEMCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEMCODE);
                this.columnQTY = new global::System.Data.DataColumn("QTY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQTY);
                this.columnDWNFLAG = new global::System.Data.DataColumn("DWNFLAG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDWNFLAG);
                this.columnDWNDATE = new global::System.Data.DataColumn("DWNDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDWNDATE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMYNO,
                                this.columnCOMPANYCODE}, true));
                this.columnMYNO.AllowDBNull = false;
                this.columnMYNO.MaxLength = 40;
                this.columnCOMPANYCODE.AllowDBNull = false;
                this.columnCOMPANYCODE.MaxLength = 10;
                this.columnTXTYPE.MaxLength = 1;
                this.columnSTORENO.MaxLength = 5;
                this.columnITEMCODE.MaxLength = 20;
                this.columnDWNFLAG.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ERP_SALESRow NewERP_SALESRow() {
                return ((ERP_SALESRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ERP_SALESRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ERP_SALESRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ERP_SALESRowChanged != null)) {
                    this.ERP_SALESRowChanged(this, new ERP_SALESRowChangeEvent(((ERP_SALESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ERP_SALESRowChanging != null)) {
                    this.ERP_SALESRowChanging(this, new ERP_SALESRowChangeEvent(((ERP_SALESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ERP_SALESRowDeleted != null)) {
                    this.ERP_SALESRowDeleted(this, new ERP_SALESRowChangeEvent(((ERP_SALESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ERP_SALESRowDeleting != null)) {
                    this.ERP_SALESRowDeleting(this, new ERP_SALESRowChangeEvent(((ERP_SALESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveERP_SALESRow(ERP_SALESRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ERP_PRODUCTPRICE_HANDOVER_DTO ds = new ERP_PRODUCTPRICE_HANDOVER_DTO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ERP_SALESDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SALE_HEADDataTable : global::System.Data.TypedTableBase<SALE_HEADRow> {
            
            private global::System.Data.DataColumn columnPOSUUID_MASTER;
            
            private global::System.Data.DataColumn columnSALE_NO;
            
            private global::System.Data.DataColumn columnTRADE_DATE;
            
            private global::System.Data.DataColumn columnUNI_TITLE;
            
            private global::System.Data.DataColumn columnUNI_NO;
            
            private global::System.Data.DataColumn columnREMARK;
            
            private global::System.Data.DataColumn columnSALE_STATUS;
            
            private global::System.Data.DataColumn columnCREATE_USER;
            
            private global::System.Data.DataColumn columnSALE_BEFORE_TAX;
            
            private global::System.Data.DataColumn columnSALE_TAX;
            
            private global::System.Data.DataColumn columnCREATE_DTM;
            
            private global::System.Data.DataColumn columnSALE_TOTAL_AMOUNT;
            
            private global::System.Data.DataColumn columnDISCOUNT_BEFORE_TAX;
            
            private global::System.Data.DataColumn columnINVALID_ID;
            
            private global::System.Data.DataColumn columnSALE_TYPE;
            
            private global::System.Data.DataColumn columnDISCOUNT_TAX;
            
            private global::System.Data.DataColumn columnSTORE_NO;
            
            private global::System.Data.DataColumn columnDISCOUNT_TOTAL_AMOUNT;
            
            private global::System.Data.DataColumn columnHG_CARD_NO;
            
            private global::System.Data.DataColumn columnHG_AWARD_POINT;
            
            private global::System.Data.DataColumn columnHG_REMAIN_POINT;
            
            private global::System.Data.DataColumn columnORIGINAL_ID;
            
            private global::System.Data.DataColumn columnSALE_PERSON;
            
            private global::System.Data.DataColumn columnMODI_USER;
            
            private global::System.Data.DataColumn columnMODI_DTM;
            
            private global::System.Data.DataColumn columnMACHINE_ID;
            
            private global::System.Data.DataColumn columnSTORE_NAME;
            
            private global::System.Data.DataColumn columnFLG_TOERP;
            
            private global::System.Data.DataColumn columnDTM_TOERP;
            
            private global::System.Data.DataColumn columnINVALID_REASON;
            
            private global::System.Data.DataColumn columnHG_PRODNO;
            
            private global::System.Data.DataColumn columnINVALID_DATE;
            
            private global::System.Data.DataColumn columnINVALID_NO;
            
            private global::System.Data.DataColumn columnINVALID_REMARK;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SALE_HEADDataTable() {
                this.TableName = "SALE_HEAD";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SALE_HEADDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SALE_HEADDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn POSUUID_MASTERColumn {
                get {
                    return this.columnPOSUUID_MASTER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SALE_NOColumn {
                get {
                    return this.columnSALE_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRADE_DATEColumn {
                get {
                    return this.columnTRADE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UNI_TITLEColumn {
                get {
                    return this.columnUNI_TITLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UNI_NOColumn {
                get {
                    return this.columnUNI_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REMARKColumn {
                get {
                    return this.columnREMARK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SALE_STATUSColumn {
                get {
                    return this.columnSALE_STATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_USERColumn {
                get {
                    return this.columnCREATE_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SALE_BEFORE_TAXColumn {
                get {
                    return this.columnSALE_BEFORE_TAX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SALE_TAXColumn {
                get {
                    return this.columnSALE_TAX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_DTMColumn {
                get {
                    return this.columnCREATE_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SALE_TOTAL_AMOUNTColumn {
                get {
                    return this.columnSALE_TOTAL_AMOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DISCOUNT_BEFORE_TAXColumn {
                get {
                    return this.columnDISCOUNT_BEFORE_TAX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INVALID_IDColumn {
                get {
                    return this.columnINVALID_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SALE_TYPEColumn {
                get {
                    return this.columnSALE_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DISCOUNT_TAXColumn {
                get {
                    return this.columnDISCOUNT_TAX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STORE_NOColumn {
                get {
                    return this.columnSTORE_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DISCOUNT_TOTAL_AMOUNTColumn {
                get {
                    return this.columnDISCOUNT_TOTAL_AMOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HG_CARD_NOColumn {
                get {
                    return this.columnHG_CARD_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HG_AWARD_POINTColumn {
                get {
                    return this.columnHG_AWARD_POINT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HG_REMAIN_POINTColumn {
                get {
                    return this.columnHG_REMAIN_POINT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ORIGINAL_IDColumn {
                get {
                    return this.columnORIGINAL_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SALE_PERSONColumn {
                get {
                    return this.columnSALE_PERSON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODI_USERColumn {
                get {
                    return this.columnMODI_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODI_DTMColumn {
                get {
                    return this.columnMODI_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MACHINE_IDColumn {
                get {
                    return this.columnMACHINE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STORE_NAMEColumn {
                get {
                    return this.columnSTORE_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLG_TOERPColumn {
                get {
                    return this.columnFLG_TOERP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DTM_TOERPColumn {
                get {
                    return this.columnDTM_TOERP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INVALID_REASONColumn {
                get {
                    return this.columnINVALID_REASON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HG_PRODNOColumn {
                get {
                    return this.columnHG_PRODNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INVALID_DATEColumn {
                get {
                    return this.columnINVALID_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INVALID_NOColumn {
                get {
                    return this.columnINVALID_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INVALID_REMARKColumn {
                get {
                    return this.columnINVALID_REMARK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SALE_HEADRow this[int index] {
                get {
                    return ((SALE_HEADRow)(this.Rows[index]));
                }
            }
            
            public event SALE_HEADRowChangeEventHandler SALE_HEADRowChanging;
            
            public event SALE_HEADRowChangeEventHandler SALE_HEADRowChanged;
            
            public event SALE_HEADRowChangeEventHandler SALE_HEADRowDeleting;
            
            public event SALE_HEADRowChangeEventHandler SALE_HEADRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSALE_HEADRow(SALE_HEADRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SALE_HEADRow AddSALE_HEADRow(
                        string POSUUID_MASTER, 
                        string SALE_NO, 
                        System.DateTime TRADE_DATE, 
                        string UNI_TITLE, 
                        string UNI_NO, 
                        string REMARK, 
                        string SALE_STATUS, 
                        string CREATE_USER, 
                        decimal SALE_BEFORE_TAX, 
                        decimal SALE_TAX, 
                        System.DateTime CREATE_DTM, 
                        decimal SALE_TOTAL_AMOUNT, 
                        decimal DISCOUNT_BEFORE_TAX, 
                        string INVALID_ID, 
                        decimal SALE_TYPE, 
                        decimal DISCOUNT_TAX, 
                        string STORE_NO, 
                        decimal DISCOUNT_TOTAL_AMOUNT, 
                        string HG_CARD_NO, 
                        decimal HG_AWARD_POINT, 
                        string HG_REMAIN_POINT, 
                        string ORIGINAL_ID, 
                        string SALE_PERSON, 
                        string MODI_USER, 
                        System.DateTime MODI_DTM, 
                        string MACHINE_ID, 
                        string STORE_NAME, 
                        string FLG_TOERP, 
                        System.DateTime DTM_TOERP, 
                        string INVALID_REASON, 
                        string HG_PRODNO, 
                        System.DateTime INVALID_DATE, 
                        string INVALID_NO, 
                        string INVALID_REMARK) {
                SALE_HEADRow rowSALE_HEADRow = ((SALE_HEADRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        POSUUID_MASTER,
                        SALE_NO,
                        TRADE_DATE,
                        UNI_TITLE,
                        UNI_NO,
                        REMARK,
                        SALE_STATUS,
                        CREATE_USER,
                        SALE_BEFORE_TAX,
                        SALE_TAX,
                        CREATE_DTM,
                        SALE_TOTAL_AMOUNT,
                        DISCOUNT_BEFORE_TAX,
                        INVALID_ID,
                        SALE_TYPE,
                        DISCOUNT_TAX,
                        STORE_NO,
                        DISCOUNT_TOTAL_AMOUNT,
                        HG_CARD_NO,
                        HG_AWARD_POINT,
                        HG_REMAIN_POINT,
                        ORIGINAL_ID,
                        SALE_PERSON,
                        MODI_USER,
                        MODI_DTM,
                        MACHINE_ID,
                        STORE_NAME,
                        FLG_TOERP,
                        DTM_TOERP,
                        INVALID_REASON,
                        HG_PRODNO,
                        INVALID_DATE,
                        INVALID_NO,
                        INVALID_REMARK};
                rowSALE_HEADRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSALE_HEADRow);
                return rowSALE_HEADRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SALE_HEADRow FindByPOSUUID_MASTER(string POSUUID_MASTER) {
                return ((SALE_HEADRow)(this.Rows.Find(new object[] {
                            POSUUID_MASTER})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SALE_HEADDataTable cln = ((SALE_HEADDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SALE_HEADDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPOSUUID_MASTER = base.Columns["POSUUID_MASTER"];
                this.columnSALE_NO = base.Columns["SALE_NO"];
                this.columnTRADE_DATE = base.Columns["TRADE_DATE"];
                this.columnUNI_TITLE = base.Columns["UNI_TITLE"];
                this.columnUNI_NO = base.Columns["UNI_NO"];
                this.columnREMARK = base.Columns["REMARK"];
                this.columnSALE_STATUS = base.Columns["SALE_STATUS"];
                this.columnCREATE_USER = base.Columns["CREATE_USER"];
                this.columnSALE_BEFORE_TAX = base.Columns["SALE_BEFORE_TAX"];
                this.columnSALE_TAX = base.Columns["SALE_TAX"];
                this.columnCREATE_DTM = base.Columns["CREATE_DTM"];
                this.columnSALE_TOTAL_AMOUNT = base.Columns["SALE_TOTAL_AMOUNT"];
                this.columnDISCOUNT_BEFORE_TAX = base.Columns["DISCOUNT_BEFORE_TAX"];
                this.columnINVALID_ID = base.Columns["INVALID_ID"];
                this.columnSALE_TYPE = base.Columns["SALE_TYPE"];
                this.columnDISCOUNT_TAX = base.Columns["DISCOUNT_TAX"];
                this.columnSTORE_NO = base.Columns["STORE_NO"];
                this.columnDISCOUNT_TOTAL_AMOUNT = base.Columns["DISCOUNT_TOTAL_AMOUNT"];
                this.columnHG_CARD_NO = base.Columns["HG_CARD_NO"];
                this.columnHG_AWARD_POINT = base.Columns["HG_AWARD_POINT"];
                this.columnHG_REMAIN_POINT = base.Columns["HG_REMAIN_POINT"];
                this.columnORIGINAL_ID = base.Columns["ORIGINAL_ID"];
                this.columnSALE_PERSON = base.Columns["SALE_PERSON"];
                this.columnMODI_USER = base.Columns["MODI_USER"];
                this.columnMODI_DTM = base.Columns["MODI_DTM"];
                this.columnMACHINE_ID = base.Columns["MACHINE_ID"];
                this.columnSTORE_NAME = base.Columns["STORE_NAME"];
                this.columnFLG_TOERP = base.Columns["FLG_TOERP"];
                this.columnDTM_TOERP = base.Columns["DTM_TOERP"];
                this.columnINVALID_REASON = base.Columns["INVALID_REASON"];
                this.columnHG_PRODNO = base.Columns["HG_PRODNO"];
                this.columnINVALID_DATE = base.Columns["INVALID_DATE"];
                this.columnINVALID_NO = base.Columns["INVALID_NO"];
                this.columnINVALID_REMARK = base.Columns["INVALID_REMARK"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPOSUUID_MASTER = new global::System.Data.DataColumn("POSUUID_MASTER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOSUUID_MASTER);
                this.columnSALE_NO = new global::System.Data.DataColumn("SALE_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALE_NO);
                this.columnTRADE_DATE = new global::System.Data.DataColumn("TRADE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRADE_DATE);
                this.columnUNI_TITLE = new global::System.Data.DataColumn("UNI_TITLE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUNI_TITLE);
                this.columnUNI_NO = new global::System.Data.DataColumn("UNI_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUNI_NO);
                this.columnREMARK = new global::System.Data.DataColumn("REMARK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREMARK);
                this.columnSALE_STATUS = new global::System.Data.DataColumn("SALE_STATUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALE_STATUS);
                this.columnCREATE_USER = new global::System.Data.DataColumn("CREATE_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_USER);
                this.columnSALE_BEFORE_TAX = new global::System.Data.DataColumn("SALE_BEFORE_TAX", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALE_BEFORE_TAX);
                this.columnSALE_TAX = new global::System.Data.DataColumn("SALE_TAX", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALE_TAX);
                this.columnCREATE_DTM = new global::System.Data.DataColumn("CREATE_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_DTM);
                this.columnSALE_TOTAL_AMOUNT = new global::System.Data.DataColumn("SALE_TOTAL_AMOUNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALE_TOTAL_AMOUNT);
                this.columnDISCOUNT_BEFORE_TAX = new global::System.Data.DataColumn("DISCOUNT_BEFORE_TAX", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISCOUNT_BEFORE_TAX);
                this.columnINVALID_ID = new global::System.Data.DataColumn("INVALID_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINVALID_ID);
                this.columnSALE_TYPE = new global::System.Data.DataColumn("SALE_TYPE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALE_TYPE);
                this.columnDISCOUNT_TAX = new global::System.Data.DataColumn("DISCOUNT_TAX", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISCOUNT_TAX);
                this.columnSTORE_NO = new global::System.Data.DataColumn("STORE_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTORE_NO);
                this.columnDISCOUNT_TOTAL_AMOUNT = new global::System.Data.DataColumn("DISCOUNT_TOTAL_AMOUNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISCOUNT_TOTAL_AMOUNT);
                this.columnHG_CARD_NO = new global::System.Data.DataColumn("HG_CARD_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHG_CARD_NO);
                this.columnHG_AWARD_POINT = new global::System.Data.DataColumn("HG_AWARD_POINT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHG_AWARD_POINT);
                this.columnHG_REMAIN_POINT = new global::System.Data.DataColumn("HG_REMAIN_POINT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHG_REMAIN_POINT);
                this.columnORIGINAL_ID = new global::System.Data.DataColumn("ORIGINAL_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORIGINAL_ID);
                this.columnSALE_PERSON = new global::System.Data.DataColumn("SALE_PERSON", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALE_PERSON);
                this.columnMODI_USER = new global::System.Data.DataColumn("MODI_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODI_USER);
                this.columnMODI_DTM = new global::System.Data.DataColumn("MODI_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODI_DTM);
                this.columnMACHINE_ID = new global::System.Data.DataColumn("MACHINE_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMACHINE_ID);
                this.columnSTORE_NAME = new global::System.Data.DataColumn("STORE_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTORE_NAME);
                this.columnFLG_TOERP = new global::System.Data.DataColumn("FLG_TOERP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLG_TOERP);
                this.columnDTM_TOERP = new global::System.Data.DataColumn("DTM_TOERP", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDTM_TOERP);
                this.columnINVALID_REASON = new global::System.Data.DataColumn("INVALID_REASON", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINVALID_REASON);
                this.columnHG_PRODNO = new global::System.Data.DataColumn("HG_PRODNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHG_PRODNO);
                this.columnINVALID_DATE = new global::System.Data.DataColumn("INVALID_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINVALID_DATE);
                this.columnINVALID_NO = new global::System.Data.DataColumn("INVALID_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINVALID_NO);
                this.columnINVALID_REMARK = new global::System.Data.DataColumn("INVALID_REMARK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINVALID_REMARK);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPOSUUID_MASTER}, true));
                this.columnPOSUUID_MASTER.AllowDBNull = false;
                this.columnPOSUUID_MASTER.Unique = true;
                this.columnPOSUUID_MASTER.MaxLength = 32;
                this.columnSALE_NO.MaxLength = 20;
                this.columnUNI_TITLE.MaxLength = 50;
                this.columnUNI_NO.MaxLength = 10;
                this.columnREMARK.MaxLength = 150;
                this.columnSALE_STATUS.MaxLength = 1;
                this.columnCREATE_USER.MaxLength = 20;
                this.columnINVALID_ID.MaxLength = 32;
                this.columnSTORE_NO.MaxLength = 20;
                this.columnHG_CARD_NO.MaxLength = 20;
                this.columnHG_REMAIN_POINT.MaxLength = 50;
                this.columnORIGINAL_ID.MaxLength = 50;
                this.columnSALE_PERSON.MaxLength = 20;
                this.columnMODI_USER.MaxLength = 50;
                this.columnMACHINE_ID.MaxLength = 50;
                this.columnSTORE_NAME.MaxLength = 50;
                this.columnFLG_TOERP.MaxLength = 50;
                this.columnINVALID_REASON.MaxLength = 50;
                this.columnHG_PRODNO.MaxLength = 20;
                this.columnINVALID_NO.MaxLength = 20;
                this.columnINVALID_REMARK.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SALE_HEADRow NewSALE_HEADRow() {
                return ((SALE_HEADRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SALE_HEADRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SALE_HEADRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SALE_HEADRowChanged != null)) {
                    this.SALE_HEADRowChanged(this, new SALE_HEADRowChangeEvent(((SALE_HEADRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SALE_HEADRowChanging != null)) {
                    this.SALE_HEADRowChanging(this, new SALE_HEADRowChangeEvent(((SALE_HEADRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SALE_HEADRowDeleted != null)) {
                    this.SALE_HEADRowDeleted(this, new SALE_HEADRowChangeEvent(((SALE_HEADRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SALE_HEADRowDeleting != null)) {
                    this.SALE_HEADRowDeleting(this, new SALE_HEADRowChangeEvent(((SALE_HEADRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSALE_HEADRow(SALE_HEADRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ERP_PRODUCTPRICE_HANDOVER_DTO ds = new ERP_PRODUCTPRICE_HANDOVER_DTO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SALE_HEADDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SALE_DETAILDataTable : global::System.Data.TypedTableBase<SALE_DETAILRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnITEM_TYPE;
            
            private global::System.Data.DataColumn columnPRODNO;
            
            private global::System.Data.DataColumn columnPROMOTION_CODE;
            
            private global::System.Data.DataColumn columnCREATE_DTM;
            
            private global::System.Data.DataColumn columnSOURCE_TYPE;
            
            private global::System.Data.DataColumn columnSOURCE_REFERENCE_KEY;
            
            private global::System.Data.DataColumn columnPOSUUID_MASTER;
            
            private global::System.Data.DataColumn columnSEQNO;
            
            private global::System.Data.DataColumn columnUNIT_PRICE;
            
            private global::System.Data.DataColumn columnMODI_USER;
            
            private global::System.Data.DataColumn columnTAXABLE;
            
            private global::System.Data.DataColumn columnMODI_DTM;
            
            private global::System.Data.DataColumn columnTAXRATE;
            
            private global::System.Data.DataColumn columnCREATE_USER;
            
            private global::System.Data.DataColumn columnPOSUUID_DETAIL;
            
            private global::System.Data.DataColumn columnTOTAL_AMOUNT;
            
            private global::System.Data.DataColumn columnHG_CARD_NO;
            
            private global::System.Data.DataColumn columnHG_REDEEM_POINT;
            
            private global::System.Data.DataColumn columnHG_RULE;
            
            private global::System.Data.DataColumn columnSH_DISCOUNT_RATE;
            
            private global::System.Data.DataColumn columnSH_DISCOUNT_REASON;
            
            private global::System.Data.DataColumn columnWRITE_OFF_FILE;
            
            private global::System.Data.DataColumn columnHG_LEVEL_PRICE;
            
            private global::System.Data.DataColumn columnWRITE_OFF_DATE;
            
            private global::System.Data.DataColumn columnSH_DISCOUNT_DESC;
            
            private global::System.Data.DataColumn columnBATCH_NO;
            
            private global::System.Data.DataColumn columnAPPLY_DATE;
            
            private global::System.Data.DataColumn columnSERVICE_SYS_ID;
            
            private global::System.Data.DataColumn columnBUNDLE_ID;
            
            private global::System.Data.DataColumn columnHRS_NO;
            
            private global::System.Data.DataColumn columnLEASE_NO;
            
            private global::System.Data.DataColumn columnORDER_NO;
            
            private global::System.Data.DataColumn columnETC_NO;
            
            private global::System.Data.DataColumn columnFUN_ID;
            
            private global::System.Data.DataColumn columnR_RATE;
            
            private global::System.Data.DataColumn columnDATA;
            
            private global::System.Data.DataColumn columnVOICE;
            
            private global::System.Data.DataColumn columnTRANS_TYPE;
            
            private global::System.Data.DataColumn columnAPPROVE_STATUS;
            
            private global::System.Data.DataColumn columnCONN_FLAG;
            
            private global::System.Data.DataColumn columnQUERY_TABLE_NAME;
            
            private global::System.Data.DataColumn columnBUNDLE_TYPE;
            
            private global::System.Data.DataColumn columnBARCODE1;
            
            private global::System.Data.DataColumn columnBARCODE2;
            
            private global::System.Data.DataColumn columnBARCODE3;
            
            private global::System.Data.DataColumn columnSIM_CARD_NO;
            
            private global::System.Data.DataColumn columnMSISDN;
            
            private global::System.Data.DataColumn columnDISCOUNT_B_DATE;
            
            private global::System.Data.DataColumn columnDISCOUNT_E_DATE;
            
            private global::System.Data.DataColumn columnQUANTITY;
            
            private global::System.Data.DataColumn columnBEFORE_TAX;
            
            private global::System.Data.DataColumn columnTAX;
            
            private global::System.Data.DataColumn columnMSISDN_TYPE;
            
            private global::System.Data.DataColumn columnAPPROVAL_DATE;
            
            private global::System.Data.DataColumn columnMNP;
            
            private global::System.Data.DataColumn columnBILLING_ACCOUNT_ID;
            
            private global::System.Data.DataColumn columnSUBSCRIBE_NO;
            
            private global::System.Data.DataColumn columnGROUP_ID;
            
            private global::System.Data.DataColumn columnMM_PLU_AMOUNT;
            
            private global::System.Data.DataColumn columnMM_PLU_PRICE;
            
            private global::System.Data.DataColumn columnMM_PLU_TRANS_VALUE;
            
            private global::System.Data.DataColumn columnMM_PLU_DEVICE_SUBSIDY;
            
            private global::System.Data.DataColumn columnMM_PLU_BASE_SUBSIDY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SALE_DETAILDataTable() {
                this.TableName = "SALE_DETAIL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SALE_DETAILDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SALE_DETAILDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ITEM_TYPEColumn {
                get {
                    return this.columnITEM_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODNOColumn {
                get {
                    return this.columnPRODNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PROMOTION_CODEColumn {
                get {
                    return this.columnPROMOTION_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_DTMColumn {
                get {
                    return this.columnCREATE_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SOURCE_TYPEColumn {
                get {
                    return this.columnSOURCE_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SOURCE_REFERENCE_KEYColumn {
                get {
                    return this.columnSOURCE_REFERENCE_KEY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn POSUUID_MASTERColumn {
                get {
                    return this.columnPOSUUID_MASTER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEQNOColumn {
                get {
                    return this.columnSEQNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UNIT_PRICEColumn {
                get {
                    return this.columnUNIT_PRICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODI_USERColumn {
                get {
                    return this.columnMODI_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TAXABLEColumn {
                get {
                    return this.columnTAXABLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODI_DTMColumn {
                get {
                    return this.columnMODI_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TAXRATEColumn {
                get {
                    return this.columnTAXRATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_USERColumn {
                get {
                    return this.columnCREATE_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn POSUUID_DETAILColumn {
                get {
                    return this.columnPOSUUID_DETAIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TOTAL_AMOUNTColumn {
                get {
                    return this.columnTOTAL_AMOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HG_CARD_NOColumn {
                get {
                    return this.columnHG_CARD_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HG_REDEEM_POINTColumn {
                get {
                    return this.columnHG_REDEEM_POINT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HG_RULEColumn {
                get {
                    return this.columnHG_RULE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SH_DISCOUNT_RATEColumn {
                get {
                    return this.columnSH_DISCOUNT_RATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SH_DISCOUNT_REASONColumn {
                get {
                    return this.columnSH_DISCOUNT_REASON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WRITE_OFF_FILEColumn {
                get {
                    return this.columnWRITE_OFF_FILE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HG_LEVEL_PRICEColumn {
                get {
                    return this.columnHG_LEVEL_PRICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WRITE_OFF_DATEColumn {
                get {
                    return this.columnWRITE_OFF_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SH_DISCOUNT_DESCColumn {
                get {
                    return this.columnSH_DISCOUNT_DESC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BATCH_NOColumn {
                get {
                    return this.columnBATCH_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn APPLY_DATEColumn {
                get {
                    return this.columnAPPLY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SERVICE_SYS_IDColumn {
                get {
                    return this.columnSERVICE_SYS_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BUNDLE_IDColumn {
                get {
                    return this.columnBUNDLE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HRS_NOColumn {
                get {
                    return this.columnHRS_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LEASE_NOColumn {
                get {
                    return this.columnLEASE_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ORDER_NOColumn {
                get {
                    return this.columnORDER_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ETC_NOColumn {
                get {
                    return this.columnETC_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FUN_IDColumn {
                get {
                    return this.columnFUN_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn R_RATEColumn {
                get {
                    return this.columnR_RATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DATAColumn {
                get {
                    return this.columnDATA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VOICEColumn {
                get {
                    return this.columnVOICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRANS_TYPEColumn {
                get {
                    return this.columnTRANS_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn APPROVE_STATUSColumn {
                get {
                    return this.columnAPPROVE_STATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CONN_FLAGColumn {
                get {
                    return this.columnCONN_FLAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QUERY_TABLE_NAMEColumn {
                get {
                    return this.columnQUERY_TABLE_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BUNDLE_TYPEColumn {
                get {
                    return this.columnBUNDLE_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BARCODE1Column {
                get {
                    return this.columnBARCODE1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BARCODE2Column {
                get {
                    return this.columnBARCODE2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BARCODE3Column {
                get {
                    return this.columnBARCODE3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SIM_CARD_NOColumn {
                get {
                    return this.columnSIM_CARD_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MSISDNColumn {
                get {
                    return this.columnMSISDN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DISCOUNT_B_DATEColumn {
                get {
                    return this.columnDISCOUNT_B_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DISCOUNT_E_DATEColumn {
                get {
                    return this.columnDISCOUNT_E_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QUANTITYColumn {
                get {
                    return this.columnQUANTITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BEFORE_TAXColumn {
                get {
                    return this.columnBEFORE_TAX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TAXColumn {
                get {
                    return this.columnTAX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MSISDN_TYPEColumn {
                get {
                    return this.columnMSISDN_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn APPROVAL_DATEColumn {
                get {
                    return this.columnAPPROVAL_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MNPColumn {
                get {
                    return this.columnMNP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BILLING_ACCOUNT_IDColumn {
                get {
                    return this.columnBILLING_ACCOUNT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SUBSCRIBE_NOColumn {
                get {
                    return this.columnSUBSCRIBE_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GROUP_IDColumn {
                get {
                    return this.columnGROUP_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MM_PLU_AMOUNTColumn {
                get {
                    return this.columnMM_PLU_AMOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MM_PLU_PRICEColumn {
                get {
                    return this.columnMM_PLU_PRICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MM_PLU_TRANS_VALUEColumn {
                get {
                    return this.columnMM_PLU_TRANS_VALUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MM_PLU_DEVICE_SUBSIDYColumn {
                get {
                    return this.columnMM_PLU_DEVICE_SUBSIDY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MM_PLU_BASE_SUBSIDYColumn {
                get {
                    return this.columnMM_PLU_BASE_SUBSIDY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SALE_DETAILRow this[int index] {
                get {
                    return ((SALE_DETAILRow)(this.Rows[index]));
                }
            }
            
            public event SALE_DETAILRowChangeEventHandler SALE_DETAILRowChanging;
            
            public event SALE_DETAILRowChangeEventHandler SALE_DETAILRowChanged;
            
            public event SALE_DETAILRowChangeEventHandler SALE_DETAILRowDeleting;
            
            public event SALE_DETAILRowChangeEventHandler SALE_DETAILRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSALE_DETAILRow(SALE_DETAILRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SALE_DETAILRow AddSALE_DETAILRow(
                        string ID, 
                        decimal ITEM_TYPE, 
                        string PRODNO, 
                        string PROMOTION_CODE, 
                        System.DateTime CREATE_DTM, 
                        decimal SOURCE_TYPE, 
                        string SOURCE_REFERENCE_KEY, 
                        string POSUUID_MASTER, 
                        decimal SEQNO, 
                        decimal UNIT_PRICE, 
                        string MODI_USER, 
                        string TAXABLE, 
                        System.DateTime MODI_DTM, 
                        decimal TAXRATE, 
                        string CREATE_USER, 
                        string POSUUID_DETAIL, 
                        decimal TOTAL_AMOUNT, 
                        string HG_CARD_NO, 
                        decimal HG_REDEEM_POINT, 
                        string HG_RULE, 
                        decimal SH_DISCOUNT_RATE, 
                        string SH_DISCOUNT_REASON, 
                        string WRITE_OFF_FILE, 
                        decimal HG_LEVEL_PRICE, 
                        System.DateTime WRITE_OFF_DATE, 
                        string SH_DISCOUNT_DESC, 
                        string BATCH_NO, 
                        System.DateTime APPLY_DATE, 
                        string SERVICE_SYS_ID, 
                        string BUNDLE_ID, 
                        string HRS_NO, 
                        string LEASE_NO, 
                        string ORDER_NO, 
                        string ETC_NO, 
                        string FUN_ID, 
                        decimal R_RATE, 
                        string DATA, 
                        string VOICE, 
                        string TRANS_TYPE, 
                        string APPROVE_STATUS, 
                        string CONN_FLAG, 
                        string QUERY_TABLE_NAME, 
                        string BUNDLE_TYPE, 
                        string BARCODE1, 
                        string BARCODE2, 
                        string BARCODE3, 
                        string SIM_CARD_NO, 
                        string MSISDN, 
                        System.DateTime DISCOUNT_B_DATE, 
                        System.DateTime DISCOUNT_E_DATE, 
                        decimal QUANTITY, 
                        decimal BEFORE_TAX, 
                        decimal TAX, 
                        string MSISDN_TYPE, 
                        System.DateTime APPROVAL_DATE, 
                        string MNP, 
                        string BILLING_ACCOUNT_ID, 
                        string SUBSCRIBE_NO, 
                        string GROUP_ID, 
                        decimal MM_PLU_AMOUNT, 
                        decimal MM_PLU_PRICE, 
                        decimal MM_PLU_TRANS_VALUE, 
                        decimal MM_PLU_DEVICE_SUBSIDY, 
                        decimal MM_PLU_BASE_SUBSIDY) {
                SALE_DETAILRow rowSALE_DETAILRow = ((SALE_DETAILRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        ITEM_TYPE,
                        PRODNO,
                        PROMOTION_CODE,
                        CREATE_DTM,
                        SOURCE_TYPE,
                        SOURCE_REFERENCE_KEY,
                        POSUUID_MASTER,
                        SEQNO,
                        UNIT_PRICE,
                        MODI_USER,
                        TAXABLE,
                        MODI_DTM,
                        TAXRATE,
                        CREATE_USER,
                        POSUUID_DETAIL,
                        TOTAL_AMOUNT,
                        HG_CARD_NO,
                        HG_REDEEM_POINT,
                        HG_RULE,
                        SH_DISCOUNT_RATE,
                        SH_DISCOUNT_REASON,
                        WRITE_OFF_FILE,
                        HG_LEVEL_PRICE,
                        WRITE_OFF_DATE,
                        SH_DISCOUNT_DESC,
                        BATCH_NO,
                        APPLY_DATE,
                        SERVICE_SYS_ID,
                        BUNDLE_ID,
                        HRS_NO,
                        LEASE_NO,
                        ORDER_NO,
                        ETC_NO,
                        FUN_ID,
                        R_RATE,
                        DATA,
                        VOICE,
                        TRANS_TYPE,
                        APPROVE_STATUS,
                        CONN_FLAG,
                        QUERY_TABLE_NAME,
                        BUNDLE_TYPE,
                        BARCODE1,
                        BARCODE2,
                        BARCODE3,
                        SIM_CARD_NO,
                        MSISDN,
                        DISCOUNT_B_DATE,
                        DISCOUNT_E_DATE,
                        QUANTITY,
                        BEFORE_TAX,
                        TAX,
                        MSISDN_TYPE,
                        APPROVAL_DATE,
                        MNP,
                        BILLING_ACCOUNT_ID,
                        SUBSCRIBE_NO,
                        GROUP_ID,
                        MM_PLU_AMOUNT,
                        MM_PLU_PRICE,
                        MM_PLU_TRANS_VALUE,
                        MM_PLU_DEVICE_SUBSIDY,
                        MM_PLU_BASE_SUBSIDY};
                rowSALE_DETAILRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSALE_DETAILRow);
                return rowSALE_DETAILRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SALE_DETAILRow FindByID(string ID) {
                return ((SALE_DETAILRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SALE_DETAILDataTable cln = ((SALE_DETAILDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SALE_DETAILDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnITEM_TYPE = base.Columns["ITEM_TYPE"];
                this.columnPRODNO = base.Columns["PRODNO"];
                this.columnPROMOTION_CODE = base.Columns["PROMOTION_CODE"];
                this.columnCREATE_DTM = base.Columns["CREATE_DTM"];
                this.columnSOURCE_TYPE = base.Columns["SOURCE_TYPE"];
                this.columnSOURCE_REFERENCE_KEY = base.Columns["SOURCE_REFERENCE_KEY"];
                this.columnPOSUUID_MASTER = base.Columns["POSUUID_MASTER"];
                this.columnSEQNO = base.Columns["SEQNO"];
                this.columnUNIT_PRICE = base.Columns["UNIT_PRICE"];
                this.columnMODI_USER = base.Columns["MODI_USER"];
                this.columnTAXABLE = base.Columns["TAXABLE"];
                this.columnMODI_DTM = base.Columns["MODI_DTM"];
                this.columnTAXRATE = base.Columns["TAXRATE"];
                this.columnCREATE_USER = base.Columns["CREATE_USER"];
                this.columnPOSUUID_DETAIL = base.Columns["POSUUID_DETAIL"];
                this.columnTOTAL_AMOUNT = base.Columns["TOTAL_AMOUNT"];
                this.columnHG_CARD_NO = base.Columns["HG_CARD_NO"];
                this.columnHG_REDEEM_POINT = base.Columns["HG_REDEEM_POINT"];
                this.columnHG_RULE = base.Columns["HG_RULE"];
                this.columnSH_DISCOUNT_RATE = base.Columns["SH_DISCOUNT_RATE"];
                this.columnSH_DISCOUNT_REASON = base.Columns["SH_DISCOUNT_REASON"];
                this.columnWRITE_OFF_FILE = base.Columns["WRITE_OFF_FILE"];
                this.columnHG_LEVEL_PRICE = base.Columns["HG_LEVEL_PRICE"];
                this.columnWRITE_OFF_DATE = base.Columns["WRITE_OFF_DATE"];
                this.columnSH_DISCOUNT_DESC = base.Columns["SH_DISCOUNT_DESC"];
                this.columnBATCH_NO = base.Columns["BATCH_NO"];
                this.columnAPPLY_DATE = base.Columns["APPLY_DATE"];
                this.columnSERVICE_SYS_ID = base.Columns["SERVICE_SYS_ID"];
                this.columnBUNDLE_ID = base.Columns["BUNDLE_ID"];
                this.columnHRS_NO = base.Columns["HRS_NO"];
                this.columnLEASE_NO = base.Columns["LEASE_NO"];
                this.columnORDER_NO = base.Columns["ORDER_NO"];
                this.columnETC_NO = base.Columns["ETC_NO"];
                this.columnFUN_ID = base.Columns["FUN_ID"];
                this.columnR_RATE = base.Columns["R_RATE"];
                this.columnDATA = base.Columns["DATA"];
                this.columnVOICE = base.Columns["VOICE"];
                this.columnTRANS_TYPE = base.Columns["TRANS_TYPE"];
                this.columnAPPROVE_STATUS = base.Columns["APPROVE_STATUS"];
                this.columnCONN_FLAG = base.Columns["CONN_FLAG"];
                this.columnQUERY_TABLE_NAME = base.Columns["QUERY_TABLE_NAME"];
                this.columnBUNDLE_TYPE = base.Columns["BUNDLE_TYPE"];
                this.columnBARCODE1 = base.Columns["BARCODE1"];
                this.columnBARCODE2 = base.Columns["BARCODE2"];
                this.columnBARCODE3 = base.Columns["BARCODE3"];
                this.columnSIM_CARD_NO = base.Columns["SIM_CARD_NO"];
                this.columnMSISDN = base.Columns["MSISDN"];
                this.columnDISCOUNT_B_DATE = base.Columns["DISCOUNT_B_DATE"];
                this.columnDISCOUNT_E_DATE = base.Columns["DISCOUNT_E_DATE"];
                this.columnQUANTITY = base.Columns["QUANTITY"];
                this.columnBEFORE_TAX = base.Columns["BEFORE_TAX"];
                this.columnTAX = base.Columns["TAX"];
                this.columnMSISDN_TYPE = base.Columns["MSISDN_TYPE"];
                this.columnAPPROVAL_DATE = base.Columns["APPROVAL_DATE"];
                this.columnMNP = base.Columns["MNP"];
                this.columnBILLING_ACCOUNT_ID = base.Columns["BILLING_ACCOUNT_ID"];
                this.columnSUBSCRIBE_NO = base.Columns["SUBSCRIBE_NO"];
                this.columnGROUP_ID = base.Columns["GROUP_ID"];
                this.columnMM_PLU_AMOUNT = base.Columns["MM_PLU_AMOUNT"];
                this.columnMM_PLU_PRICE = base.Columns["MM_PLU_PRICE"];
                this.columnMM_PLU_TRANS_VALUE = base.Columns["MM_PLU_TRANS_VALUE"];
                this.columnMM_PLU_DEVICE_SUBSIDY = base.Columns["MM_PLU_DEVICE_SUBSIDY"];
                this.columnMM_PLU_BASE_SUBSIDY = base.Columns["MM_PLU_BASE_SUBSIDY"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnITEM_TYPE = new global::System.Data.DataColumn("ITEM_TYPE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEM_TYPE);
                this.columnPRODNO = new global::System.Data.DataColumn("PRODNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODNO);
                this.columnPROMOTION_CODE = new global::System.Data.DataColumn("PROMOTION_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROMOTION_CODE);
                this.columnCREATE_DTM = new global::System.Data.DataColumn("CREATE_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_DTM);
                this.columnSOURCE_TYPE = new global::System.Data.DataColumn("SOURCE_TYPE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOURCE_TYPE);
                this.columnSOURCE_REFERENCE_KEY = new global::System.Data.DataColumn("SOURCE_REFERENCE_KEY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOURCE_REFERENCE_KEY);
                this.columnPOSUUID_MASTER = new global::System.Data.DataColumn("POSUUID_MASTER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOSUUID_MASTER);
                this.columnSEQNO = new global::System.Data.DataColumn("SEQNO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEQNO);
                this.columnUNIT_PRICE = new global::System.Data.DataColumn("UNIT_PRICE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUNIT_PRICE);
                this.columnMODI_USER = new global::System.Data.DataColumn("MODI_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODI_USER);
                this.columnTAXABLE = new global::System.Data.DataColumn("TAXABLE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAXABLE);
                this.columnMODI_DTM = new global::System.Data.DataColumn("MODI_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODI_DTM);
                this.columnTAXRATE = new global::System.Data.DataColumn("TAXRATE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAXRATE);
                this.columnCREATE_USER = new global::System.Data.DataColumn("CREATE_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_USER);
                this.columnPOSUUID_DETAIL = new global::System.Data.DataColumn("POSUUID_DETAIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOSUUID_DETAIL);
                this.columnTOTAL_AMOUNT = new global::System.Data.DataColumn("TOTAL_AMOUNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTAL_AMOUNT);
                this.columnHG_CARD_NO = new global::System.Data.DataColumn("HG_CARD_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHG_CARD_NO);
                this.columnHG_REDEEM_POINT = new global::System.Data.DataColumn("HG_REDEEM_POINT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHG_REDEEM_POINT);
                this.columnHG_RULE = new global::System.Data.DataColumn("HG_RULE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHG_RULE);
                this.columnSH_DISCOUNT_RATE = new global::System.Data.DataColumn("SH_DISCOUNT_RATE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSH_DISCOUNT_RATE);
                this.columnSH_DISCOUNT_REASON = new global::System.Data.DataColumn("SH_DISCOUNT_REASON", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSH_DISCOUNT_REASON);
                this.columnWRITE_OFF_FILE = new global::System.Data.DataColumn("WRITE_OFF_FILE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWRITE_OFF_FILE);
                this.columnHG_LEVEL_PRICE = new global::System.Data.DataColumn("HG_LEVEL_PRICE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHG_LEVEL_PRICE);
                this.columnWRITE_OFF_DATE = new global::System.Data.DataColumn("WRITE_OFF_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWRITE_OFF_DATE);
                this.columnSH_DISCOUNT_DESC = new global::System.Data.DataColumn("SH_DISCOUNT_DESC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSH_DISCOUNT_DESC);
                this.columnBATCH_NO = new global::System.Data.DataColumn("BATCH_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBATCH_NO);
                this.columnAPPLY_DATE = new global::System.Data.DataColumn("APPLY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPPLY_DATE);
                this.columnSERVICE_SYS_ID = new global::System.Data.DataColumn("SERVICE_SYS_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSERVICE_SYS_ID);
                this.columnBUNDLE_ID = new global::System.Data.DataColumn("BUNDLE_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBUNDLE_ID);
                this.columnHRS_NO = new global::System.Data.DataColumn("HRS_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHRS_NO);
                this.columnLEASE_NO = new global::System.Data.DataColumn("LEASE_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLEASE_NO);
                this.columnORDER_NO = new global::System.Data.DataColumn("ORDER_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDER_NO);
                this.columnETC_NO = new global::System.Data.DataColumn("ETC_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnETC_NO);
                this.columnFUN_ID = new global::System.Data.DataColumn("FUN_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFUN_ID);
                this.columnR_RATE = new global::System.Data.DataColumn("R_RATE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnR_RATE);
                this.columnDATA = new global::System.Data.DataColumn("DATA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATA);
                this.columnVOICE = new global::System.Data.DataColumn("VOICE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVOICE);
                this.columnTRANS_TYPE = new global::System.Data.DataColumn("TRANS_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANS_TYPE);
                this.columnAPPROVE_STATUS = new global::System.Data.DataColumn("APPROVE_STATUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPPROVE_STATUS);
                this.columnCONN_FLAG = new global::System.Data.DataColumn("CONN_FLAG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONN_FLAG);
                this.columnQUERY_TABLE_NAME = new global::System.Data.DataColumn("QUERY_TABLE_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQUERY_TABLE_NAME);
                this.columnBUNDLE_TYPE = new global::System.Data.DataColumn("BUNDLE_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBUNDLE_TYPE);
                this.columnBARCODE1 = new global::System.Data.DataColumn("BARCODE1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBARCODE1);
                this.columnBARCODE2 = new global::System.Data.DataColumn("BARCODE2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBARCODE2);
                this.columnBARCODE3 = new global::System.Data.DataColumn("BARCODE3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBARCODE3);
                this.columnSIM_CARD_NO = new global::System.Data.DataColumn("SIM_CARD_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSIM_CARD_NO);
                this.columnMSISDN = new global::System.Data.DataColumn("MSISDN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMSISDN);
                this.columnDISCOUNT_B_DATE = new global::System.Data.DataColumn("DISCOUNT_B_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISCOUNT_B_DATE);
                this.columnDISCOUNT_E_DATE = new global::System.Data.DataColumn("DISCOUNT_E_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISCOUNT_E_DATE);
                this.columnQUANTITY = new global::System.Data.DataColumn("QUANTITY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQUANTITY);
                this.columnBEFORE_TAX = new global::System.Data.DataColumn("BEFORE_TAX", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBEFORE_TAX);
                this.columnTAX = new global::System.Data.DataColumn("TAX", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAX);
                this.columnMSISDN_TYPE = new global::System.Data.DataColumn("MSISDN_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMSISDN_TYPE);
                this.columnAPPROVAL_DATE = new global::System.Data.DataColumn("APPROVAL_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPPROVAL_DATE);
                this.columnMNP = new global::System.Data.DataColumn("MNP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMNP);
                this.columnBILLING_ACCOUNT_ID = new global::System.Data.DataColumn("BILLING_ACCOUNT_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBILLING_ACCOUNT_ID);
                this.columnSUBSCRIBE_NO = new global::System.Data.DataColumn("SUBSCRIBE_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUBSCRIBE_NO);
                this.columnGROUP_ID = new global::System.Data.DataColumn("GROUP_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGROUP_ID);
                this.columnMM_PLU_AMOUNT = new global::System.Data.DataColumn("MM_PLU_AMOUNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMM_PLU_AMOUNT);
                this.columnMM_PLU_PRICE = new global::System.Data.DataColumn("MM_PLU_PRICE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMM_PLU_PRICE);
                this.columnMM_PLU_TRANS_VALUE = new global::System.Data.DataColumn("MM_PLU_TRANS_VALUE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMM_PLU_TRANS_VALUE);
                this.columnMM_PLU_DEVICE_SUBSIDY = new global::System.Data.DataColumn("MM_PLU_DEVICE_SUBSIDY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMM_PLU_DEVICE_SUBSIDY);
                this.columnMM_PLU_BASE_SUBSIDY = new global::System.Data.DataColumn("MM_PLU_BASE_SUBSIDY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMM_PLU_BASE_SUBSIDY);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnID.MaxLength = 32;
                this.columnPRODNO.MaxLength = 20;
                this.columnPROMOTION_CODE.MaxLength = 32;
                this.columnSOURCE_REFERENCE_KEY.MaxLength = 50;
                this.columnPOSUUID_MASTER.MaxLength = 32;
                this.columnSEQNO.AllowDBNull = false;
                this.columnMODI_USER.MaxLength = 50;
                this.columnTAXABLE.MaxLength = 1;
                this.columnCREATE_USER.MaxLength = 50;
                this.columnPOSUUID_DETAIL.MaxLength = 50;
                this.columnHG_CARD_NO.MaxLength = 50;
                this.columnHG_RULE.MaxLength = 50;
                this.columnSH_DISCOUNT_REASON.MaxLength = 32;
                this.columnWRITE_OFF_FILE.MaxLength = 50;
                this.columnSH_DISCOUNT_DESC.MaxLength = 150;
                this.columnBATCH_NO.MaxLength = 50;
                this.columnSERVICE_SYS_ID.MaxLength = 50;
                this.columnBUNDLE_ID.MaxLength = 50;
                this.columnHRS_NO.MaxLength = 50;
                this.columnLEASE_NO.MaxLength = 50;
                this.columnORDER_NO.MaxLength = 50;
                this.columnETC_NO.MaxLength = 50;
                this.columnFUN_ID.MaxLength = 20;
                this.columnDATA.MaxLength = 1;
                this.columnVOICE.MaxLength = 50;
                this.columnTRANS_TYPE.MaxLength = 50;
                this.columnAPPROVE_STATUS.MaxLength = 15;
                this.columnCONN_FLAG.MaxLength = 50;
                this.columnQUERY_TABLE_NAME.MaxLength = 50;
                this.columnBUNDLE_TYPE.MaxLength = 50;
                this.columnBARCODE1.MaxLength = 50;
                this.columnBARCODE2.MaxLength = 50;
                this.columnBARCODE3.MaxLength = 50;
                this.columnSIM_CARD_NO.MaxLength = 20;
                this.columnMSISDN.MaxLength = 10;
                this.columnMSISDN_TYPE.MaxLength = 1;
                this.columnMNP.MaxLength = 1;
                this.columnBILLING_ACCOUNT_ID.MaxLength = 50;
                this.columnSUBSCRIBE_NO.MaxLength = 50;
                this.columnGROUP_ID.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SALE_DETAILRow NewSALE_DETAILRow() {
                return ((SALE_DETAILRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SALE_DETAILRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SALE_DETAILRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SALE_DETAILRowChanged != null)) {
                    this.SALE_DETAILRowChanged(this, new SALE_DETAILRowChangeEvent(((SALE_DETAILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SALE_DETAILRowChanging != null)) {
                    this.SALE_DETAILRowChanging(this, new SALE_DETAILRowChangeEvent(((SALE_DETAILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SALE_DETAILRowDeleted != null)) {
                    this.SALE_DETAILRowDeleted(this, new SALE_DETAILRowChangeEvent(((SALE_DETAILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SALE_DETAILRowDeleting != null)) {
                    this.SALE_DETAILRowDeleting(this, new SALE_DETAILRowChangeEvent(((SALE_DETAILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSALE_DETAILRow(SALE_DETAILRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ERP_PRODUCTPRICE_HANDOVER_DTO ds = new ERP_PRODUCTPRICE_HANDOVER_DTO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SALE_DETAILDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ERP_SALESRow : global::System.Data.DataRow {
            
            private ERP_SALESDataTable tableERP_SALES;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ERP_SALESRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableERP_SALES = ((ERP_SALESDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MYNO {
                get {
                    return ((string)(this[this.tableERP_SALES.MYNOColumn]));
                }
                set {
                    this[this.tableERP_SALES.MYNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMPANYCODE {
                get {
                    return ((string)(this[this.tableERP_SALES.COMPANYCODEColumn]));
                }
                set {
                    this[this.tableERP_SALES.COMPANYCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TXTYPE {
                get {
                    try {
                        return ((string)(this[this.tableERP_SALES.TXTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ERP_SALES\' 中資料行 \'TXTYPE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableERP_SALES.TXTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STORENO {
                get {
                    try {
                        return ((string)(this[this.tableERP_SALES.STORENOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ERP_SALES\' 中資料行 \'STORENO\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableERP_SALES.STORENOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TRANDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableERP_SALES.TRANDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ERP_SALES\' 中資料行 \'TRANDATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableERP_SALES.TRANDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ITEMCODE {
                get {
                    try {
                        return ((string)(this[this.tableERP_SALES.ITEMCODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ERP_SALES\' 中資料行 \'ITEMCODE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableERP_SALES.ITEMCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal QTY {
                get {
                    try {
                        return ((decimal)(this[this.tableERP_SALES.QTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ERP_SALES\' 中資料行 \'QTY\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableERP_SALES.QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DWNFLAG {
                get {
                    try {
                        return ((string)(this[this.tableERP_SALES.DWNFLAGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ERP_SALES\' 中資料行 \'DWNFLAG\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableERP_SALES.DWNFLAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DWNDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableERP_SALES.DWNDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ERP_SALES\' 中資料行 \'DWNDATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableERP_SALES.DWNDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTXTYPENull() {
                return this.IsNull(this.tableERP_SALES.TXTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTXTYPENull() {
                this[this.tableERP_SALES.TXTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTORENONull() {
                return this.IsNull(this.tableERP_SALES.STORENOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTORENONull() {
                this[this.tableERP_SALES.STORENOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRANDATENull() {
                return this.IsNull(this.tableERP_SALES.TRANDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRANDATENull() {
                this[this.tableERP_SALES.TRANDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsITEMCODENull() {
                return this.IsNull(this.tableERP_SALES.ITEMCODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetITEMCODENull() {
                this[this.tableERP_SALES.ITEMCODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQTYNull() {
                return this.IsNull(this.tableERP_SALES.QTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQTYNull() {
                this[this.tableERP_SALES.QTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDWNFLAGNull() {
                return this.IsNull(this.tableERP_SALES.DWNFLAGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDWNFLAGNull() {
                this[this.tableERP_SALES.DWNFLAGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDWNDATENull() {
                return this.IsNull(this.tableERP_SALES.DWNDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDWNDATENull() {
                this[this.tableERP_SALES.DWNDATEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SALE_HEADRow : global::System.Data.DataRow {
            
            private SALE_HEADDataTable tableSALE_HEAD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SALE_HEADRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSALE_HEAD = ((SALE_HEADDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string POSUUID_MASTER {
                get {
                    return ((string)(this[this.tableSALE_HEAD.POSUUID_MASTERColumn]));
                }
                set {
                    this[this.tableSALE_HEAD.POSUUID_MASTERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SALE_NO {
                get {
                    try {
                        return ((string)(this[this.tableSALE_HEAD.SALE_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_HEAD\' 中資料行 \'SALE_NO\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_HEAD.SALE_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TRADE_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSALE_HEAD.TRADE_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_HEAD\' 中資料行 \'TRADE_DATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_HEAD.TRADE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UNI_TITLE {
                get {
                    try {
                        return ((string)(this[this.tableSALE_HEAD.UNI_TITLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_HEAD\' 中資料行 \'UNI_TITLE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_HEAD.UNI_TITLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UNI_NO {
                get {
                    try {
                        return ((string)(this[this.tableSALE_HEAD.UNI_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_HEAD\' 中資料行 \'UNI_NO\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_HEAD.UNI_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string REMARK {
                get {
                    try {
                        return ((string)(this[this.tableSALE_HEAD.REMARKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_HEAD\' 中資料行 \'REMARK\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_HEAD.REMARKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SALE_STATUS {
                get {
                    try {
                        return ((string)(this[this.tableSALE_HEAD.SALE_STATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_HEAD\' 中資料行 \'SALE_STATUS\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_HEAD.SALE_STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CREATE_USER {
                get {
                    try {
                        return ((string)(this[this.tableSALE_HEAD.CREATE_USERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_HEAD\' 中資料行 \'CREATE_USER\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_HEAD.CREATE_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SALE_BEFORE_TAX {
                get {
                    try {
                        return ((decimal)(this[this.tableSALE_HEAD.SALE_BEFORE_TAXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_HEAD\' 中資料行 \'SALE_BEFORE_TAX\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_HEAD.SALE_BEFORE_TAXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SALE_TAX {
                get {
                    try {
                        return ((decimal)(this[this.tableSALE_HEAD.SALE_TAXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_HEAD\' 中資料行 \'SALE_TAX\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_HEAD.SALE_TAXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CREATE_DTM {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSALE_HEAD.CREATE_DTMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_HEAD\' 中資料行 \'CREATE_DTM\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_HEAD.CREATE_DTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SALE_TOTAL_AMOUNT {
                get {
                    try {
                        return ((decimal)(this[this.tableSALE_HEAD.SALE_TOTAL_AMOUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_HEAD\' 中資料行 \'SALE_TOTAL_AMOUNT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_HEAD.SALE_TOTAL_AMOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DISCOUNT_BEFORE_TAX {
                get {
                    try {
                        return ((decimal)(this[this.tableSALE_HEAD.DISCOUNT_BEFORE_TAXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_HEAD\' 中資料行 \'DISCOUNT_BEFORE_TAX\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_HEAD.DISCOUNT_BEFORE_TAXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INVALID_ID {
                get {
                    try {
                        return ((string)(this[this.tableSALE_HEAD.INVALID_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_HEAD\' 中資料行 \'INVALID_ID\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_HEAD.INVALID_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SALE_TYPE {
                get {
                    try {
                        return ((decimal)(this[this.tableSALE_HEAD.SALE_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_HEAD\' 中資料行 \'SALE_TYPE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_HEAD.SALE_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DISCOUNT_TAX {
                get {
                    try {
                        return ((decimal)(this[this.tableSALE_HEAD.DISCOUNT_TAXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_HEAD\' 中資料行 \'DISCOUNT_TAX\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_HEAD.DISCOUNT_TAXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STORE_NO {
                get {
                    try {
                        return ((string)(this[this.tableSALE_HEAD.STORE_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_HEAD\' 中資料行 \'STORE_NO\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_HEAD.STORE_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DISCOUNT_TOTAL_AMOUNT {
                get {
                    try {
                        return ((decimal)(this[this.tableSALE_HEAD.DISCOUNT_TOTAL_AMOUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_HEAD\' 中資料行 \'DISCOUNT_TOTAL_AMOUNT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_HEAD.DISCOUNT_TOTAL_AMOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HG_CARD_NO {
                get {
                    try {
                        return ((string)(this[this.tableSALE_HEAD.HG_CARD_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_HEAD\' 中資料行 \'HG_CARD_NO\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_HEAD.HG_CARD_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HG_AWARD_POINT {
                get {
                    try {
                        return ((decimal)(this[this.tableSALE_HEAD.HG_AWARD_POINTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_HEAD\' 中資料行 \'HG_AWARD_POINT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_HEAD.HG_AWARD_POINTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HG_REMAIN_POINT {
                get {
                    try {
                        return ((string)(this[this.tableSALE_HEAD.HG_REMAIN_POINTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_HEAD\' 中資料行 \'HG_REMAIN_POINT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_HEAD.HG_REMAIN_POINTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ORIGINAL_ID {
                get {
                    try {
                        return ((string)(this[this.tableSALE_HEAD.ORIGINAL_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_HEAD\' 中資料行 \'ORIGINAL_ID\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_HEAD.ORIGINAL_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SALE_PERSON {
                get {
                    try {
                        return ((string)(this[this.tableSALE_HEAD.SALE_PERSONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_HEAD\' 中資料行 \'SALE_PERSON\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_HEAD.SALE_PERSONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODI_USER {
                get {
                    try {
                        return ((string)(this[this.tableSALE_HEAD.MODI_USERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_HEAD\' 中資料行 \'MODI_USER\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_HEAD.MODI_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODI_DTM {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSALE_HEAD.MODI_DTMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_HEAD\' 中資料行 \'MODI_DTM\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_HEAD.MODI_DTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MACHINE_ID {
                get {
                    try {
                        return ((string)(this[this.tableSALE_HEAD.MACHINE_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_HEAD\' 中資料行 \'MACHINE_ID\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_HEAD.MACHINE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STORE_NAME {
                get {
                    try {
                        return ((string)(this[this.tableSALE_HEAD.STORE_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_HEAD\' 中資料行 \'STORE_NAME\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_HEAD.STORE_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FLG_TOERP {
                get {
                    try {
                        return ((string)(this[this.tableSALE_HEAD.FLG_TOERPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_HEAD\' 中資料行 \'FLG_TOERP\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_HEAD.FLG_TOERPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DTM_TOERP {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSALE_HEAD.DTM_TOERPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_HEAD\' 中資料行 \'DTM_TOERP\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_HEAD.DTM_TOERPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INVALID_REASON {
                get {
                    try {
                        return ((string)(this[this.tableSALE_HEAD.INVALID_REASONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_HEAD\' 中資料行 \'INVALID_REASON\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_HEAD.INVALID_REASONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HG_PRODNO {
                get {
                    try {
                        return ((string)(this[this.tableSALE_HEAD.HG_PRODNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_HEAD\' 中資料行 \'HG_PRODNO\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_HEAD.HG_PRODNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime INVALID_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSALE_HEAD.INVALID_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_HEAD\' 中資料行 \'INVALID_DATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_HEAD.INVALID_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INVALID_NO {
                get {
                    try {
                        return ((string)(this[this.tableSALE_HEAD.INVALID_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_HEAD\' 中資料行 \'INVALID_NO\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_HEAD.INVALID_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INVALID_REMARK {
                get {
                    try {
                        return ((string)(this[this.tableSALE_HEAD.INVALID_REMARKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_HEAD\' 中資料行 \'INVALID_REMARK\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_HEAD.INVALID_REMARKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSALE_NONull() {
                return this.IsNull(this.tableSALE_HEAD.SALE_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSALE_NONull() {
                this[this.tableSALE_HEAD.SALE_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRADE_DATENull() {
                return this.IsNull(this.tableSALE_HEAD.TRADE_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRADE_DATENull() {
                this[this.tableSALE_HEAD.TRADE_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUNI_TITLENull() {
                return this.IsNull(this.tableSALE_HEAD.UNI_TITLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUNI_TITLENull() {
                this[this.tableSALE_HEAD.UNI_TITLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUNI_NONull() {
                return this.IsNull(this.tableSALE_HEAD.UNI_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUNI_NONull() {
                this[this.tableSALE_HEAD.UNI_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREMARKNull() {
                return this.IsNull(this.tableSALE_HEAD.REMARKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREMARKNull() {
                this[this.tableSALE_HEAD.REMARKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSALE_STATUSNull() {
                return this.IsNull(this.tableSALE_HEAD.SALE_STATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSALE_STATUSNull() {
                this[this.tableSALE_HEAD.SALE_STATUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCREATE_USERNull() {
                return this.IsNull(this.tableSALE_HEAD.CREATE_USERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCREATE_USERNull() {
                this[this.tableSALE_HEAD.CREATE_USERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSALE_BEFORE_TAXNull() {
                return this.IsNull(this.tableSALE_HEAD.SALE_BEFORE_TAXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSALE_BEFORE_TAXNull() {
                this[this.tableSALE_HEAD.SALE_BEFORE_TAXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSALE_TAXNull() {
                return this.IsNull(this.tableSALE_HEAD.SALE_TAXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSALE_TAXNull() {
                this[this.tableSALE_HEAD.SALE_TAXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCREATE_DTMNull() {
                return this.IsNull(this.tableSALE_HEAD.CREATE_DTMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCREATE_DTMNull() {
                this[this.tableSALE_HEAD.CREATE_DTMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSALE_TOTAL_AMOUNTNull() {
                return this.IsNull(this.tableSALE_HEAD.SALE_TOTAL_AMOUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSALE_TOTAL_AMOUNTNull() {
                this[this.tableSALE_HEAD.SALE_TOTAL_AMOUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDISCOUNT_BEFORE_TAXNull() {
                return this.IsNull(this.tableSALE_HEAD.DISCOUNT_BEFORE_TAXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDISCOUNT_BEFORE_TAXNull() {
                this[this.tableSALE_HEAD.DISCOUNT_BEFORE_TAXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINVALID_IDNull() {
                return this.IsNull(this.tableSALE_HEAD.INVALID_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINVALID_IDNull() {
                this[this.tableSALE_HEAD.INVALID_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSALE_TYPENull() {
                return this.IsNull(this.tableSALE_HEAD.SALE_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSALE_TYPENull() {
                this[this.tableSALE_HEAD.SALE_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDISCOUNT_TAXNull() {
                return this.IsNull(this.tableSALE_HEAD.DISCOUNT_TAXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDISCOUNT_TAXNull() {
                this[this.tableSALE_HEAD.DISCOUNT_TAXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTORE_NONull() {
                return this.IsNull(this.tableSALE_HEAD.STORE_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTORE_NONull() {
                this[this.tableSALE_HEAD.STORE_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDISCOUNT_TOTAL_AMOUNTNull() {
                return this.IsNull(this.tableSALE_HEAD.DISCOUNT_TOTAL_AMOUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDISCOUNT_TOTAL_AMOUNTNull() {
                this[this.tableSALE_HEAD.DISCOUNT_TOTAL_AMOUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHG_CARD_NONull() {
                return this.IsNull(this.tableSALE_HEAD.HG_CARD_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHG_CARD_NONull() {
                this[this.tableSALE_HEAD.HG_CARD_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHG_AWARD_POINTNull() {
                return this.IsNull(this.tableSALE_HEAD.HG_AWARD_POINTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHG_AWARD_POINTNull() {
                this[this.tableSALE_HEAD.HG_AWARD_POINTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHG_REMAIN_POINTNull() {
                return this.IsNull(this.tableSALE_HEAD.HG_REMAIN_POINTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHG_REMAIN_POINTNull() {
                this[this.tableSALE_HEAD.HG_REMAIN_POINTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsORIGINAL_IDNull() {
                return this.IsNull(this.tableSALE_HEAD.ORIGINAL_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetORIGINAL_IDNull() {
                this[this.tableSALE_HEAD.ORIGINAL_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSALE_PERSONNull() {
                return this.IsNull(this.tableSALE_HEAD.SALE_PERSONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSALE_PERSONNull() {
                this[this.tableSALE_HEAD.SALE_PERSONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODI_USERNull() {
                return this.IsNull(this.tableSALE_HEAD.MODI_USERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODI_USERNull() {
                this[this.tableSALE_HEAD.MODI_USERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODI_DTMNull() {
                return this.IsNull(this.tableSALE_HEAD.MODI_DTMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODI_DTMNull() {
                this[this.tableSALE_HEAD.MODI_DTMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMACHINE_IDNull() {
                return this.IsNull(this.tableSALE_HEAD.MACHINE_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMACHINE_IDNull() {
                this[this.tableSALE_HEAD.MACHINE_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTORE_NAMENull() {
                return this.IsNull(this.tableSALE_HEAD.STORE_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTORE_NAMENull() {
                this[this.tableSALE_HEAD.STORE_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLG_TOERPNull() {
                return this.IsNull(this.tableSALE_HEAD.FLG_TOERPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLG_TOERPNull() {
                this[this.tableSALE_HEAD.FLG_TOERPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDTM_TOERPNull() {
                return this.IsNull(this.tableSALE_HEAD.DTM_TOERPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDTM_TOERPNull() {
                this[this.tableSALE_HEAD.DTM_TOERPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINVALID_REASONNull() {
                return this.IsNull(this.tableSALE_HEAD.INVALID_REASONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINVALID_REASONNull() {
                this[this.tableSALE_HEAD.INVALID_REASONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHG_PRODNONull() {
                return this.IsNull(this.tableSALE_HEAD.HG_PRODNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHG_PRODNONull() {
                this[this.tableSALE_HEAD.HG_PRODNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINVALID_DATENull() {
                return this.IsNull(this.tableSALE_HEAD.INVALID_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINVALID_DATENull() {
                this[this.tableSALE_HEAD.INVALID_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINVALID_NONull() {
                return this.IsNull(this.tableSALE_HEAD.INVALID_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINVALID_NONull() {
                this[this.tableSALE_HEAD.INVALID_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINVALID_REMARKNull() {
                return this.IsNull(this.tableSALE_HEAD.INVALID_REMARKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINVALID_REMARKNull() {
                this[this.tableSALE_HEAD.INVALID_REMARKColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SALE_DETAILRow : global::System.Data.DataRow {
            
            private SALE_DETAILDataTable tableSALE_DETAIL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SALE_DETAILRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSALE_DETAIL = ((SALE_DETAILDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ID {
                get {
                    return ((string)(this[this.tableSALE_DETAIL.IDColumn]));
                }
                set {
                    this[this.tableSALE_DETAIL.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ITEM_TYPE {
                get {
                    try {
                        return ((decimal)(this[this.tableSALE_DETAIL.ITEM_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'ITEM_TYPE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.ITEM_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODNO {
                get {
                    try {
                        return ((string)(this[this.tableSALE_DETAIL.PRODNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'PRODNO\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.PRODNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PROMOTION_CODE {
                get {
                    try {
                        return ((string)(this[this.tableSALE_DETAIL.PROMOTION_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'PROMOTION_CODE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.PROMOTION_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CREATE_DTM {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSALE_DETAIL.CREATE_DTMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'CREATE_DTM\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.CREATE_DTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SOURCE_TYPE {
                get {
                    try {
                        return ((decimal)(this[this.tableSALE_DETAIL.SOURCE_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'SOURCE_TYPE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.SOURCE_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SOURCE_REFERENCE_KEY {
                get {
                    try {
                        return ((string)(this[this.tableSALE_DETAIL.SOURCE_REFERENCE_KEYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'SOURCE_REFERENCE_KEY\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.SOURCE_REFERENCE_KEYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string POSUUID_MASTER {
                get {
                    try {
                        return ((string)(this[this.tableSALE_DETAIL.POSUUID_MASTERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'POSUUID_MASTER\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.POSUUID_MASTERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SEQNO {
                get {
                    return ((decimal)(this[this.tableSALE_DETAIL.SEQNOColumn]));
                }
                set {
                    this[this.tableSALE_DETAIL.SEQNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UNIT_PRICE {
                get {
                    try {
                        return ((decimal)(this[this.tableSALE_DETAIL.UNIT_PRICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'UNIT_PRICE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.UNIT_PRICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODI_USER {
                get {
                    try {
                        return ((string)(this[this.tableSALE_DETAIL.MODI_USERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'MODI_USER\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.MODI_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TAXABLE {
                get {
                    try {
                        return ((string)(this[this.tableSALE_DETAIL.TAXABLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'TAXABLE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.TAXABLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODI_DTM {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSALE_DETAIL.MODI_DTMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'MODI_DTM\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.MODI_DTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TAXRATE {
                get {
                    try {
                        return ((decimal)(this[this.tableSALE_DETAIL.TAXRATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'TAXRATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.TAXRATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CREATE_USER {
                get {
                    try {
                        return ((string)(this[this.tableSALE_DETAIL.CREATE_USERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'CREATE_USER\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.CREATE_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string POSUUID_DETAIL {
                get {
                    try {
                        return ((string)(this[this.tableSALE_DETAIL.POSUUID_DETAILColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'POSUUID_DETAIL\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.POSUUID_DETAILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TOTAL_AMOUNT {
                get {
                    try {
                        return ((decimal)(this[this.tableSALE_DETAIL.TOTAL_AMOUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'TOTAL_AMOUNT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.TOTAL_AMOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HG_CARD_NO {
                get {
                    try {
                        return ((string)(this[this.tableSALE_DETAIL.HG_CARD_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'HG_CARD_NO\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.HG_CARD_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HG_REDEEM_POINT {
                get {
                    try {
                        return ((decimal)(this[this.tableSALE_DETAIL.HG_REDEEM_POINTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'HG_REDEEM_POINT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.HG_REDEEM_POINTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HG_RULE {
                get {
                    try {
                        return ((string)(this[this.tableSALE_DETAIL.HG_RULEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'HG_RULE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.HG_RULEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SH_DISCOUNT_RATE {
                get {
                    try {
                        return ((decimal)(this[this.tableSALE_DETAIL.SH_DISCOUNT_RATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'SH_DISCOUNT_RATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.SH_DISCOUNT_RATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SH_DISCOUNT_REASON {
                get {
                    try {
                        return ((string)(this[this.tableSALE_DETAIL.SH_DISCOUNT_REASONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'SH_DISCOUNT_REASON\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.SH_DISCOUNT_REASONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WRITE_OFF_FILE {
                get {
                    try {
                        return ((string)(this[this.tableSALE_DETAIL.WRITE_OFF_FILEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'WRITE_OFF_FILE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.WRITE_OFF_FILEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HG_LEVEL_PRICE {
                get {
                    try {
                        return ((decimal)(this[this.tableSALE_DETAIL.HG_LEVEL_PRICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'HG_LEVEL_PRICE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.HG_LEVEL_PRICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime WRITE_OFF_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSALE_DETAIL.WRITE_OFF_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'WRITE_OFF_DATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.WRITE_OFF_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SH_DISCOUNT_DESC {
                get {
                    try {
                        return ((string)(this[this.tableSALE_DETAIL.SH_DISCOUNT_DESCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'SH_DISCOUNT_DESC\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.SH_DISCOUNT_DESCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BATCH_NO {
                get {
                    try {
                        return ((string)(this[this.tableSALE_DETAIL.BATCH_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'BATCH_NO\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.BATCH_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime APPLY_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSALE_DETAIL.APPLY_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'APPLY_DATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.APPLY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SERVICE_SYS_ID {
                get {
                    try {
                        return ((string)(this[this.tableSALE_DETAIL.SERVICE_SYS_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'SERVICE_SYS_ID\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.SERVICE_SYS_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BUNDLE_ID {
                get {
                    try {
                        return ((string)(this[this.tableSALE_DETAIL.BUNDLE_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'BUNDLE_ID\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.BUNDLE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HRS_NO {
                get {
                    try {
                        return ((string)(this[this.tableSALE_DETAIL.HRS_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'HRS_NO\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.HRS_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LEASE_NO {
                get {
                    try {
                        return ((string)(this[this.tableSALE_DETAIL.LEASE_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'LEASE_NO\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.LEASE_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ORDER_NO {
                get {
                    try {
                        return ((string)(this[this.tableSALE_DETAIL.ORDER_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'ORDER_NO\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.ORDER_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ETC_NO {
                get {
                    try {
                        return ((string)(this[this.tableSALE_DETAIL.ETC_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'ETC_NO\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.ETC_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FUN_ID {
                get {
                    try {
                        return ((string)(this[this.tableSALE_DETAIL.FUN_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'FUN_ID\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.FUN_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal R_RATE {
                get {
                    try {
                        return ((decimal)(this[this.tableSALE_DETAIL.R_RATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'R_RATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.R_RATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DATA {
                get {
                    try {
                        return ((string)(this[this.tableSALE_DETAIL.DATAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'DATA\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.DATAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VOICE {
                get {
                    try {
                        return ((string)(this[this.tableSALE_DETAIL.VOICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'VOICE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.VOICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TRANS_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableSALE_DETAIL.TRANS_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'TRANS_TYPE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.TRANS_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string APPROVE_STATUS {
                get {
                    try {
                        return ((string)(this[this.tableSALE_DETAIL.APPROVE_STATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'APPROVE_STATUS\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.APPROVE_STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CONN_FLAG {
                get {
                    try {
                        return ((string)(this[this.tableSALE_DETAIL.CONN_FLAGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'CONN_FLAG\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.CONN_FLAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QUERY_TABLE_NAME {
                get {
                    try {
                        return ((string)(this[this.tableSALE_DETAIL.QUERY_TABLE_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'QUERY_TABLE_NAME\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.QUERY_TABLE_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BUNDLE_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableSALE_DETAIL.BUNDLE_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'BUNDLE_TYPE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.BUNDLE_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BARCODE1 {
                get {
                    try {
                        return ((string)(this[this.tableSALE_DETAIL.BARCODE1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'BARCODE1\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.BARCODE1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BARCODE2 {
                get {
                    try {
                        return ((string)(this[this.tableSALE_DETAIL.BARCODE2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'BARCODE2\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.BARCODE2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BARCODE3 {
                get {
                    try {
                        return ((string)(this[this.tableSALE_DETAIL.BARCODE3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'BARCODE3\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.BARCODE3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SIM_CARD_NO {
                get {
                    try {
                        return ((string)(this[this.tableSALE_DETAIL.SIM_CARD_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'SIM_CARD_NO\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.SIM_CARD_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MSISDN {
                get {
                    try {
                        return ((string)(this[this.tableSALE_DETAIL.MSISDNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'MSISDN\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.MSISDNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DISCOUNT_B_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSALE_DETAIL.DISCOUNT_B_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'DISCOUNT_B_DATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.DISCOUNT_B_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DISCOUNT_E_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSALE_DETAIL.DISCOUNT_E_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'DISCOUNT_E_DATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.DISCOUNT_E_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal QUANTITY {
                get {
                    try {
                        return ((decimal)(this[this.tableSALE_DETAIL.QUANTITYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'QUANTITY\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.QUANTITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BEFORE_TAX {
                get {
                    try {
                        return ((decimal)(this[this.tableSALE_DETAIL.BEFORE_TAXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'BEFORE_TAX\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.BEFORE_TAXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TAX {
                get {
                    try {
                        return ((decimal)(this[this.tableSALE_DETAIL.TAXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'TAX\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.TAXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MSISDN_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableSALE_DETAIL.MSISDN_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'MSISDN_TYPE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.MSISDN_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime APPROVAL_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSALE_DETAIL.APPROVAL_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'APPROVAL_DATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.APPROVAL_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MNP {
                get {
                    try {
                        return ((string)(this[this.tableSALE_DETAIL.MNPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'MNP\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.MNPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BILLING_ACCOUNT_ID {
                get {
                    try {
                        return ((string)(this[this.tableSALE_DETAIL.BILLING_ACCOUNT_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'BILLING_ACCOUNT_ID\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.BILLING_ACCOUNT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SUBSCRIBE_NO {
                get {
                    try {
                        return ((string)(this[this.tableSALE_DETAIL.SUBSCRIBE_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'SUBSCRIBE_NO\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.SUBSCRIBE_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GROUP_ID {
                get {
                    try {
                        return ((string)(this[this.tableSALE_DETAIL.GROUP_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'GROUP_ID\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.GROUP_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MM_PLU_AMOUNT {
                get {
                    try {
                        return ((decimal)(this[this.tableSALE_DETAIL.MM_PLU_AMOUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'MM_PLU_AMOUNT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.MM_PLU_AMOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MM_PLU_PRICE {
                get {
                    try {
                        return ((decimal)(this[this.tableSALE_DETAIL.MM_PLU_PRICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'MM_PLU_PRICE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.MM_PLU_PRICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MM_PLU_TRANS_VALUE {
                get {
                    try {
                        return ((decimal)(this[this.tableSALE_DETAIL.MM_PLU_TRANS_VALUEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'MM_PLU_TRANS_VALUE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.MM_PLU_TRANS_VALUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MM_PLU_DEVICE_SUBSIDY {
                get {
                    try {
                        return ((decimal)(this[this.tableSALE_DETAIL.MM_PLU_DEVICE_SUBSIDYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'MM_PLU_DEVICE_SUBSIDY\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.MM_PLU_DEVICE_SUBSIDYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MM_PLU_BASE_SUBSIDY {
                get {
                    try {
                        return ((decimal)(this[this.tableSALE_DETAIL.MM_PLU_BASE_SUBSIDYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALE_DETAIL\' 中資料行 \'MM_PLU_BASE_SUBSIDY\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALE_DETAIL.MM_PLU_BASE_SUBSIDYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsITEM_TYPENull() {
                return this.IsNull(this.tableSALE_DETAIL.ITEM_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetITEM_TYPENull() {
                this[this.tableSALE_DETAIL.ITEM_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRODNONull() {
                return this.IsNull(this.tableSALE_DETAIL.PRODNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRODNONull() {
                this[this.tableSALE_DETAIL.PRODNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPROMOTION_CODENull() {
                return this.IsNull(this.tableSALE_DETAIL.PROMOTION_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPROMOTION_CODENull() {
                this[this.tableSALE_DETAIL.PROMOTION_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCREATE_DTMNull() {
                return this.IsNull(this.tableSALE_DETAIL.CREATE_DTMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCREATE_DTMNull() {
                this[this.tableSALE_DETAIL.CREATE_DTMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOURCE_TYPENull() {
                return this.IsNull(this.tableSALE_DETAIL.SOURCE_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOURCE_TYPENull() {
                this[this.tableSALE_DETAIL.SOURCE_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOURCE_REFERENCE_KEYNull() {
                return this.IsNull(this.tableSALE_DETAIL.SOURCE_REFERENCE_KEYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOURCE_REFERENCE_KEYNull() {
                this[this.tableSALE_DETAIL.SOURCE_REFERENCE_KEYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPOSUUID_MASTERNull() {
                return this.IsNull(this.tableSALE_DETAIL.POSUUID_MASTERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPOSUUID_MASTERNull() {
                this[this.tableSALE_DETAIL.POSUUID_MASTERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUNIT_PRICENull() {
                return this.IsNull(this.tableSALE_DETAIL.UNIT_PRICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUNIT_PRICENull() {
                this[this.tableSALE_DETAIL.UNIT_PRICEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODI_USERNull() {
                return this.IsNull(this.tableSALE_DETAIL.MODI_USERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODI_USERNull() {
                this[this.tableSALE_DETAIL.MODI_USERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTAXABLENull() {
                return this.IsNull(this.tableSALE_DETAIL.TAXABLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTAXABLENull() {
                this[this.tableSALE_DETAIL.TAXABLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODI_DTMNull() {
                return this.IsNull(this.tableSALE_DETAIL.MODI_DTMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODI_DTMNull() {
                this[this.tableSALE_DETAIL.MODI_DTMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTAXRATENull() {
                return this.IsNull(this.tableSALE_DETAIL.TAXRATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTAXRATENull() {
                this[this.tableSALE_DETAIL.TAXRATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCREATE_USERNull() {
                return this.IsNull(this.tableSALE_DETAIL.CREATE_USERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCREATE_USERNull() {
                this[this.tableSALE_DETAIL.CREATE_USERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPOSUUID_DETAILNull() {
                return this.IsNull(this.tableSALE_DETAIL.POSUUID_DETAILColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPOSUUID_DETAILNull() {
                this[this.tableSALE_DETAIL.POSUUID_DETAILColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTOTAL_AMOUNTNull() {
                return this.IsNull(this.tableSALE_DETAIL.TOTAL_AMOUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTOTAL_AMOUNTNull() {
                this[this.tableSALE_DETAIL.TOTAL_AMOUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHG_CARD_NONull() {
                return this.IsNull(this.tableSALE_DETAIL.HG_CARD_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHG_CARD_NONull() {
                this[this.tableSALE_DETAIL.HG_CARD_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHG_REDEEM_POINTNull() {
                return this.IsNull(this.tableSALE_DETAIL.HG_REDEEM_POINTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHG_REDEEM_POINTNull() {
                this[this.tableSALE_DETAIL.HG_REDEEM_POINTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHG_RULENull() {
                return this.IsNull(this.tableSALE_DETAIL.HG_RULEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHG_RULENull() {
                this[this.tableSALE_DETAIL.HG_RULEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSH_DISCOUNT_RATENull() {
                return this.IsNull(this.tableSALE_DETAIL.SH_DISCOUNT_RATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSH_DISCOUNT_RATENull() {
                this[this.tableSALE_DETAIL.SH_DISCOUNT_RATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSH_DISCOUNT_REASONNull() {
                return this.IsNull(this.tableSALE_DETAIL.SH_DISCOUNT_REASONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSH_DISCOUNT_REASONNull() {
                this[this.tableSALE_DETAIL.SH_DISCOUNT_REASONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWRITE_OFF_FILENull() {
                return this.IsNull(this.tableSALE_DETAIL.WRITE_OFF_FILEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWRITE_OFF_FILENull() {
                this[this.tableSALE_DETAIL.WRITE_OFF_FILEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHG_LEVEL_PRICENull() {
                return this.IsNull(this.tableSALE_DETAIL.HG_LEVEL_PRICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHG_LEVEL_PRICENull() {
                this[this.tableSALE_DETAIL.HG_LEVEL_PRICEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWRITE_OFF_DATENull() {
                return this.IsNull(this.tableSALE_DETAIL.WRITE_OFF_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWRITE_OFF_DATENull() {
                this[this.tableSALE_DETAIL.WRITE_OFF_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSH_DISCOUNT_DESCNull() {
                return this.IsNull(this.tableSALE_DETAIL.SH_DISCOUNT_DESCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSH_DISCOUNT_DESCNull() {
                this[this.tableSALE_DETAIL.SH_DISCOUNT_DESCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBATCH_NONull() {
                return this.IsNull(this.tableSALE_DETAIL.BATCH_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBATCH_NONull() {
                this[this.tableSALE_DETAIL.BATCH_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAPPLY_DATENull() {
                return this.IsNull(this.tableSALE_DETAIL.APPLY_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAPPLY_DATENull() {
                this[this.tableSALE_DETAIL.APPLY_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSERVICE_SYS_IDNull() {
                return this.IsNull(this.tableSALE_DETAIL.SERVICE_SYS_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSERVICE_SYS_IDNull() {
                this[this.tableSALE_DETAIL.SERVICE_SYS_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBUNDLE_IDNull() {
                return this.IsNull(this.tableSALE_DETAIL.BUNDLE_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBUNDLE_IDNull() {
                this[this.tableSALE_DETAIL.BUNDLE_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHRS_NONull() {
                return this.IsNull(this.tableSALE_DETAIL.HRS_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHRS_NONull() {
                this[this.tableSALE_DETAIL.HRS_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLEASE_NONull() {
                return this.IsNull(this.tableSALE_DETAIL.LEASE_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLEASE_NONull() {
                this[this.tableSALE_DETAIL.LEASE_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsORDER_NONull() {
                return this.IsNull(this.tableSALE_DETAIL.ORDER_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetORDER_NONull() {
                this[this.tableSALE_DETAIL.ORDER_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsETC_NONull() {
                return this.IsNull(this.tableSALE_DETAIL.ETC_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetETC_NONull() {
                this[this.tableSALE_DETAIL.ETC_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFUN_IDNull() {
                return this.IsNull(this.tableSALE_DETAIL.FUN_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFUN_IDNull() {
                this[this.tableSALE_DETAIL.FUN_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsR_RATENull() {
                return this.IsNull(this.tableSALE_DETAIL.R_RATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetR_RATENull() {
                this[this.tableSALE_DETAIL.R_RATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATANull() {
                return this.IsNull(this.tableSALE_DETAIL.DATAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATANull() {
                this[this.tableSALE_DETAIL.DATAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVOICENull() {
                return this.IsNull(this.tableSALE_DETAIL.VOICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVOICENull() {
                this[this.tableSALE_DETAIL.VOICEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRANS_TYPENull() {
                return this.IsNull(this.tableSALE_DETAIL.TRANS_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRANS_TYPENull() {
                this[this.tableSALE_DETAIL.TRANS_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAPPROVE_STATUSNull() {
                return this.IsNull(this.tableSALE_DETAIL.APPROVE_STATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAPPROVE_STATUSNull() {
                this[this.tableSALE_DETAIL.APPROVE_STATUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCONN_FLAGNull() {
                return this.IsNull(this.tableSALE_DETAIL.CONN_FLAGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCONN_FLAGNull() {
                this[this.tableSALE_DETAIL.CONN_FLAGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQUERY_TABLE_NAMENull() {
                return this.IsNull(this.tableSALE_DETAIL.QUERY_TABLE_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQUERY_TABLE_NAMENull() {
                this[this.tableSALE_DETAIL.QUERY_TABLE_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBUNDLE_TYPENull() {
                return this.IsNull(this.tableSALE_DETAIL.BUNDLE_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBUNDLE_TYPENull() {
                this[this.tableSALE_DETAIL.BUNDLE_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBARCODE1Null() {
                return this.IsNull(this.tableSALE_DETAIL.BARCODE1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBARCODE1Null() {
                this[this.tableSALE_DETAIL.BARCODE1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBARCODE2Null() {
                return this.IsNull(this.tableSALE_DETAIL.BARCODE2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBARCODE2Null() {
                this[this.tableSALE_DETAIL.BARCODE2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBARCODE3Null() {
                return this.IsNull(this.tableSALE_DETAIL.BARCODE3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBARCODE3Null() {
                this[this.tableSALE_DETAIL.BARCODE3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSIM_CARD_NONull() {
                return this.IsNull(this.tableSALE_DETAIL.SIM_CARD_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSIM_CARD_NONull() {
                this[this.tableSALE_DETAIL.SIM_CARD_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMSISDNNull() {
                return this.IsNull(this.tableSALE_DETAIL.MSISDNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMSISDNNull() {
                this[this.tableSALE_DETAIL.MSISDNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDISCOUNT_B_DATENull() {
                return this.IsNull(this.tableSALE_DETAIL.DISCOUNT_B_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDISCOUNT_B_DATENull() {
                this[this.tableSALE_DETAIL.DISCOUNT_B_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDISCOUNT_E_DATENull() {
                return this.IsNull(this.tableSALE_DETAIL.DISCOUNT_E_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDISCOUNT_E_DATENull() {
                this[this.tableSALE_DETAIL.DISCOUNT_E_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQUANTITYNull() {
                return this.IsNull(this.tableSALE_DETAIL.QUANTITYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQUANTITYNull() {
                this[this.tableSALE_DETAIL.QUANTITYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBEFORE_TAXNull() {
                return this.IsNull(this.tableSALE_DETAIL.BEFORE_TAXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBEFORE_TAXNull() {
                this[this.tableSALE_DETAIL.BEFORE_TAXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTAXNull() {
                return this.IsNull(this.tableSALE_DETAIL.TAXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTAXNull() {
                this[this.tableSALE_DETAIL.TAXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMSISDN_TYPENull() {
                return this.IsNull(this.tableSALE_DETAIL.MSISDN_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMSISDN_TYPENull() {
                this[this.tableSALE_DETAIL.MSISDN_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAPPROVAL_DATENull() {
                return this.IsNull(this.tableSALE_DETAIL.APPROVAL_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAPPROVAL_DATENull() {
                this[this.tableSALE_DETAIL.APPROVAL_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMNPNull() {
                return this.IsNull(this.tableSALE_DETAIL.MNPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMNPNull() {
                this[this.tableSALE_DETAIL.MNPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBILLING_ACCOUNT_IDNull() {
                return this.IsNull(this.tableSALE_DETAIL.BILLING_ACCOUNT_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBILLING_ACCOUNT_IDNull() {
                this[this.tableSALE_DETAIL.BILLING_ACCOUNT_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUBSCRIBE_NONull() {
                return this.IsNull(this.tableSALE_DETAIL.SUBSCRIBE_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUBSCRIBE_NONull() {
                this[this.tableSALE_DETAIL.SUBSCRIBE_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGROUP_IDNull() {
                return this.IsNull(this.tableSALE_DETAIL.GROUP_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGROUP_IDNull() {
                this[this.tableSALE_DETAIL.GROUP_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMM_PLU_AMOUNTNull() {
                return this.IsNull(this.tableSALE_DETAIL.MM_PLU_AMOUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMM_PLU_AMOUNTNull() {
                this[this.tableSALE_DETAIL.MM_PLU_AMOUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMM_PLU_PRICENull() {
                return this.IsNull(this.tableSALE_DETAIL.MM_PLU_PRICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMM_PLU_PRICENull() {
                this[this.tableSALE_DETAIL.MM_PLU_PRICEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMM_PLU_TRANS_VALUENull() {
                return this.IsNull(this.tableSALE_DETAIL.MM_PLU_TRANS_VALUEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMM_PLU_TRANS_VALUENull() {
                this[this.tableSALE_DETAIL.MM_PLU_TRANS_VALUEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMM_PLU_DEVICE_SUBSIDYNull() {
                return this.IsNull(this.tableSALE_DETAIL.MM_PLU_DEVICE_SUBSIDYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMM_PLU_DEVICE_SUBSIDYNull() {
                this[this.tableSALE_DETAIL.MM_PLU_DEVICE_SUBSIDYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMM_PLU_BASE_SUBSIDYNull() {
                return this.IsNull(this.tableSALE_DETAIL.MM_PLU_BASE_SUBSIDYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMM_PLU_BASE_SUBSIDYNull() {
                this[this.tableSALE_DETAIL.MM_PLU_BASE_SUBSIDYColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ERP_SALESRowChangeEvent : global::System.EventArgs {
            
            private ERP_SALESRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ERP_SALESRowChangeEvent(ERP_SALESRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ERP_SALESRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SALE_HEADRowChangeEvent : global::System.EventArgs {
            
            private SALE_HEADRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SALE_HEADRowChangeEvent(SALE_HEADRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SALE_HEADRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SALE_DETAILRowChangeEvent : global::System.EventArgs {
            
            private SALE_DETAILRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SALE_DETAILRowChangeEvent(SALE_DETAILRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SALE_DETAILRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591