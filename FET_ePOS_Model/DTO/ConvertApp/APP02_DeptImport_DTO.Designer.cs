//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:2.0.50727.4206
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace FET.POS.Model.DTO.ConvertApp {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("APP02_DeptImport_DTO")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class APP02_DeptImport_DTO : global::System.Data.DataSet {
        
        private DEPT_OLDDataTable tableDEPT_OLD;
        
        private DEPTDataTable tableDEPT;
        
        private DEPT_TEMPDataTable tableDEPT_TEMP;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public APP02_DeptImport_DTO() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected APP02_DeptImport_DTO(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["DEPT_OLD"] != null)) {
                    base.Tables.Add(new DEPT_OLDDataTable(ds.Tables["DEPT_OLD"]));
                }
                if ((ds.Tables["DEPT"] != null)) {
                    base.Tables.Add(new DEPTDataTable(ds.Tables["DEPT"]));
                }
                if ((ds.Tables["DEPT_TEMP"] != null)) {
                    base.Tables.Add(new DEPT_TEMPDataTable(ds.Tables["DEPT_TEMP"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DEPT_OLDDataTable DEPT_OLD {
            get {
                return this.tableDEPT_OLD;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DEPTDataTable DEPT {
            get {
                return this.tableDEPT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DEPT_TEMPDataTable DEPT_TEMP {
            get {
                return this.tableDEPT_TEMP;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            APP02_DeptImport_DTO cln = ((APP02_DeptImport_DTO)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["DEPT_OLD"] != null)) {
                    base.Tables.Add(new DEPT_OLDDataTable(ds.Tables["DEPT_OLD"]));
                }
                if ((ds.Tables["DEPT"] != null)) {
                    base.Tables.Add(new DEPTDataTable(ds.Tables["DEPT"]));
                }
                if ((ds.Tables["DEPT_TEMP"] != null)) {
                    base.Tables.Add(new DEPT_TEMPDataTable(ds.Tables["DEPT_TEMP"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableDEPT_OLD = ((DEPT_OLDDataTable)(base.Tables["DEPT_OLD"]));
            if ((initTable == true)) {
                if ((this.tableDEPT_OLD != null)) {
                    this.tableDEPT_OLD.InitVars();
                }
            }
            this.tableDEPT = ((DEPTDataTable)(base.Tables["DEPT"]));
            if ((initTable == true)) {
                if ((this.tableDEPT != null)) {
                    this.tableDEPT.InitVars();
                }
            }
            this.tableDEPT_TEMP = ((DEPT_TEMPDataTable)(base.Tables["DEPT_TEMP"]));
            if ((initTable == true)) {
                if ((this.tableDEPT_TEMP != null)) {
                    this.tableDEPT_TEMP.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "APP02_DeptImport_DTO";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/APP02_DeptImport_DTO.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableDEPT_OLD = new DEPT_OLDDataTable();
            base.Tables.Add(this.tableDEPT_OLD);
            this.tableDEPT = new DEPTDataTable();
            base.Tables.Add(this.tableDEPT);
            this.tableDEPT_TEMP = new DEPT_TEMPDataTable();
            base.Tables.Add(this.tableDEPT_TEMP);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDEPT_OLD() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDEPT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDEPT_TEMP() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            APP02_DeptImport_DTO ds = new APP02_DeptImport_DTO();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void DEPT_OLDRowChangeEventHandler(object sender, DEPT_OLDRowChangeEvent e);
        
        public delegate void DEPTRowChangeEventHandler(object sender, DEPTRowChangeEvent e);
        
        public delegate void DEPT_TEMPRowChangeEventHandler(object sender, DEPT_TEMPRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DEPT_OLDDataTable : global::System.Data.TypedTableBase<DEPT_OLDRow> {
            
            private global::System.Data.DataColumn columnDEPTNO;
            
            private global::System.Data.DataColumn columnCOMPANYCODE;
            
            private global::System.Data.DataColumn columnDEPTNAME;
            
            private global::System.Data.DataColumn columnCOSTCENTER;
            
            private global::System.Data.DataColumn columnUPDDATE;
            
            private global::System.Data.DataColumn columnUPDUSRNO;
            
            private global::System.Data.DataColumn columnULSNO;
            
            private global::System.Data.DataColumn columnISACTIVE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DEPT_OLDDataTable() {
                this.TableName = "DEPT_OLD";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DEPT_OLDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DEPT_OLDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEPTNOColumn {
                get {
                    return this.columnDEPTNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANYCODEColumn {
                get {
                    return this.columnCOMPANYCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEPTNAMEColumn {
                get {
                    return this.columnDEPTNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COSTCENTERColumn {
                get {
                    return this.columnCOSTCENTER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UPDDATEColumn {
                get {
                    return this.columnUPDDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UPDUSRNOColumn {
                get {
                    return this.columnUPDUSRNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ULSNOColumn {
                get {
                    return this.columnULSNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ISACTIVEColumn {
                get {
                    return this.columnISACTIVE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DEPT_OLDRow this[int index] {
                get {
                    return ((DEPT_OLDRow)(this.Rows[index]));
                }
            }
            
            public event DEPT_OLDRowChangeEventHandler DEPT_OLDRowChanging;
            
            public event DEPT_OLDRowChangeEventHandler DEPT_OLDRowChanged;
            
            public event DEPT_OLDRowChangeEventHandler DEPT_OLDRowDeleting;
            
            public event DEPT_OLDRowChangeEventHandler DEPT_OLDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDEPT_OLDRow(DEPT_OLDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DEPT_OLDRow AddDEPT_OLDRow(string DEPTNO, string COMPANYCODE, string DEPTNAME, string COSTCENTER, string UPDDATE, string UPDUSRNO, string ULSNO, string ISACTIVE) {
                DEPT_OLDRow rowDEPT_OLDRow = ((DEPT_OLDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DEPTNO,
                        COMPANYCODE,
                        DEPTNAME,
                        COSTCENTER,
                        UPDDATE,
                        UPDUSRNO,
                        ULSNO,
                        ISACTIVE};
                rowDEPT_OLDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDEPT_OLDRow);
                return rowDEPT_OLDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DEPT_OLDRow FindByDEPTNOCOMPANYCODE(string DEPTNO, string COMPANYCODE) {
                return ((DEPT_OLDRow)(this.Rows.Find(new object[] {
                            DEPTNO,
                            COMPANYCODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DEPT_OLDDataTable cln = ((DEPT_OLDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DEPT_OLDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDEPTNO = base.Columns["DEPTNO"];
                this.columnCOMPANYCODE = base.Columns["COMPANYCODE"];
                this.columnDEPTNAME = base.Columns["DEPTNAME"];
                this.columnCOSTCENTER = base.Columns["COSTCENTER"];
                this.columnUPDDATE = base.Columns["UPDDATE"];
                this.columnUPDUSRNO = base.Columns["UPDUSRNO"];
                this.columnULSNO = base.Columns["ULSNO"];
                this.columnISACTIVE = base.Columns["ISACTIVE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDEPTNO = new global::System.Data.DataColumn("DEPTNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPTNO);
                this.columnCOMPANYCODE = new global::System.Data.DataColumn("COMPANYCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANYCODE);
                this.columnDEPTNAME = new global::System.Data.DataColumn("DEPTNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPTNAME);
                this.columnCOSTCENTER = new global::System.Data.DataColumn("COSTCENTER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOSTCENTER);
                this.columnUPDDATE = new global::System.Data.DataColumn("UPDDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPDDATE);
                this.columnUPDUSRNO = new global::System.Data.DataColumn("UPDUSRNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPDUSRNO);
                this.columnULSNO = new global::System.Data.DataColumn("ULSNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnULSNO);
                this.columnISACTIVE = new global::System.Data.DataColumn("ISACTIVE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnISACTIVE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnDEPTNO,
                                this.columnCOMPANYCODE}, true));
                this.columnDEPTNO.AllowDBNull = false;
                this.columnDEPTNO.MaxLength = 10;
                this.columnCOMPANYCODE.AllowDBNull = false;
                this.columnCOMPANYCODE.MaxLength = 10;
                this.columnDEPTNAME.MaxLength = 100;
                this.columnCOSTCENTER.MaxLength = 10;
                this.columnUPDDATE.MaxLength = 8;
                this.columnUPDUSRNO.MaxLength = 10;
                this.columnULSNO.MaxLength = 13;
                this.columnISACTIVE.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DEPT_OLDRow NewDEPT_OLDRow() {
                return ((DEPT_OLDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DEPT_OLDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DEPT_OLDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DEPT_OLDRowChanged != null)) {
                    this.DEPT_OLDRowChanged(this, new DEPT_OLDRowChangeEvent(((DEPT_OLDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DEPT_OLDRowChanging != null)) {
                    this.DEPT_OLDRowChanging(this, new DEPT_OLDRowChangeEvent(((DEPT_OLDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DEPT_OLDRowDeleted != null)) {
                    this.DEPT_OLDRowDeleted(this, new DEPT_OLDRowChangeEvent(((DEPT_OLDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DEPT_OLDRowDeleting != null)) {
                    this.DEPT_OLDRowDeleting(this, new DEPT_OLDRowChangeEvent(((DEPT_OLDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDEPT_OLDRow(DEPT_OLDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                APP02_DeptImport_DTO ds = new APP02_DeptImport_DTO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DEPT_OLDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DEPTDataTable : global::System.Data.TypedTableBase<DEPTRow> {
            
            private global::System.Data.DataColumn columnDEPT_NO;
            
            private global::System.Data.DataColumn columnDEPT_NAME;
            
            private global::System.Data.DataColumn columnDEPT_SNAME;
            
            private global::System.Data.DataColumn columnDEPT_ENAME;
            
            private global::System.Data.DataColumn columnIS_DEL;
            
            private global::System.Data.DataColumn columnCREATE_DTM;
            
            private global::System.Data.DataColumn columnCREATE_USER;
            
            private global::System.Data.DataColumn columnMODI_DTM;
            
            private global::System.Data.DataColumn columnMODI_USER;
            
            private global::System.Data.DataColumn columnDEL_DTM;
            
            private global::System.Data.DataColumn columnDEL_USER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DEPTDataTable() {
                this.TableName = "DEPT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DEPTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DEPTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEPT_NOColumn {
                get {
                    return this.columnDEPT_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEPT_NAMEColumn {
                get {
                    return this.columnDEPT_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEPT_SNAMEColumn {
                get {
                    return this.columnDEPT_SNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEPT_ENAMEColumn {
                get {
                    return this.columnDEPT_ENAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IS_DELColumn {
                get {
                    return this.columnIS_DEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_DTMColumn {
                get {
                    return this.columnCREATE_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_USERColumn {
                get {
                    return this.columnCREATE_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODI_DTMColumn {
                get {
                    return this.columnMODI_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODI_USERColumn {
                get {
                    return this.columnMODI_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEL_DTMColumn {
                get {
                    return this.columnDEL_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEL_USERColumn {
                get {
                    return this.columnDEL_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DEPTRow this[int index] {
                get {
                    return ((DEPTRow)(this.Rows[index]));
                }
            }
            
            public event DEPTRowChangeEventHandler DEPTRowChanging;
            
            public event DEPTRowChangeEventHandler DEPTRowChanged;
            
            public event DEPTRowChangeEventHandler DEPTRowDeleting;
            
            public event DEPTRowChangeEventHandler DEPTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDEPTRow(DEPTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DEPTRow AddDEPTRow(string DEPT_NO, string DEPT_NAME, string DEPT_SNAME, string DEPT_ENAME, string IS_DEL, System.DateTime CREATE_DTM, string CREATE_USER, System.DateTime MODI_DTM, string MODI_USER, System.DateTime DEL_DTM, string DEL_USER) {
                DEPTRow rowDEPTRow = ((DEPTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DEPT_NO,
                        DEPT_NAME,
                        DEPT_SNAME,
                        DEPT_ENAME,
                        IS_DEL,
                        CREATE_DTM,
                        CREATE_USER,
                        MODI_DTM,
                        MODI_USER,
                        DEL_DTM,
                        DEL_USER};
                rowDEPTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDEPTRow);
                return rowDEPTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DEPTRow FindByDEPT_NO(string DEPT_NO) {
                return ((DEPTRow)(this.Rows.Find(new object[] {
                            DEPT_NO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DEPTDataTable cln = ((DEPTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DEPTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDEPT_NO = base.Columns["DEPT_NO"];
                this.columnDEPT_NAME = base.Columns["DEPT_NAME"];
                this.columnDEPT_SNAME = base.Columns["DEPT_SNAME"];
                this.columnDEPT_ENAME = base.Columns["DEPT_ENAME"];
                this.columnIS_DEL = base.Columns["IS_DEL"];
                this.columnCREATE_DTM = base.Columns["CREATE_DTM"];
                this.columnCREATE_USER = base.Columns["CREATE_USER"];
                this.columnMODI_DTM = base.Columns["MODI_DTM"];
                this.columnMODI_USER = base.Columns["MODI_USER"];
                this.columnDEL_DTM = base.Columns["DEL_DTM"];
                this.columnDEL_USER = base.Columns["DEL_USER"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDEPT_NO = new global::System.Data.DataColumn("DEPT_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPT_NO);
                this.columnDEPT_NAME = new global::System.Data.DataColumn("DEPT_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPT_NAME);
                this.columnDEPT_SNAME = new global::System.Data.DataColumn("DEPT_SNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPT_SNAME);
                this.columnDEPT_ENAME = new global::System.Data.DataColumn("DEPT_ENAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPT_ENAME);
                this.columnIS_DEL = new global::System.Data.DataColumn("IS_DEL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_DEL);
                this.columnCREATE_DTM = new global::System.Data.DataColumn("CREATE_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_DTM);
                this.columnCREATE_USER = new global::System.Data.DataColumn("CREATE_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_USER);
                this.columnMODI_DTM = new global::System.Data.DataColumn("MODI_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODI_DTM);
                this.columnMODI_USER = new global::System.Data.DataColumn("MODI_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODI_USER);
                this.columnDEL_DTM = new global::System.Data.DataColumn("DEL_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEL_DTM);
                this.columnDEL_USER = new global::System.Data.DataColumn("DEL_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEL_USER);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnDEPT_NO}, true));
                this.columnDEPT_NO.AllowDBNull = false;
                this.columnDEPT_NO.Unique = true;
                this.columnDEPT_NO.MaxLength = 32;
                this.columnDEPT_NAME.MaxLength = 100;
                this.columnDEPT_SNAME.MaxLength = 32;
                this.columnDEPT_ENAME.MaxLength = 50;
                this.columnIS_DEL.AllowDBNull = false;
                this.columnIS_DEL.MaxLength = 1;
                this.columnCREATE_USER.MaxLength = 50;
                this.columnMODI_USER.MaxLength = 50;
                this.columnDEL_USER.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DEPTRow NewDEPTRow() {
                return ((DEPTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DEPTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DEPTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DEPTRowChanged != null)) {
                    this.DEPTRowChanged(this, new DEPTRowChangeEvent(((DEPTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DEPTRowChanging != null)) {
                    this.DEPTRowChanging(this, new DEPTRowChangeEvent(((DEPTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DEPTRowDeleted != null)) {
                    this.DEPTRowDeleted(this, new DEPTRowChangeEvent(((DEPTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DEPTRowDeleting != null)) {
                    this.DEPTRowDeleting(this, new DEPTRowChangeEvent(((DEPTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDEPTRow(DEPTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                APP02_DeptImport_DTO ds = new APP02_DeptImport_DTO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DEPTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DEPT_TEMPDataTable : global::System.Data.TypedTableBase<DEPT_TEMPRow> {
            
            private global::System.Data.DataColumn columnDEPT_NO;
            
            private global::System.Data.DataColumn columnDEPT_NAME;
            
            private global::System.Data.DataColumn columnDEPT_SNAME;
            
            private global::System.Data.DataColumn columnDEPT_ENAME;
            
            private global::System.Data.DataColumn columnIS_DEL;
            
            private global::System.Data.DataColumn columnCREATE_DTM;
            
            private global::System.Data.DataColumn columnCREATE_USER;
            
            private global::System.Data.DataColumn columnMODI_DTM;
            
            private global::System.Data.DataColumn columnMODI_USER;
            
            private global::System.Data.DataColumn columnDEL_DTM;
            
            private global::System.Data.DataColumn columnDEL_USER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DEPT_TEMPDataTable() {
                this.TableName = "DEPT_TEMP";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DEPT_TEMPDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DEPT_TEMPDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEPT_NOColumn {
                get {
                    return this.columnDEPT_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEPT_NAMEColumn {
                get {
                    return this.columnDEPT_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEPT_SNAMEColumn {
                get {
                    return this.columnDEPT_SNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEPT_ENAMEColumn {
                get {
                    return this.columnDEPT_ENAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IS_DELColumn {
                get {
                    return this.columnIS_DEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_DTMColumn {
                get {
                    return this.columnCREATE_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_USERColumn {
                get {
                    return this.columnCREATE_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODI_DTMColumn {
                get {
                    return this.columnMODI_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODI_USERColumn {
                get {
                    return this.columnMODI_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEL_DTMColumn {
                get {
                    return this.columnDEL_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEL_USERColumn {
                get {
                    return this.columnDEL_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DEPT_TEMPRow this[int index] {
                get {
                    return ((DEPT_TEMPRow)(this.Rows[index]));
                }
            }
            
            public event DEPT_TEMPRowChangeEventHandler DEPT_TEMPRowChanging;
            
            public event DEPT_TEMPRowChangeEventHandler DEPT_TEMPRowChanged;
            
            public event DEPT_TEMPRowChangeEventHandler DEPT_TEMPRowDeleting;
            
            public event DEPT_TEMPRowChangeEventHandler DEPT_TEMPRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDEPT_TEMPRow(DEPT_TEMPRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DEPT_TEMPRow AddDEPT_TEMPRow(string DEPT_NO, string DEPT_NAME, string DEPT_SNAME, string DEPT_ENAME, string IS_DEL, System.DateTime CREATE_DTM, string CREATE_USER, System.DateTime MODI_DTM, string MODI_USER, System.DateTime DEL_DTM, string DEL_USER) {
                DEPT_TEMPRow rowDEPT_TEMPRow = ((DEPT_TEMPRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DEPT_NO,
                        DEPT_NAME,
                        DEPT_SNAME,
                        DEPT_ENAME,
                        IS_DEL,
                        CREATE_DTM,
                        CREATE_USER,
                        MODI_DTM,
                        MODI_USER,
                        DEL_DTM,
                        DEL_USER};
                rowDEPT_TEMPRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDEPT_TEMPRow);
                return rowDEPT_TEMPRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DEPT_TEMPDataTable cln = ((DEPT_TEMPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DEPT_TEMPDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDEPT_NO = base.Columns["DEPT_NO"];
                this.columnDEPT_NAME = base.Columns["DEPT_NAME"];
                this.columnDEPT_SNAME = base.Columns["DEPT_SNAME"];
                this.columnDEPT_ENAME = base.Columns["DEPT_ENAME"];
                this.columnIS_DEL = base.Columns["IS_DEL"];
                this.columnCREATE_DTM = base.Columns["CREATE_DTM"];
                this.columnCREATE_USER = base.Columns["CREATE_USER"];
                this.columnMODI_DTM = base.Columns["MODI_DTM"];
                this.columnMODI_USER = base.Columns["MODI_USER"];
                this.columnDEL_DTM = base.Columns["DEL_DTM"];
                this.columnDEL_USER = base.Columns["DEL_USER"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDEPT_NO = new global::System.Data.DataColumn("DEPT_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPT_NO);
                this.columnDEPT_NAME = new global::System.Data.DataColumn("DEPT_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPT_NAME);
                this.columnDEPT_SNAME = new global::System.Data.DataColumn("DEPT_SNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPT_SNAME);
                this.columnDEPT_ENAME = new global::System.Data.DataColumn("DEPT_ENAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPT_ENAME);
                this.columnIS_DEL = new global::System.Data.DataColumn("IS_DEL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_DEL);
                this.columnCREATE_DTM = new global::System.Data.DataColumn("CREATE_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_DTM);
                this.columnCREATE_USER = new global::System.Data.DataColumn("CREATE_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_USER);
                this.columnMODI_DTM = new global::System.Data.DataColumn("MODI_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODI_DTM);
                this.columnMODI_USER = new global::System.Data.DataColumn("MODI_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODI_USER);
                this.columnDEL_DTM = new global::System.Data.DataColumn("DEL_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEL_DTM);
                this.columnDEL_USER = new global::System.Data.DataColumn("DEL_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEL_USER);
                this.columnDEPT_NO.AllowDBNull = false;
                this.columnDEPT_NO.MaxLength = 32;
                this.columnDEPT_NAME.MaxLength = 100;
                this.columnDEPT_SNAME.MaxLength = 32;
                this.columnDEPT_ENAME.MaxLength = 50;
                this.columnIS_DEL.AllowDBNull = false;
                this.columnIS_DEL.MaxLength = 1;
                this.columnCREATE_USER.MaxLength = 50;
                this.columnMODI_USER.MaxLength = 50;
                this.columnDEL_USER.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DEPT_TEMPRow NewDEPT_TEMPRow() {
                return ((DEPT_TEMPRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DEPT_TEMPRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DEPT_TEMPRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DEPT_TEMPRowChanged != null)) {
                    this.DEPT_TEMPRowChanged(this, new DEPT_TEMPRowChangeEvent(((DEPT_TEMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DEPT_TEMPRowChanging != null)) {
                    this.DEPT_TEMPRowChanging(this, new DEPT_TEMPRowChangeEvent(((DEPT_TEMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DEPT_TEMPRowDeleted != null)) {
                    this.DEPT_TEMPRowDeleted(this, new DEPT_TEMPRowChangeEvent(((DEPT_TEMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DEPT_TEMPRowDeleting != null)) {
                    this.DEPT_TEMPRowDeleting(this, new DEPT_TEMPRowChangeEvent(((DEPT_TEMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDEPT_TEMPRow(DEPT_TEMPRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                APP02_DeptImport_DTO ds = new APP02_DeptImport_DTO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DEPT_TEMPDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DEPT_OLDRow : global::System.Data.DataRow {
            
            private DEPT_OLDDataTable tableDEPT_OLD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DEPT_OLDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDEPT_OLD = ((DEPT_OLDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEPTNO {
                get {
                    return ((string)(this[this.tableDEPT_OLD.DEPTNOColumn]));
                }
                set {
                    this[this.tableDEPT_OLD.DEPTNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMPANYCODE {
                get {
                    return ((string)(this[this.tableDEPT_OLD.COMPANYCODEColumn]));
                }
                set {
                    this[this.tableDEPT_OLD.COMPANYCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEPTNAME {
                get {
                    try {
                        return ((string)(this[this.tableDEPT_OLD.DEPTNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPT_OLD\' 中資料行 \'DEPTNAME\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPT_OLD.DEPTNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COSTCENTER {
                get {
                    try {
                        return ((string)(this[this.tableDEPT_OLD.COSTCENTERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPT_OLD\' 中資料行 \'COSTCENTER\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPT_OLD.COSTCENTERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UPDDATE {
                get {
                    try {
                        return ((string)(this[this.tableDEPT_OLD.UPDDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPT_OLD\' 中資料行 \'UPDDATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPT_OLD.UPDDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UPDUSRNO {
                get {
                    try {
                        return ((string)(this[this.tableDEPT_OLD.UPDUSRNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPT_OLD\' 中資料行 \'UPDUSRNO\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPT_OLD.UPDUSRNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ULSNO {
                get {
                    try {
                        return ((string)(this[this.tableDEPT_OLD.ULSNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPT_OLD\' 中資料行 \'ULSNO\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPT_OLD.ULSNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ISACTIVE {
                get {
                    try {
                        return ((string)(this[this.tableDEPT_OLD.ISACTIVEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPT_OLD\' 中資料行 \'ISACTIVE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPT_OLD.ISACTIVEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEPTNAMENull() {
                return this.IsNull(this.tableDEPT_OLD.DEPTNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEPTNAMENull() {
                this[this.tableDEPT_OLD.DEPTNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOSTCENTERNull() {
                return this.IsNull(this.tableDEPT_OLD.COSTCENTERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOSTCENTERNull() {
                this[this.tableDEPT_OLD.COSTCENTERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUPDDATENull() {
                return this.IsNull(this.tableDEPT_OLD.UPDDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUPDDATENull() {
                this[this.tableDEPT_OLD.UPDDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUPDUSRNONull() {
                return this.IsNull(this.tableDEPT_OLD.UPDUSRNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUPDUSRNONull() {
                this[this.tableDEPT_OLD.UPDUSRNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsULSNONull() {
                return this.IsNull(this.tableDEPT_OLD.ULSNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetULSNONull() {
                this[this.tableDEPT_OLD.ULSNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsISACTIVENull() {
                return this.IsNull(this.tableDEPT_OLD.ISACTIVEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetISACTIVENull() {
                this[this.tableDEPT_OLD.ISACTIVEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DEPTRow : global::System.Data.DataRow {
            
            private DEPTDataTable tableDEPT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DEPTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDEPT = ((DEPTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEPT_NO {
                get {
                    return ((string)(this[this.tableDEPT.DEPT_NOColumn]));
                }
                set {
                    this[this.tableDEPT.DEPT_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEPT_NAME {
                get {
                    try {
                        return ((string)(this[this.tableDEPT.DEPT_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPT\' 中資料行 \'DEPT_NAME\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPT.DEPT_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEPT_SNAME {
                get {
                    try {
                        return ((string)(this[this.tableDEPT.DEPT_SNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPT\' 中資料行 \'DEPT_SNAME\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPT.DEPT_SNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEPT_ENAME {
                get {
                    try {
                        return ((string)(this[this.tableDEPT.DEPT_ENAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPT\' 中資料行 \'DEPT_ENAME\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPT.DEPT_ENAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IS_DEL {
                get {
                    return ((string)(this[this.tableDEPT.IS_DELColumn]));
                }
                set {
                    this[this.tableDEPT.IS_DELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CREATE_DTM {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDEPT.CREATE_DTMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPT\' 中資料行 \'CREATE_DTM\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPT.CREATE_DTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CREATE_USER {
                get {
                    try {
                        return ((string)(this[this.tableDEPT.CREATE_USERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPT\' 中資料行 \'CREATE_USER\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPT.CREATE_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODI_DTM {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDEPT.MODI_DTMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPT\' 中資料行 \'MODI_DTM\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPT.MODI_DTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODI_USER {
                get {
                    try {
                        return ((string)(this[this.tableDEPT.MODI_USERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPT\' 中資料行 \'MODI_USER\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPT.MODI_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DEL_DTM {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDEPT.DEL_DTMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPT\' 中資料行 \'DEL_DTM\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPT.DEL_DTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEL_USER {
                get {
                    try {
                        return ((string)(this[this.tableDEPT.DEL_USERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPT\' 中資料行 \'DEL_USER\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPT.DEL_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEPT_NAMENull() {
                return this.IsNull(this.tableDEPT.DEPT_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEPT_NAMENull() {
                this[this.tableDEPT.DEPT_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEPT_SNAMENull() {
                return this.IsNull(this.tableDEPT.DEPT_SNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEPT_SNAMENull() {
                this[this.tableDEPT.DEPT_SNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEPT_ENAMENull() {
                return this.IsNull(this.tableDEPT.DEPT_ENAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEPT_ENAMENull() {
                this[this.tableDEPT.DEPT_ENAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCREATE_DTMNull() {
                return this.IsNull(this.tableDEPT.CREATE_DTMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCREATE_DTMNull() {
                this[this.tableDEPT.CREATE_DTMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCREATE_USERNull() {
                return this.IsNull(this.tableDEPT.CREATE_USERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCREATE_USERNull() {
                this[this.tableDEPT.CREATE_USERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODI_DTMNull() {
                return this.IsNull(this.tableDEPT.MODI_DTMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODI_DTMNull() {
                this[this.tableDEPT.MODI_DTMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODI_USERNull() {
                return this.IsNull(this.tableDEPT.MODI_USERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODI_USERNull() {
                this[this.tableDEPT.MODI_USERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEL_DTMNull() {
                return this.IsNull(this.tableDEPT.DEL_DTMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEL_DTMNull() {
                this[this.tableDEPT.DEL_DTMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEL_USERNull() {
                return this.IsNull(this.tableDEPT.DEL_USERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEL_USERNull() {
                this[this.tableDEPT.DEL_USERColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DEPT_TEMPRow : global::System.Data.DataRow {
            
            private DEPT_TEMPDataTable tableDEPT_TEMP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DEPT_TEMPRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDEPT_TEMP = ((DEPT_TEMPDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEPT_NO {
                get {
                    return ((string)(this[this.tableDEPT_TEMP.DEPT_NOColumn]));
                }
                set {
                    this[this.tableDEPT_TEMP.DEPT_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEPT_NAME {
                get {
                    try {
                        return ((string)(this[this.tableDEPT_TEMP.DEPT_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPT_TEMP\' 中資料行 \'DEPT_NAME\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPT_TEMP.DEPT_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEPT_SNAME {
                get {
                    try {
                        return ((string)(this[this.tableDEPT_TEMP.DEPT_SNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPT_TEMP\' 中資料行 \'DEPT_SNAME\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPT_TEMP.DEPT_SNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEPT_ENAME {
                get {
                    try {
                        return ((string)(this[this.tableDEPT_TEMP.DEPT_ENAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPT_TEMP\' 中資料行 \'DEPT_ENAME\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPT_TEMP.DEPT_ENAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IS_DEL {
                get {
                    return ((string)(this[this.tableDEPT_TEMP.IS_DELColumn]));
                }
                set {
                    this[this.tableDEPT_TEMP.IS_DELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CREATE_DTM {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDEPT_TEMP.CREATE_DTMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPT_TEMP\' 中資料行 \'CREATE_DTM\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPT_TEMP.CREATE_DTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CREATE_USER {
                get {
                    try {
                        return ((string)(this[this.tableDEPT_TEMP.CREATE_USERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPT_TEMP\' 中資料行 \'CREATE_USER\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPT_TEMP.CREATE_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODI_DTM {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDEPT_TEMP.MODI_DTMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPT_TEMP\' 中資料行 \'MODI_DTM\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPT_TEMP.MODI_DTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODI_USER {
                get {
                    try {
                        return ((string)(this[this.tableDEPT_TEMP.MODI_USERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPT_TEMP\' 中資料行 \'MODI_USER\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPT_TEMP.MODI_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DEL_DTM {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDEPT_TEMP.DEL_DTMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPT_TEMP\' 中資料行 \'DEL_DTM\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPT_TEMP.DEL_DTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEL_USER {
                get {
                    try {
                        return ((string)(this[this.tableDEPT_TEMP.DEL_USERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPT_TEMP\' 中資料行 \'DEL_USER\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPT_TEMP.DEL_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEPT_NAMENull() {
                return this.IsNull(this.tableDEPT_TEMP.DEPT_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEPT_NAMENull() {
                this[this.tableDEPT_TEMP.DEPT_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEPT_SNAMENull() {
                return this.IsNull(this.tableDEPT_TEMP.DEPT_SNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEPT_SNAMENull() {
                this[this.tableDEPT_TEMP.DEPT_SNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEPT_ENAMENull() {
                return this.IsNull(this.tableDEPT_TEMP.DEPT_ENAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEPT_ENAMENull() {
                this[this.tableDEPT_TEMP.DEPT_ENAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCREATE_DTMNull() {
                return this.IsNull(this.tableDEPT_TEMP.CREATE_DTMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCREATE_DTMNull() {
                this[this.tableDEPT_TEMP.CREATE_DTMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCREATE_USERNull() {
                return this.IsNull(this.tableDEPT_TEMP.CREATE_USERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCREATE_USERNull() {
                this[this.tableDEPT_TEMP.CREATE_USERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODI_DTMNull() {
                return this.IsNull(this.tableDEPT_TEMP.MODI_DTMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODI_DTMNull() {
                this[this.tableDEPT_TEMP.MODI_DTMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODI_USERNull() {
                return this.IsNull(this.tableDEPT_TEMP.MODI_USERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODI_USERNull() {
                this[this.tableDEPT_TEMP.MODI_USERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEL_DTMNull() {
                return this.IsNull(this.tableDEPT_TEMP.DEL_DTMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEL_DTMNull() {
                this[this.tableDEPT_TEMP.DEL_DTMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEL_USERNull() {
                return this.IsNull(this.tableDEPT_TEMP.DEL_USERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEL_USERNull() {
                this[this.tableDEPT_TEMP.DEL_USERColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DEPT_OLDRowChangeEvent : global::System.EventArgs {
            
            private DEPT_OLDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DEPT_OLDRowChangeEvent(DEPT_OLDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DEPT_OLDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DEPTRowChangeEvent : global::System.EventArgs {
            
            private DEPTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DEPTRowChangeEvent(DEPTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DEPTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DEPT_TEMPRowChangeEvent : global::System.EventArgs {
            
            private DEPT_TEMPRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DEPT_TEMPRowChangeEvent(DEPT_TEMPRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DEPT_TEMPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace FET.POS.Model.DTO.ConvertApp.APP02_DeptImport_DTOTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DEPT_OLDTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DEPT_OLDTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DEPT_OLD";
            tableMapping.ColumnMappings.Add("DEPTNO", "DEPTNO");
            tableMapping.ColumnMappings.Add("COMPANYCODE", "COMPANYCODE");
            tableMapping.ColumnMappings.Add("DEPTNAME", "DEPTNAME");
            tableMapping.ColumnMappings.Add("COSTCENTER", "COSTCENTER");
            tableMapping.ColumnMappings.Add("UPDDATE", "UPDDATE");
            tableMapping.ColumnMappings.Add("UPDUSRNO", "UPDUSRNO");
            tableMapping.ColumnMappings.Add("ULSNO", "ULSNO");
            tableMapping.ColumnMappings.Add("ISACTIVE", "ISACTIVE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""POSUSER"".""DEPT"" WHERE ((""DEPTNO"" = :Original_DEPTNO) AND (""COMPANYCODE"" = :Original_COMPANYCODE) AND ((:IsNull_DEPTNAME = 1 AND ""DEPTNAME"" IS NULL) OR (""DEPTNAME"" = :Original_DEPTNAME)) AND ((:IsNull_COSTCENTER = 1 AND ""COSTCENTER"" IS NULL) OR (""COSTCENTER"" = :Original_COSTCENTER)) AND ((:IsNull_UPDDATE = 1 AND ""UPDDATE"" IS NULL) OR (""UPDDATE"" = :Original_UPDDATE)) AND ((:IsNull_UPDUSRNO = 1 AND ""UPDUSRNO"" IS NULL) OR (""UPDUSRNO"" = :Original_UPDUSRNO)) AND ((:IsNull_ULSNO = 1 AND ""ULSNO"" IS NULL) OR (""ULSNO"" = :Original_ULSNO)) AND ((:IsNull_ISACTIVE = 1 AND ""ISACTIVE"" IS NULL) OR (""ISACTIVE"" = :Original_ISACTIVE)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_DEPTNO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DEPTNO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_COMPANYCODE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "COMPANYCODE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_DEPTNAME", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "DEPTNAME", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_DEPTNAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DEPTNAME", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_COSTCENTER", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "COSTCENTER", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_COSTCENTER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "COSTCENTER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_UPDDATE", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "UPDDATE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_UPDDATE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "UPDDATE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_UPDUSRNO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "UPDUSRNO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_UPDUSRNO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "UPDUSRNO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_ULSNO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "ULSNO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ULSNO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ULSNO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_ISACTIVE", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "ISACTIVE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ISACTIVE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ISACTIVE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"POSUSER\".\"DEPT\" (\"DEPTNO\", \"COMPANYCODE\", \"DEPTNAME\", \"COSTCENTER\", " +
                "\"UPDDATE\", \"UPDUSRNO\", \"ULSNO\", \"ISACTIVE\") VALUES (:DEPTNO, :COMPANYCODE, :DEPT" +
                "NAME, :COSTCENTER, :UPDDATE, :UPDUSRNO, :ULSNO, :ISACTIVE)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DEPTNO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DEPTNO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("COMPANYCODE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "COMPANYCODE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DEPTNAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DEPTNAME", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("COSTCENTER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "COSTCENTER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("UPDDATE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "UPDDATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("UPDUSRNO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "UPDUSRNO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ULSNO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ULSNO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ISACTIVE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ISACTIVE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""POSUSER"".""DEPT"" SET ""DEPTNO"" = :DEPTNO, ""COMPANYCODE"" = :COMPANYCODE, ""DEPTNAME"" = :DEPTNAME, ""COSTCENTER"" = :COSTCENTER, ""UPDDATE"" = :UPDDATE, ""UPDUSRNO"" = :UPDUSRNO, ""ULSNO"" = :ULSNO, ""ISACTIVE"" = :ISACTIVE WHERE ((""DEPTNO"" = :Original_DEPTNO) AND (""COMPANYCODE"" = :Original_COMPANYCODE) AND ((:IsNull_DEPTNAME = 1 AND ""DEPTNAME"" IS NULL) OR (""DEPTNAME"" = :Original_DEPTNAME)) AND ((:IsNull_COSTCENTER = 1 AND ""COSTCENTER"" IS NULL) OR (""COSTCENTER"" = :Original_COSTCENTER)) AND ((:IsNull_UPDDATE = 1 AND ""UPDDATE"" IS NULL) OR (""UPDDATE"" = :Original_UPDDATE)) AND ((:IsNull_UPDUSRNO = 1 AND ""UPDUSRNO"" IS NULL) OR (""UPDUSRNO"" = :Original_UPDUSRNO)) AND ((:IsNull_ULSNO = 1 AND ""ULSNO"" IS NULL) OR (""ULSNO"" = :Original_ULSNO)) AND ((:IsNull_ISACTIVE = 1 AND ""ISACTIVE"" IS NULL) OR (""ISACTIVE"" = :Original_ISACTIVE)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DEPTNO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DEPTNO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("COMPANYCODE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "COMPANYCODE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DEPTNAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DEPTNAME", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("COSTCENTER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "COSTCENTER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("UPDDATE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "UPDDATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("UPDUSRNO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "UPDUSRNO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ULSNO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ULSNO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ISACTIVE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ISACTIVE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_DEPTNO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DEPTNO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_COMPANYCODE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "COMPANYCODE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_DEPTNAME", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "DEPTNAME", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_DEPTNAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DEPTNAME", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_COSTCENTER", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "COSTCENTER", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_COSTCENTER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "COSTCENTER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_UPDDATE", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "UPDDATE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_UPDDATE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "UPDDATE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_UPDUSRNO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "UPDUSRNO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_UPDUSRNO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "UPDUSRNO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_ULSNO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "ULSNO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ULSNO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ULSNO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_ISACTIVE", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "ISACTIVE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ISACTIVE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ISACTIVE", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::FET.POS.Model.Properties.Settings.Default.ConnectionString2;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT DEPTNO, COMPANYCODE, DEPTNAME, COSTCENTER, UPDDATE, UPDUSRNO, ULSNO, ISACT" +
                "IVE FROM POSUSER.DEPT";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(APP02_DeptImport_DTO.DEPT_OLDDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual APP02_DeptImport_DTO.DEPT_OLDDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            APP02_DeptImport_DTO.DEPT_OLDDataTable dataTable = new APP02_DeptImport_DTO.DEPT_OLDDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(APP02_DeptImport_DTO.DEPT_OLDDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(APP02_DeptImport_DTO dataSet) {
            return this.Adapter.Update(dataSet, "DEPT_OLD");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_DEPTNO, string Original_COMPANYCODE, string Original_DEPTNAME, string Original_COSTCENTER, string Original_UPDDATE, string Original_UPDUSRNO, string Original_ULSNO, string Original_ISACTIVE) {
            if ((Original_DEPTNO == null)) {
                throw new global::System.ArgumentNullException("Original_DEPTNO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_DEPTNO));
            }
            if ((Original_COMPANYCODE == null)) {
                throw new global::System.ArgumentNullException("Original_COMPANYCODE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_COMPANYCODE));
            }
            if ((Original_DEPTNAME == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_DEPTNAME));
            }
            if ((Original_COSTCENTER == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_COSTCENTER));
            }
            if ((Original_UPDDATE == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_UPDDATE));
            }
            if ((Original_UPDUSRNO == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_UPDUSRNO));
            }
            if ((Original_ULSNO == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_ULSNO));
            }
            if ((Original_ISACTIVE == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_ISACTIVE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string DEPTNO, string COMPANYCODE, string DEPTNAME, string COSTCENTER, string UPDDATE, string UPDUSRNO, string ULSNO, string ISACTIVE) {
            if ((DEPTNO == null)) {
                throw new global::System.ArgumentNullException("DEPTNO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(DEPTNO));
            }
            if ((COMPANYCODE == null)) {
                throw new global::System.ArgumentNullException("COMPANYCODE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(COMPANYCODE));
            }
            if ((DEPTNAME == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(DEPTNAME));
            }
            if ((COSTCENTER == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(COSTCENTER));
            }
            if ((UPDDATE == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(UPDDATE));
            }
            if ((UPDUSRNO == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(UPDUSRNO));
            }
            if ((ULSNO == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(ULSNO));
            }
            if ((ISACTIVE == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(ISACTIVE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string DEPTNO, 
                    string COMPANYCODE, 
                    string DEPTNAME, 
                    string COSTCENTER, 
                    string UPDDATE, 
                    string UPDUSRNO, 
                    string ULSNO, 
                    string ISACTIVE, 
                    string Original_DEPTNO, 
                    string Original_COMPANYCODE, 
                    string Original_DEPTNAME, 
                    string Original_COSTCENTER, 
                    string Original_UPDDATE, 
                    string Original_UPDUSRNO, 
                    string Original_ULSNO, 
                    string Original_ISACTIVE) {
            if ((DEPTNO == null)) {
                throw new global::System.ArgumentNullException("DEPTNO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(DEPTNO));
            }
            if ((COMPANYCODE == null)) {
                throw new global::System.ArgumentNullException("COMPANYCODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(COMPANYCODE));
            }
            if ((DEPTNAME == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(DEPTNAME));
            }
            if ((COSTCENTER == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(COSTCENTER));
            }
            if ((UPDDATE == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(UPDDATE));
            }
            if ((UPDUSRNO == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(UPDUSRNO));
            }
            if ((ULSNO == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(ULSNO));
            }
            if ((ISACTIVE == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(ISACTIVE));
            }
            if ((Original_DEPTNO == null)) {
                throw new global::System.ArgumentNullException("Original_DEPTNO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_DEPTNO));
            }
            if ((Original_COMPANYCODE == null)) {
                throw new global::System.ArgumentNullException("Original_COMPANYCODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_COMPANYCODE));
            }
            if ((Original_DEPTNAME == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_DEPTNAME));
            }
            if ((Original_COSTCENTER == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_COSTCENTER));
            }
            if ((Original_UPDDATE == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_UPDDATE));
            }
            if ((Original_UPDUSRNO == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_UPDUSRNO));
            }
            if ((Original_ULSNO == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_ULSNO));
            }
            if ((Original_ISACTIVE == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_ISACTIVE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string DEPTNAME, string COSTCENTER, string UPDDATE, string UPDUSRNO, string ULSNO, string ISACTIVE, string Original_DEPTNO, string Original_COMPANYCODE, string Original_DEPTNAME, string Original_COSTCENTER, string Original_UPDDATE, string Original_UPDUSRNO, string Original_ULSNO, string Original_ISACTIVE) {
            return this.Update(Original_DEPTNO, Original_COMPANYCODE, DEPTNAME, COSTCENTER, UPDDATE, UPDUSRNO, ULSNO, ISACTIVE, Original_DEPTNO, Original_COMPANYCODE, Original_DEPTNAME, Original_COSTCENTER, Original_UPDDATE, Original_UPDUSRNO, Original_ULSNO, Original_ISACTIVE);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DEPTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DEPTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DEPT";
            tableMapping.ColumnMappings.Add("DEPT_NO", "DEPT_NO");
            tableMapping.ColumnMappings.Add("DEPT_NAME", "DEPT_NAME");
            tableMapping.ColumnMappings.Add("DEPT_SNAME", "DEPT_SNAME");
            tableMapping.ColumnMappings.Add("DEPT_ENAME", "DEPT_ENAME");
            tableMapping.ColumnMappings.Add("IS_DEL", "IS_DEL");
            tableMapping.ColumnMappings.Add("CREATE_DTM", "CREATE_DTM");
            tableMapping.ColumnMappings.Add("CREATE_USER", "CREATE_USER");
            tableMapping.ColumnMappings.Add("MODI_DTM", "MODI_DTM");
            tableMapping.ColumnMappings.Add("MODI_USER", "MODI_USER");
            tableMapping.ColumnMappings.Add("DEL_DTM", "DEL_DTM");
            tableMapping.ColumnMappings.Add("DEL_USER", "DEL_USER");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""WEBPOS"".""DEPT"" WHERE ((""DEPT_NO"" = :Original_DEPT_NO) AND ((:IsNull_DEPT_NAME = 1 AND ""DEPT_NAME"" IS NULL) OR (""DEPT_NAME"" = :Original_DEPT_NAME)) AND ((:IsNull_DEPT_SNAME = 1 AND ""DEPT_SNAME"" IS NULL) OR (""DEPT_SNAME"" = :Original_DEPT_SNAME)) AND ((:IsNull_DEPT_ENAME = 1 AND ""DEPT_ENAME"" IS NULL) OR (""DEPT_ENAME"" = :Original_DEPT_ENAME)) AND (""IS_DEL"" = :Original_IS_DEL) AND ((:IsNull_CREATE_DTM = 1 AND ""CREATE_DTM"" IS NULL) OR (""CREATE_DTM"" = :Original_CREATE_DTM)) AND ((:IsNull_CREATE_USER = 1 AND ""CREATE_USER"" IS NULL) OR (""CREATE_USER"" = :Original_CREATE_USER)) AND ((:IsNull_MODI_DTM = 1 AND ""MODI_DTM"" IS NULL) OR (""MODI_DTM"" = :Original_MODI_DTM)) AND ((:IsNull_MODI_USER = 1 AND ""MODI_USER"" IS NULL) OR (""MODI_USER"" = :Original_MODI_USER)) AND ((:IsNull_DEL_DTM = 1 AND ""DEL_DTM"" IS NULL) OR (""DEL_DTM"" = :Original_DEL_DTM)) AND ((:IsNull_DEL_USER = 1 AND ""DEL_USER"" IS NULL) OR (""DEL_USER"" = :Original_DEL_USER)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_DEPT_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DEPT_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_DEPT_NAME", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "DEPT_NAME", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_DEPT_NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DEPT_NAME", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_DEPT_SNAME", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "DEPT_SNAME", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_DEPT_SNAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DEPT_SNAME", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_DEPT_ENAME", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "DEPT_ENAME", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_DEPT_ENAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DEPT_ENAME", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_IS_DEL", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "IS_DEL", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_CREATE_DTM", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "CREATE_DTM", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CREATE_DTM", global::System.Data.OracleClient.OracleType.Timestamp, 0, global::System.Data.ParameterDirection.Input, "CREATE_DTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_CREATE_USER", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "CREATE_USER", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CREATE_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CREATE_USER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_MODI_DTM", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "MODI_DTM", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MODI_DTM", global::System.Data.OracleClient.OracleType.Timestamp, 0, global::System.Data.ParameterDirection.Input, "MODI_DTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_MODI_USER", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "MODI_USER", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MODI_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MODI_USER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_DEL_DTM", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "DEL_DTM", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_DEL_DTM", global::System.Data.OracleClient.OracleType.Timestamp, 0, global::System.Data.ParameterDirection.Input, "DEL_DTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_DEL_USER", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "DEL_USER", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_DEL_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DEL_USER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""WEBPOS"".""DEPT"" (""DEPT_NO"", ""DEPT_NAME"", ""DEPT_SNAME"", ""DEPT_ENAME"", ""IS_DEL"", ""CREATE_DTM"", ""CREATE_USER"", ""MODI_DTM"", ""MODI_USER"", ""DEL_DTM"", ""DEL_USER"") VALUES (:DEPT_NO, :DEPT_NAME, :DEPT_SNAME, :DEPT_ENAME, :IS_DEL, :CREATE_DTM, :CREATE_USER, :MODI_DTM, :MODI_USER, :DEL_DTM, :DEL_USER)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DEPT_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DEPT_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DEPT_NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DEPT_NAME", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DEPT_SNAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DEPT_SNAME", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DEPT_ENAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DEPT_ENAME", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IS_DEL", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "IS_DEL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CREATE_DTM", global::System.Data.OracleClient.OracleType.Timestamp, 0, global::System.Data.ParameterDirection.Input, "CREATE_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CREATE_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CREATE_USER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MODI_DTM", global::System.Data.OracleClient.OracleType.Timestamp, 0, global::System.Data.ParameterDirection.Input, "MODI_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MODI_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MODI_USER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DEL_DTM", global::System.Data.OracleClient.OracleType.Timestamp, 0, global::System.Data.ParameterDirection.Input, "DEL_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DEL_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DEL_USER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""WEBPOS"".""DEPT"" SET ""DEPT_NO"" = :DEPT_NO, ""DEPT_NAME"" = :DEPT_NAME, ""DEPT_SNAME"" = :DEPT_SNAME, ""DEPT_ENAME"" = :DEPT_ENAME, ""IS_DEL"" = :IS_DEL, ""CREATE_DTM"" = :CREATE_DTM, ""CREATE_USER"" = :CREATE_USER, ""MODI_DTM"" = :MODI_DTM, ""MODI_USER"" = :MODI_USER, ""DEL_DTM"" = :DEL_DTM, ""DEL_USER"" = :DEL_USER WHERE ((""DEPT_NO"" = :Original_DEPT_NO) AND ((:IsNull_DEPT_NAME = 1 AND ""DEPT_NAME"" IS NULL) OR (""DEPT_NAME"" = :Original_DEPT_NAME)) AND ((:IsNull_DEPT_SNAME = 1 AND ""DEPT_SNAME"" IS NULL) OR (""DEPT_SNAME"" = :Original_DEPT_SNAME)) AND ((:IsNull_DEPT_ENAME = 1 AND ""DEPT_ENAME"" IS NULL) OR (""DEPT_ENAME"" = :Original_DEPT_ENAME)) AND (""IS_DEL"" = :Original_IS_DEL) AND ((:IsNull_CREATE_DTM = 1 AND ""CREATE_DTM"" IS NULL) OR (""CREATE_DTM"" = :Original_CREATE_DTM)) AND ((:IsNull_CREATE_USER = 1 AND ""CREATE_USER"" IS NULL) OR (""CREATE_USER"" = :Original_CREATE_USER)) AND ((:IsNull_MODI_DTM = 1 AND ""MODI_DTM"" IS NULL) OR (""MODI_DTM"" = :Original_MODI_DTM)) AND ((:IsNull_MODI_USER = 1 AND ""MODI_USER"" IS NULL) OR (""MODI_USER"" = :Original_MODI_USER)) AND ((:IsNull_DEL_DTM = 1 AND ""DEL_DTM"" IS NULL) OR (""DEL_DTM"" = :Original_DEL_DTM)) AND ((:IsNull_DEL_USER = 1 AND ""DEL_USER"" IS NULL) OR (""DEL_USER"" = :Original_DEL_USER)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DEPT_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DEPT_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DEPT_NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DEPT_NAME", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DEPT_SNAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DEPT_SNAME", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DEPT_ENAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DEPT_ENAME", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IS_DEL", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "IS_DEL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CREATE_DTM", global::System.Data.OracleClient.OracleType.Timestamp, 0, global::System.Data.ParameterDirection.Input, "CREATE_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CREATE_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CREATE_USER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MODI_DTM", global::System.Data.OracleClient.OracleType.Timestamp, 0, global::System.Data.ParameterDirection.Input, "MODI_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MODI_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MODI_USER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DEL_DTM", global::System.Data.OracleClient.OracleType.Timestamp, 0, global::System.Data.ParameterDirection.Input, "DEL_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DEL_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DEL_USER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_DEPT_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DEPT_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_DEPT_NAME", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "DEPT_NAME", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_DEPT_NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DEPT_NAME", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_DEPT_SNAME", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "DEPT_SNAME", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_DEPT_SNAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DEPT_SNAME", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_DEPT_ENAME", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "DEPT_ENAME", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_DEPT_ENAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DEPT_ENAME", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_IS_DEL", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "IS_DEL", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_CREATE_DTM", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "CREATE_DTM", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CREATE_DTM", global::System.Data.OracleClient.OracleType.Timestamp, 0, global::System.Data.ParameterDirection.Input, "CREATE_DTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_CREATE_USER", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "CREATE_USER", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CREATE_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CREATE_USER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_MODI_DTM", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "MODI_DTM", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MODI_DTM", global::System.Data.OracleClient.OracleType.Timestamp, 0, global::System.Data.ParameterDirection.Input, "MODI_DTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_MODI_USER", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "MODI_USER", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MODI_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MODI_USER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_DEL_DTM", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "DEL_DTM", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_DEL_DTM", global::System.Data.OracleClient.OracleType.Timestamp, 0, global::System.Data.ParameterDirection.Input, "DEL_DTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_DEL_USER", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "DEL_USER", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_DEL_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DEL_USER", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::FET.POS.Model.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT DEPT_NO, DEPT_NAME, DEPT_SNAME, DEPT_ENAME, IS_DEL, CREATE_DTM, CREATE_USE" +
                "R, MODI_DTM, MODI_USER, DEL_DTM, DEL_USER FROM WEBPOS.DEPT";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(APP02_DeptImport_DTO.DEPTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual APP02_DeptImport_DTO.DEPTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            APP02_DeptImport_DTO.DEPTDataTable dataTable = new APP02_DeptImport_DTO.DEPTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(APP02_DeptImport_DTO.DEPTDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(APP02_DeptImport_DTO dataSet) {
            return this.Adapter.Update(dataSet, "DEPT");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_DEPT_NO, string Original_DEPT_NAME, string Original_DEPT_SNAME, string Original_DEPT_ENAME, string Original_IS_DEL, global::System.Nullable<global::System.DateTime> Original_CREATE_DTM, string Original_CREATE_USER, global::System.Nullable<global::System.DateTime> Original_MODI_DTM, string Original_MODI_USER, global::System.Nullable<global::System.DateTime> Original_DEL_DTM, string Original_DEL_USER) {
            if ((Original_DEPT_NO == null)) {
                throw new global::System.ArgumentNullException("Original_DEPT_NO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_DEPT_NO));
            }
            if ((Original_DEPT_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_DEPT_NAME));
            }
            if ((Original_DEPT_SNAME == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_DEPT_SNAME));
            }
            if ((Original_DEPT_ENAME == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_DEPT_ENAME));
            }
            if ((Original_IS_DEL == null)) {
                throw new global::System.ArgumentNullException("Original_IS_DEL");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_IS_DEL));
            }
            if ((Original_CREATE_DTM.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((System.DateTime)(Original_CREATE_DTM.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_CREATE_USER == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_CREATE_USER));
            }
            if ((Original_MODI_DTM.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((System.DateTime)(Original_MODI_DTM.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_MODI_USER == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_MODI_USER));
            }
            if ((Original_DEL_DTM.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((System.DateTime)(Original_DEL_DTM.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_DEL_USER == null)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_DEL_USER));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string DEPT_NO, string DEPT_NAME, string DEPT_SNAME, string DEPT_ENAME, string IS_DEL, global::System.Nullable<global::System.DateTime> CREATE_DTM, string CREATE_USER, global::System.Nullable<global::System.DateTime> MODI_DTM, string MODI_USER, global::System.Nullable<global::System.DateTime> DEL_DTM, string DEL_USER) {
            if ((DEPT_NO == null)) {
                throw new global::System.ArgumentNullException("DEPT_NO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(DEPT_NO));
            }
            if ((DEPT_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(DEPT_NAME));
            }
            if ((DEPT_SNAME == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(DEPT_SNAME));
            }
            if ((DEPT_ENAME == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(DEPT_ENAME));
            }
            if ((IS_DEL == null)) {
                throw new global::System.ArgumentNullException("IS_DEL");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(IS_DEL));
            }
            if ((CREATE_DTM.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(CREATE_DTM.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((CREATE_USER == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(CREATE_USER));
            }
            if ((MODI_DTM.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(MODI_DTM.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((MODI_USER == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(MODI_USER));
            }
            if ((DEL_DTM.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(DEL_DTM.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((DEL_USER == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(DEL_USER));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string DEPT_NO, 
                    string DEPT_NAME, 
                    string DEPT_SNAME, 
                    string DEPT_ENAME, 
                    string IS_DEL, 
                    global::System.Nullable<global::System.DateTime> CREATE_DTM, 
                    string CREATE_USER, 
                    global::System.Nullable<global::System.DateTime> MODI_DTM, 
                    string MODI_USER, 
                    global::System.Nullable<global::System.DateTime> DEL_DTM, 
                    string DEL_USER, 
                    string Original_DEPT_NO, 
                    string Original_DEPT_NAME, 
                    string Original_DEPT_SNAME, 
                    string Original_DEPT_ENAME, 
                    string Original_IS_DEL, 
                    global::System.Nullable<global::System.DateTime> Original_CREATE_DTM, 
                    string Original_CREATE_USER, 
                    global::System.Nullable<global::System.DateTime> Original_MODI_DTM, 
                    string Original_MODI_USER, 
                    global::System.Nullable<global::System.DateTime> Original_DEL_DTM, 
                    string Original_DEL_USER) {
            if ((DEPT_NO == null)) {
                throw new global::System.ArgumentNullException("DEPT_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(DEPT_NO));
            }
            if ((DEPT_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(DEPT_NAME));
            }
            if ((DEPT_SNAME == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(DEPT_SNAME));
            }
            if ((DEPT_ENAME == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(DEPT_ENAME));
            }
            if ((IS_DEL == null)) {
                throw new global::System.ArgumentNullException("IS_DEL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(IS_DEL));
            }
            if ((CREATE_DTM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(CREATE_DTM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((CREATE_USER == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(CREATE_USER));
            }
            if ((MODI_DTM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(MODI_DTM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((MODI_USER == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(MODI_USER));
            }
            if ((DEL_DTM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(DEL_DTM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((DEL_USER == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(DEL_USER));
            }
            if ((Original_DEPT_NO == null)) {
                throw new global::System.ArgumentNullException("Original_DEPT_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_DEPT_NO));
            }
            if ((Original_DEPT_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_DEPT_NAME));
            }
            if ((Original_DEPT_SNAME == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_DEPT_SNAME));
            }
            if ((Original_DEPT_ENAME == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_DEPT_ENAME));
            }
            if ((Original_IS_DEL == null)) {
                throw new global::System.ArgumentNullException("Original_IS_DEL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_IS_DEL));
            }
            if ((Original_CREATE_DTM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(Original_CREATE_DTM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_CREATE_USER == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_CREATE_USER));
            }
            if ((Original_MODI_DTM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((System.DateTime)(Original_MODI_DTM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_MODI_USER == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_MODI_USER));
            }
            if ((Original_DEL_DTM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((System.DateTime)(Original_DEL_DTM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_DEL_USER == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_DEL_USER));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string DEPT_NAME, 
                    string DEPT_SNAME, 
                    string DEPT_ENAME, 
                    string IS_DEL, 
                    global::System.Nullable<global::System.DateTime> CREATE_DTM, 
                    string CREATE_USER, 
                    global::System.Nullable<global::System.DateTime> MODI_DTM, 
                    string MODI_USER, 
                    global::System.Nullable<global::System.DateTime> DEL_DTM, 
                    string DEL_USER, 
                    string Original_DEPT_NO, 
                    string Original_DEPT_NAME, 
                    string Original_DEPT_SNAME, 
                    string Original_DEPT_ENAME, 
                    string Original_IS_DEL, 
                    global::System.Nullable<global::System.DateTime> Original_CREATE_DTM, 
                    string Original_CREATE_USER, 
                    global::System.Nullable<global::System.DateTime> Original_MODI_DTM, 
                    string Original_MODI_USER, 
                    global::System.Nullable<global::System.DateTime> Original_DEL_DTM, 
                    string Original_DEL_USER) {
            return this.Update(Original_DEPT_NO, DEPT_NAME, DEPT_SNAME, DEPT_ENAME, IS_DEL, CREATE_DTM, CREATE_USER, MODI_DTM, MODI_USER, DEL_DTM, DEL_USER, Original_DEPT_NO, Original_DEPT_NAME, Original_DEPT_SNAME, Original_DEPT_ENAME, Original_IS_DEL, Original_CREATE_DTM, Original_CREATE_USER, Original_MODI_DTM, Original_MODI_USER, Original_DEL_DTM, Original_DEL_USER);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DEPT_TEMPTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DEPT_TEMPTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DEPT_TEMP";
            tableMapping.ColumnMappings.Add("DEPT_NO", "DEPT_NO");
            tableMapping.ColumnMappings.Add("DEPT_NAME", "DEPT_NAME");
            tableMapping.ColumnMappings.Add("DEPT_SNAME", "DEPT_SNAME");
            tableMapping.ColumnMappings.Add("DEPT_ENAME", "DEPT_ENAME");
            tableMapping.ColumnMappings.Add("IS_DEL", "IS_DEL");
            tableMapping.ColumnMappings.Add("CREATE_DTM", "CREATE_DTM");
            tableMapping.ColumnMappings.Add("CREATE_USER", "CREATE_USER");
            tableMapping.ColumnMappings.Add("MODI_DTM", "MODI_DTM");
            tableMapping.ColumnMappings.Add("MODI_USER", "MODI_USER");
            tableMapping.ColumnMappings.Add("DEL_DTM", "DEL_DTM");
            tableMapping.ColumnMappings.Add("DEL_USER", "DEL_USER");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""WEBPOS"".""DEPT_TEMP"" (""DEPT_NO"", ""DEPT_NAME"", ""DEPT_SNAME"", ""DEPT_ENAME"", ""IS_DEL"", ""CREATE_DTM"", ""CREATE_USER"", ""MODI_DTM"", ""MODI_USER"", ""DEL_DTM"", ""DEL_USER"") VALUES (:DEPT_NO, :DEPT_NAME, :DEPT_SNAME, :DEPT_ENAME, :IS_DEL, :CREATE_DTM, :CREATE_USER, :MODI_DTM, :MODI_USER, :DEL_DTM, :DEL_USER)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DEPT_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DEPT_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DEPT_NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DEPT_NAME", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DEPT_SNAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DEPT_SNAME", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DEPT_ENAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DEPT_ENAME", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IS_DEL", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "IS_DEL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CREATE_DTM", global::System.Data.OracleClient.OracleType.Timestamp, 0, global::System.Data.ParameterDirection.Input, "CREATE_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CREATE_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CREATE_USER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MODI_DTM", global::System.Data.OracleClient.OracleType.Timestamp, 0, global::System.Data.ParameterDirection.Input, "MODI_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MODI_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MODI_USER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DEL_DTM", global::System.Data.OracleClient.OracleType.Timestamp, 0, global::System.Data.ParameterDirection.Input, "DEL_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DEL_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DEL_USER", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::FET.POS.Model.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT DEPT_NO, DEPT_NAME, DEPT_SNAME, DEPT_ENAME, IS_DEL, CREATE_DTM, CREATE_USE" +
                "R, MODI_DTM, MODI_USER, DEL_DTM, DEL_USER FROM WEBPOS.DEPT_TEMP";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(APP02_DeptImport_DTO.DEPT_TEMPDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual APP02_DeptImport_DTO.DEPT_TEMPDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            APP02_DeptImport_DTO.DEPT_TEMPDataTable dataTable = new APP02_DeptImport_DTO.DEPT_TEMPDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(APP02_DeptImport_DTO.DEPT_TEMPDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(APP02_DeptImport_DTO dataSet) {
            return this.Adapter.Update(dataSet, "DEPT_TEMP");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string DEPT_NO, string DEPT_NAME, string DEPT_SNAME, string DEPT_ENAME, string IS_DEL, global::System.Nullable<global::System.DateTime> CREATE_DTM, string CREATE_USER, global::System.Nullable<global::System.DateTime> MODI_DTM, string MODI_USER, global::System.Nullable<global::System.DateTime> DEL_DTM, string DEL_USER) {
            if ((DEPT_NO == null)) {
                throw new global::System.ArgumentNullException("DEPT_NO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(DEPT_NO));
            }
            if ((DEPT_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(DEPT_NAME));
            }
            if ((DEPT_SNAME == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(DEPT_SNAME));
            }
            if ((DEPT_ENAME == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(DEPT_ENAME));
            }
            if ((IS_DEL == null)) {
                throw new global::System.ArgumentNullException("IS_DEL");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(IS_DEL));
            }
            if ((CREATE_DTM.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(CREATE_DTM.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((CREATE_USER == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(CREATE_USER));
            }
            if ((MODI_DTM.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(MODI_DTM.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((MODI_USER == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(MODI_USER));
            }
            if ((DEL_DTM.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(DEL_DTM.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((DEL_USER == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(DEL_USER));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private DEPT_OLDTableAdapter _dEPT_OLDTableAdapter;
        
        private DEPTTableAdapter _dEPTTableAdapter;
        
        private DEPT_TEMPTableAdapter _dEPT_TEMPTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public DEPT_OLDTableAdapter DEPT_OLDTableAdapter {
            get {
                return this._dEPT_OLDTableAdapter;
            }
            set {
                this._dEPT_OLDTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public DEPTTableAdapter DEPTTableAdapter {
            get {
                return this._dEPTTableAdapter;
            }
            set {
                this._dEPTTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public DEPT_TEMPTableAdapter DEPT_TEMPTableAdapter {
            get {
                return this._dEPT_TEMPTableAdapter;
            }
            set {
                this._dEPT_TEMPTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._dEPT_OLDTableAdapter != null) 
                            && (this._dEPT_OLDTableAdapter.Connection != null))) {
                    return this._dEPT_OLDTableAdapter.Connection;
                }
                if (((this._dEPTTableAdapter != null) 
                            && (this._dEPTTableAdapter.Connection != null))) {
                    return this._dEPTTableAdapter.Connection;
                }
                if (((this._dEPT_TEMPTableAdapter != null) 
                            && (this._dEPT_TEMPTableAdapter.Connection != null))) {
                    return this._dEPT_TEMPTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._dEPT_OLDTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._dEPTTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._dEPT_TEMPTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(APP02_DeptImport_DTO dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._dEPT_TEMPTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.DEPT_TEMP.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._dEPT_TEMPTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._dEPTTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.DEPT.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._dEPTTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._dEPT_OLDTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.DEPT_OLD.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._dEPT_OLDTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(APP02_DeptImport_DTO dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._dEPT_TEMPTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.DEPT_TEMP.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._dEPT_TEMPTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._dEPTTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.DEPT.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._dEPTTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._dEPT_OLDTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.DEPT_OLD.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._dEPT_OLDTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(APP02_DeptImport_DTO dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._dEPT_OLDTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.DEPT_OLD.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._dEPT_OLDTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._dEPTTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.DEPT.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._dEPTTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._dEPT_TEMPTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.DEPT_TEMP.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._dEPT_TEMPTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(APP02_DeptImport_DTO dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._dEPT_OLDTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._dEPT_OLDTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._dEPTTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._dEPTTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._dEPT_TEMPTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._dEPT_TEMPTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager 未包含連接資訊。請將每個 TableAdapterManager 的 TableAdapter 屬性設成有效的 Table" +
                        "Adapter 執行個體。");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("無法開始交易。目前的資料連接不支援交易或是目前的狀態不允許交易開始。");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._dEPT_OLDTableAdapter != null)) {
                    revertConnections.Add(this._dEPT_OLDTableAdapter, this._dEPT_OLDTableAdapter.Connection);
                    this._dEPT_OLDTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(workConnection));
                    this._dEPT_OLDTableAdapter.Transaction = ((global::System.Data.OracleClient.OracleTransaction)(workTransaction));
                    if (this._dEPT_OLDTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._dEPT_OLDTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._dEPT_OLDTableAdapter.Adapter);
                    }
                }
                if ((this._dEPTTableAdapter != null)) {
                    revertConnections.Add(this._dEPTTableAdapter, this._dEPTTableAdapter.Connection);
                    this._dEPTTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(workConnection));
                    this._dEPTTableAdapter.Transaction = ((global::System.Data.OracleClient.OracleTransaction)(workTransaction));
                    if (this._dEPTTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._dEPTTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._dEPTTableAdapter.Adapter);
                    }
                }
                if ((this._dEPT_TEMPTableAdapter != null)) {
                    revertConnections.Add(this._dEPT_TEMPTableAdapter, this._dEPT_TEMPTableAdapter.Connection);
                    this._dEPT_TEMPTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(workConnection));
                    this._dEPT_TEMPTableAdapter.Transaction = ((global::System.Data.OracleClient.OracleTransaction)(workTransaction));
                    if (this._dEPT_TEMPTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._dEPT_TEMPTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._dEPT_TEMPTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._dEPT_OLDTableAdapter != null)) {
                    this._dEPT_OLDTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(revertConnections[this._dEPT_OLDTableAdapter]));
                    this._dEPT_OLDTableAdapter.Transaction = null;
                }
                if ((this._dEPTTableAdapter != null)) {
                    this._dEPTTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(revertConnections[this._dEPTTableAdapter]));
                    this._dEPTTableAdapter.Transaction = null;
                }
                if ((this._dEPT_TEMPTableAdapter != null)) {
                    this._dEPT_TEMPTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(revertConnections[this._dEPT_TEMPTableAdapter]));
                    this._dEPT_TEMPTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591