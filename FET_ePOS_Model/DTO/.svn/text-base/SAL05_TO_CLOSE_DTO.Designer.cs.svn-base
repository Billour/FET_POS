//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:2.0.50727.4206
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace FET.POS.Model.DTO {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("SAL05_TO_CLOSE_DTO")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class SAL05_TO_CLOSE_DTO : global::System.Data.DataSet {
        
        private TO_CLOSE_HEADDataTable tableTO_CLOSE_HEAD;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SAL05_TO_CLOSE_DTO() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected SAL05_TO_CLOSE_DTO(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["TO_CLOSE_HEAD"] != null)) {
                    base.Tables.Add(new TO_CLOSE_HEADDataTable(ds.Tables["TO_CLOSE_HEAD"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TO_CLOSE_HEADDataTable TO_CLOSE_HEAD {
            get {
                return this.tableTO_CLOSE_HEAD;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            SAL05_TO_CLOSE_DTO cln = ((SAL05_TO_CLOSE_DTO)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["TO_CLOSE_HEAD"] != null)) {
                    base.Tables.Add(new TO_CLOSE_HEADDataTable(ds.Tables["TO_CLOSE_HEAD"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableTO_CLOSE_HEAD = ((TO_CLOSE_HEADDataTable)(base.Tables["TO_CLOSE_HEAD"]));
            if ((initTable == true)) {
                if ((this.tableTO_CLOSE_HEAD != null)) {
                    this.tableTO_CLOSE_HEAD.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "SAL05_TO_CLOSE_DTO";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/SAL05_TO_CLOSE_DTO.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTO_CLOSE_HEAD = new TO_CLOSE_HEADDataTable();
            base.Tables.Add(this.tableTO_CLOSE_HEAD);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTO_CLOSE_HEAD() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            SAL05_TO_CLOSE_DTO ds = new SAL05_TO_CLOSE_DTO();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void TO_CLOSE_HEADRowChangeEventHandler(object sender, TO_CLOSE_HEADRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TO_CLOSE_HEADDataTable : global::System.Data.TypedTableBase<TO_CLOSE_HEADRow> {
            
            private global::System.Data.DataColumn columnSTATUS;
            
            private global::System.Data.DataColumn columnAPPLY_DATE;
            
            private global::System.Data.DataColumn columnSTORE_NO;
            
            private global::System.Data.DataColumn columnSTORE_NAME;
            
            private global::System.Data.DataColumn columnSERVICE_TYPE;
            
            private global::System.Data.DataColumn columnMACHINE_ID;
            
            private global::System.Data.DataColumn columnTOTAL_AMOUNT;
            
            private global::System.Data.DataColumn columnSALE_PERSON;
            
            private global::System.Data.DataColumn columnCREATE_USER;
            
            private global::System.Data.DataColumn columnCREATE_DTM;
            
            private global::System.Data.DataColumn columnPOSUUID_DETAIL;
            
            private global::System.Data.DataColumn columnMODI_USER;
            
            private global::System.Data.DataColumn columnHRS_NO;
            
            private global::System.Data.DataColumn columnLEASE_NO;
            
            private global::System.Data.DataColumn columnREMARK;
            
            private global::System.Data.DataColumn columnMODI_DTM;
            
            private global::System.Data.DataColumn columnPOSUUID_MASTER;
            
            private global::System.Data.DataColumn columnBUNDLE_ID;
            
            private global::System.Data.DataColumn columnFUN_ID;
            
            private global::System.Data.DataColumn columnR_RATE;
            
            private global::System.Data.DataColumn columnDATA;
            
            private global::System.Data.DataColumn columnVOICE;
            
            private global::System.Data.DataColumn columnTRANS_TYPE;
            
            private global::System.Data.DataColumn columnAPPROVE_STATUS_POS;
            
            private global::System.Data.DataColumn columnCONN_FLAG;
            
            private global::System.Data.DataColumn columnQUERY_TABLE_NAME;
            
            private global::System.Data.DataColumn columnBUNDLE_TYPE;
            
            private global::System.Data.DataColumn columnSERVICE_SYS_ID;
            
            private global::System.Data.DataColumn columnAPPROVAL_DATE;
            
            private global::System.Data.DataColumn columnMNP;
            
            private global::System.Data.DataColumn columnBILLING_ACCOUNT_ID;
            
            private global::System.Data.DataColumn columnSUBSCRIBE_NO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TO_CLOSE_HEADDataTable() {
                this.TableName = "TO_CLOSE_HEAD";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TO_CLOSE_HEADDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TO_CLOSE_HEADDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STATUSColumn {
                get {
                    return this.columnSTATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn APPLY_DATEColumn {
                get {
                    return this.columnAPPLY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STORE_NOColumn {
                get {
                    return this.columnSTORE_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STORE_NAMEColumn {
                get {
                    return this.columnSTORE_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SERVICE_TYPEColumn {
                get {
                    return this.columnSERVICE_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MACHINE_IDColumn {
                get {
                    return this.columnMACHINE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TOTAL_AMOUNTColumn {
                get {
                    return this.columnTOTAL_AMOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SALE_PERSONColumn {
                get {
                    return this.columnSALE_PERSON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_USERColumn {
                get {
                    return this.columnCREATE_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_DTMColumn {
                get {
                    return this.columnCREATE_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn POSUUID_DETAILColumn {
                get {
                    return this.columnPOSUUID_DETAIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODI_USERColumn {
                get {
                    return this.columnMODI_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HRS_NOColumn {
                get {
                    return this.columnHRS_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LEASE_NOColumn {
                get {
                    return this.columnLEASE_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REMARKColumn {
                get {
                    return this.columnREMARK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODI_DTMColumn {
                get {
                    return this.columnMODI_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn POSUUID_MASTERColumn {
                get {
                    return this.columnPOSUUID_MASTER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BUNDLE_IDColumn {
                get {
                    return this.columnBUNDLE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FUN_IDColumn {
                get {
                    return this.columnFUN_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn R_RATEColumn {
                get {
                    return this.columnR_RATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DATAColumn {
                get {
                    return this.columnDATA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VOICEColumn {
                get {
                    return this.columnVOICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRANS_TYPEColumn {
                get {
                    return this.columnTRANS_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn APPROVE_STATUS_POSColumn {
                get {
                    return this.columnAPPROVE_STATUS_POS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CONN_FLAGColumn {
                get {
                    return this.columnCONN_FLAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QUERY_TABLE_NAMEColumn {
                get {
                    return this.columnQUERY_TABLE_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BUNDLE_TYPEColumn {
                get {
                    return this.columnBUNDLE_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SERVICE_SYS_IDColumn {
                get {
                    return this.columnSERVICE_SYS_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn APPROVAL_DATEColumn {
                get {
                    return this.columnAPPROVAL_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MNPColumn {
                get {
                    return this.columnMNP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BILLING_ACCOUNT_IDColumn {
                get {
                    return this.columnBILLING_ACCOUNT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SUBSCRIBE_NOColumn {
                get {
                    return this.columnSUBSCRIBE_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TO_CLOSE_HEADRow this[int index] {
                get {
                    return ((TO_CLOSE_HEADRow)(this.Rows[index]));
                }
            }
            
            public event TO_CLOSE_HEADRowChangeEventHandler TO_CLOSE_HEADRowChanging;
            
            public event TO_CLOSE_HEADRowChangeEventHandler TO_CLOSE_HEADRowChanged;
            
            public event TO_CLOSE_HEADRowChangeEventHandler TO_CLOSE_HEADRowDeleting;
            
            public event TO_CLOSE_HEADRowChangeEventHandler TO_CLOSE_HEADRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTO_CLOSE_HEADRow(TO_CLOSE_HEADRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TO_CLOSE_HEADRow AddTO_CLOSE_HEADRow(
                        string STATUS, 
                        System.DateTime APPLY_DATE, 
                        string STORE_NO, 
                        string STORE_NAME, 
                        decimal SERVICE_TYPE, 
                        string MACHINE_ID, 
                        decimal TOTAL_AMOUNT, 
                        string SALE_PERSON, 
                        string CREATE_USER, 
                        System.DateTime CREATE_DTM, 
                        string POSUUID_DETAIL, 
                        string MODI_USER, 
                        string HRS_NO, 
                        string LEASE_NO, 
                        string REMARK, 
                        System.DateTime MODI_DTM, 
                        string POSUUID_MASTER, 
                        string BUNDLE_ID, 
                        string FUN_ID, 
                        decimal R_RATE, 
                        string DATA, 
                        string VOICE, 
                        string TRANS_TYPE, 
                        string APPROVE_STATUS_POS, 
                        string CONN_FLAG, 
                        string QUERY_TABLE_NAME, 
                        string BUNDLE_TYPE, 
                        string SERVICE_SYS_ID, 
                        System.DateTime APPROVAL_DATE, 
                        string MNP, 
                        string BILLING_ACCOUNT_ID, 
                        string SUBSCRIBE_NO) {
                TO_CLOSE_HEADRow rowTO_CLOSE_HEADRow = ((TO_CLOSE_HEADRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        STATUS,
                        APPLY_DATE,
                        STORE_NO,
                        STORE_NAME,
                        SERVICE_TYPE,
                        MACHINE_ID,
                        TOTAL_AMOUNT,
                        SALE_PERSON,
                        CREATE_USER,
                        CREATE_DTM,
                        POSUUID_DETAIL,
                        MODI_USER,
                        HRS_NO,
                        LEASE_NO,
                        REMARK,
                        MODI_DTM,
                        POSUUID_MASTER,
                        BUNDLE_ID,
                        FUN_ID,
                        R_RATE,
                        DATA,
                        VOICE,
                        TRANS_TYPE,
                        APPROVE_STATUS_POS,
                        CONN_FLAG,
                        QUERY_TABLE_NAME,
                        BUNDLE_TYPE,
                        SERVICE_SYS_ID,
                        APPROVAL_DATE,
                        MNP,
                        BILLING_ACCOUNT_ID,
                        SUBSCRIBE_NO};
                rowTO_CLOSE_HEADRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTO_CLOSE_HEADRow);
                return rowTO_CLOSE_HEADRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TO_CLOSE_HEADRow FindByPOSUUID_DETAIL(string POSUUID_DETAIL) {
                return ((TO_CLOSE_HEADRow)(this.Rows.Find(new object[] {
                            POSUUID_DETAIL})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TO_CLOSE_HEADDataTable cln = ((TO_CLOSE_HEADDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TO_CLOSE_HEADDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSTATUS = base.Columns["STATUS"];
                this.columnAPPLY_DATE = base.Columns["APPLY_DATE"];
                this.columnSTORE_NO = base.Columns["STORE_NO"];
                this.columnSTORE_NAME = base.Columns["STORE_NAME"];
                this.columnSERVICE_TYPE = base.Columns["SERVICE_TYPE"];
                this.columnMACHINE_ID = base.Columns["MACHINE_ID"];
                this.columnTOTAL_AMOUNT = base.Columns["TOTAL_AMOUNT"];
                this.columnSALE_PERSON = base.Columns["SALE_PERSON"];
                this.columnCREATE_USER = base.Columns["CREATE_USER"];
                this.columnCREATE_DTM = base.Columns["CREATE_DTM"];
                this.columnPOSUUID_DETAIL = base.Columns["POSUUID_DETAIL"];
                this.columnMODI_USER = base.Columns["MODI_USER"];
                this.columnHRS_NO = base.Columns["HRS_NO"];
                this.columnLEASE_NO = base.Columns["LEASE_NO"];
                this.columnREMARK = base.Columns["REMARK"];
                this.columnMODI_DTM = base.Columns["MODI_DTM"];
                this.columnPOSUUID_MASTER = base.Columns["POSUUID_MASTER"];
                this.columnBUNDLE_ID = base.Columns["BUNDLE_ID"];
                this.columnFUN_ID = base.Columns["FUN_ID"];
                this.columnR_RATE = base.Columns["R_RATE"];
                this.columnDATA = base.Columns["DATA"];
                this.columnVOICE = base.Columns["VOICE"];
                this.columnTRANS_TYPE = base.Columns["TRANS_TYPE"];
                this.columnAPPROVE_STATUS_POS = base.Columns["APPROVE_STATUS_POS"];
                this.columnCONN_FLAG = base.Columns["CONN_FLAG"];
                this.columnQUERY_TABLE_NAME = base.Columns["QUERY_TABLE_NAME"];
                this.columnBUNDLE_TYPE = base.Columns["BUNDLE_TYPE"];
                this.columnSERVICE_SYS_ID = base.Columns["SERVICE_SYS_ID"];
                this.columnAPPROVAL_DATE = base.Columns["APPROVAL_DATE"];
                this.columnMNP = base.Columns["MNP"];
                this.columnBILLING_ACCOUNT_ID = base.Columns["BILLING_ACCOUNT_ID"];
                this.columnSUBSCRIBE_NO = base.Columns["SUBSCRIBE_NO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSTATUS = new global::System.Data.DataColumn("STATUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATUS);
                this.columnAPPLY_DATE = new global::System.Data.DataColumn("APPLY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPPLY_DATE);
                this.columnSTORE_NO = new global::System.Data.DataColumn("STORE_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTORE_NO);
                this.columnSTORE_NAME = new global::System.Data.DataColumn("STORE_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTORE_NAME);
                this.columnSERVICE_TYPE = new global::System.Data.DataColumn("SERVICE_TYPE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSERVICE_TYPE);
                this.columnMACHINE_ID = new global::System.Data.DataColumn("MACHINE_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMACHINE_ID);
                this.columnTOTAL_AMOUNT = new global::System.Data.DataColumn("TOTAL_AMOUNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTAL_AMOUNT);
                this.columnSALE_PERSON = new global::System.Data.DataColumn("SALE_PERSON", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALE_PERSON);
                this.columnCREATE_USER = new global::System.Data.DataColumn("CREATE_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_USER);
                this.columnCREATE_DTM = new global::System.Data.DataColumn("CREATE_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_DTM);
                this.columnPOSUUID_DETAIL = new global::System.Data.DataColumn("POSUUID_DETAIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOSUUID_DETAIL);
                this.columnMODI_USER = new global::System.Data.DataColumn("MODI_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODI_USER);
                this.columnHRS_NO = new global::System.Data.DataColumn("HRS_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHRS_NO);
                this.columnLEASE_NO = new global::System.Data.DataColumn("LEASE_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLEASE_NO);
                this.columnREMARK = new global::System.Data.DataColumn("REMARK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREMARK);
                this.columnMODI_DTM = new global::System.Data.DataColumn("MODI_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODI_DTM);
                this.columnPOSUUID_MASTER = new global::System.Data.DataColumn("POSUUID_MASTER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOSUUID_MASTER);
                this.columnBUNDLE_ID = new global::System.Data.DataColumn("BUNDLE_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBUNDLE_ID);
                this.columnFUN_ID = new global::System.Data.DataColumn("FUN_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFUN_ID);
                this.columnR_RATE = new global::System.Data.DataColumn("R_RATE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnR_RATE);
                this.columnDATA = new global::System.Data.DataColumn("DATA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATA);
                this.columnVOICE = new global::System.Data.DataColumn("VOICE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVOICE);
                this.columnTRANS_TYPE = new global::System.Data.DataColumn("TRANS_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANS_TYPE);
                this.columnAPPROVE_STATUS_POS = new global::System.Data.DataColumn("APPROVE_STATUS_POS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPPROVE_STATUS_POS);
                this.columnCONN_FLAG = new global::System.Data.DataColumn("CONN_FLAG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONN_FLAG);
                this.columnQUERY_TABLE_NAME = new global::System.Data.DataColumn("QUERY_TABLE_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQUERY_TABLE_NAME);
                this.columnBUNDLE_TYPE = new global::System.Data.DataColumn("BUNDLE_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBUNDLE_TYPE);
                this.columnSERVICE_SYS_ID = new global::System.Data.DataColumn("SERVICE_SYS_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSERVICE_SYS_ID);
                this.columnAPPROVAL_DATE = new global::System.Data.DataColumn("APPROVAL_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPPROVAL_DATE);
                this.columnMNP = new global::System.Data.DataColumn("MNP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMNP);
                this.columnBILLING_ACCOUNT_ID = new global::System.Data.DataColumn("BILLING_ACCOUNT_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBILLING_ACCOUNT_ID);
                this.columnSUBSCRIBE_NO = new global::System.Data.DataColumn("SUBSCRIBE_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUBSCRIBE_NO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPOSUUID_DETAIL}, true));
                this.columnSTATUS.MaxLength = 1;
                this.columnSTORE_NO.MaxLength = 20;
                this.columnSTORE_NAME.MaxLength = 50;
                this.columnMACHINE_ID.MaxLength = 50;
                this.columnSALE_PERSON.MaxLength = 20;
                this.columnCREATE_USER.MaxLength = 20;
                this.columnPOSUUID_DETAIL.AllowDBNull = false;
                this.columnPOSUUID_DETAIL.Unique = true;
                this.columnPOSUUID_DETAIL.MaxLength = 32;
                this.columnMODI_USER.MaxLength = 50;
                this.columnHRS_NO.MaxLength = 50;
                this.columnLEASE_NO.MaxLength = 50;
                this.columnREMARK.MaxLength = 500;
                this.columnPOSUUID_MASTER.MaxLength = 50;
                this.columnBUNDLE_ID.MaxLength = 50;
                this.columnFUN_ID.MaxLength = 20;
                this.columnDATA.MaxLength = 1;
                this.columnVOICE.MaxLength = 50;
                this.columnTRANS_TYPE.MaxLength = 50;
                this.columnAPPROVE_STATUS_POS.MaxLength = 15;
                this.columnCONN_FLAG.MaxLength = 50;
                this.columnQUERY_TABLE_NAME.MaxLength = 50;
                this.columnBUNDLE_TYPE.MaxLength = 50;
                this.columnSERVICE_SYS_ID.MaxLength = 50;
                this.columnMNP.MaxLength = 1;
                this.columnBILLING_ACCOUNT_ID.MaxLength = 50;
                this.columnSUBSCRIBE_NO.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TO_CLOSE_HEADRow NewTO_CLOSE_HEADRow() {
                return ((TO_CLOSE_HEADRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TO_CLOSE_HEADRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TO_CLOSE_HEADRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TO_CLOSE_HEADRowChanged != null)) {
                    this.TO_CLOSE_HEADRowChanged(this, new TO_CLOSE_HEADRowChangeEvent(((TO_CLOSE_HEADRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TO_CLOSE_HEADRowChanging != null)) {
                    this.TO_CLOSE_HEADRowChanging(this, new TO_CLOSE_HEADRowChangeEvent(((TO_CLOSE_HEADRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TO_CLOSE_HEADRowDeleted != null)) {
                    this.TO_CLOSE_HEADRowDeleted(this, new TO_CLOSE_HEADRowChangeEvent(((TO_CLOSE_HEADRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TO_CLOSE_HEADRowDeleting != null)) {
                    this.TO_CLOSE_HEADRowDeleting(this, new TO_CLOSE_HEADRowChangeEvent(((TO_CLOSE_HEADRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTO_CLOSE_HEADRow(TO_CLOSE_HEADRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SAL05_TO_CLOSE_DTO ds = new SAL05_TO_CLOSE_DTO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TO_CLOSE_HEADDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TO_CLOSE_HEADRow : global::System.Data.DataRow {
            
            private TO_CLOSE_HEADDataTable tableTO_CLOSE_HEAD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TO_CLOSE_HEADRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTO_CLOSE_HEAD = ((TO_CLOSE_HEADDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STATUS {
                get {
                    try {
                        return ((string)(this[this.tableTO_CLOSE_HEAD.STATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TO_CLOSE_HEAD\' 中資料行 \'STATUS\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTO_CLOSE_HEAD.STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime APPLY_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTO_CLOSE_HEAD.APPLY_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TO_CLOSE_HEAD\' 中資料行 \'APPLY_DATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTO_CLOSE_HEAD.APPLY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STORE_NO {
                get {
                    try {
                        return ((string)(this[this.tableTO_CLOSE_HEAD.STORE_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TO_CLOSE_HEAD\' 中資料行 \'STORE_NO\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTO_CLOSE_HEAD.STORE_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STORE_NAME {
                get {
                    try {
                        return ((string)(this[this.tableTO_CLOSE_HEAD.STORE_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TO_CLOSE_HEAD\' 中資料行 \'STORE_NAME\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTO_CLOSE_HEAD.STORE_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SERVICE_TYPE {
                get {
                    try {
                        return ((decimal)(this[this.tableTO_CLOSE_HEAD.SERVICE_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TO_CLOSE_HEAD\' 中資料行 \'SERVICE_TYPE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTO_CLOSE_HEAD.SERVICE_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MACHINE_ID {
                get {
                    try {
                        return ((string)(this[this.tableTO_CLOSE_HEAD.MACHINE_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TO_CLOSE_HEAD\' 中資料行 \'MACHINE_ID\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTO_CLOSE_HEAD.MACHINE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TOTAL_AMOUNT {
                get {
                    try {
                        return ((decimal)(this[this.tableTO_CLOSE_HEAD.TOTAL_AMOUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TO_CLOSE_HEAD\' 中資料行 \'TOTAL_AMOUNT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTO_CLOSE_HEAD.TOTAL_AMOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SALE_PERSON {
                get {
                    try {
                        return ((string)(this[this.tableTO_CLOSE_HEAD.SALE_PERSONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TO_CLOSE_HEAD\' 中資料行 \'SALE_PERSON\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTO_CLOSE_HEAD.SALE_PERSONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CREATE_USER {
                get {
                    try {
                        return ((string)(this[this.tableTO_CLOSE_HEAD.CREATE_USERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TO_CLOSE_HEAD\' 中資料行 \'CREATE_USER\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTO_CLOSE_HEAD.CREATE_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CREATE_DTM {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTO_CLOSE_HEAD.CREATE_DTMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TO_CLOSE_HEAD\' 中資料行 \'CREATE_DTM\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTO_CLOSE_HEAD.CREATE_DTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string POSUUID_DETAIL {
                get {
                    return ((string)(this[this.tableTO_CLOSE_HEAD.POSUUID_DETAILColumn]));
                }
                set {
                    this[this.tableTO_CLOSE_HEAD.POSUUID_DETAILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODI_USER {
                get {
                    try {
                        return ((string)(this[this.tableTO_CLOSE_HEAD.MODI_USERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TO_CLOSE_HEAD\' 中資料行 \'MODI_USER\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTO_CLOSE_HEAD.MODI_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HRS_NO {
                get {
                    try {
                        return ((string)(this[this.tableTO_CLOSE_HEAD.HRS_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TO_CLOSE_HEAD\' 中資料行 \'HRS_NO\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTO_CLOSE_HEAD.HRS_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LEASE_NO {
                get {
                    try {
                        return ((string)(this[this.tableTO_CLOSE_HEAD.LEASE_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TO_CLOSE_HEAD\' 中資料行 \'LEASE_NO\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTO_CLOSE_HEAD.LEASE_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string REMARK {
                get {
                    try {
                        return ((string)(this[this.tableTO_CLOSE_HEAD.REMARKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TO_CLOSE_HEAD\' 中資料行 \'REMARK\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTO_CLOSE_HEAD.REMARKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODI_DTM {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTO_CLOSE_HEAD.MODI_DTMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TO_CLOSE_HEAD\' 中資料行 \'MODI_DTM\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTO_CLOSE_HEAD.MODI_DTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string POSUUID_MASTER {
                get {
                    try {
                        return ((string)(this[this.tableTO_CLOSE_HEAD.POSUUID_MASTERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TO_CLOSE_HEAD\' 中資料行 \'POSUUID_MASTER\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTO_CLOSE_HEAD.POSUUID_MASTERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BUNDLE_ID {
                get {
                    try {
                        return ((string)(this[this.tableTO_CLOSE_HEAD.BUNDLE_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TO_CLOSE_HEAD\' 中資料行 \'BUNDLE_ID\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTO_CLOSE_HEAD.BUNDLE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FUN_ID {
                get {
                    try {
                        return ((string)(this[this.tableTO_CLOSE_HEAD.FUN_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TO_CLOSE_HEAD\' 中資料行 \'FUN_ID\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTO_CLOSE_HEAD.FUN_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal R_RATE {
                get {
                    try {
                        return ((decimal)(this[this.tableTO_CLOSE_HEAD.R_RATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TO_CLOSE_HEAD\' 中資料行 \'R_RATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTO_CLOSE_HEAD.R_RATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DATA {
                get {
                    try {
                        return ((string)(this[this.tableTO_CLOSE_HEAD.DATAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TO_CLOSE_HEAD\' 中資料行 \'DATA\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTO_CLOSE_HEAD.DATAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VOICE {
                get {
                    try {
                        return ((string)(this[this.tableTO_CLOSE_HEAD.VOICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TO_CLOSE_HEAD\' 中資料行 \'VOICE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTO_CLOSE_HEAD.VOICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TRANS_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableTO_CLOSE_HEAD.TRANS_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TO_CLOSE_HEAD\' 中資料行 \'TRANS_TYPE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTO_CLOSE_HEAD.TRANS_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string APPROVE_STATUS_POS {
                get {
                    try {
                        return ((string)(this[this.tableTO_CLOSE_HEAD.APPROVE_STATUS_POSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TO_CLOSE_HEAD\' 中資料行 \'APPROVE_STATUS_POS\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTO_CLOSE_HEAD.APPROVE_STATUS_POSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CONN_FLAG {
                get {
                    try {
                        return ((string)(this[this.tableTO_CLOSE_HEAD.CONN_FLAGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TO_CLOSE_HEAD\' 中資料行 \'CONN_FLAG\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTO_CLOSE_HEAD.CONN_FLAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QUERY_TABLE_NAME {
                get {
                    try {
                        return ((string)(this[this.tableTO_CLOSE_HEAD.QUERY_TABLE_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TO_CLOSE_HEAD\' 中資料行 \'QUERY_TABLE_NAME\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTO_CLOSE_HEAD.QUERY_TABLE_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BUNDLE_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableTO_CLOSE_HEAD.BUNDLE_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TO_CLOSE_HEAD\' 中資料行 \'BUNDLE_TYPE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTO_CLOSE_HEAD.BUNDLE_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SERVICE_SYS_ID {
                get {
                    try {
                        return ((string)(this[this.tableTO_CLOSE_HEAD.SERVICE_SYS_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TO_CLOSE_HEAD\' 中資料行 \'SERVICE_SYS_ID\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTO_CLOSE_HEAD.SERVICE_SYS_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime APPROVAL_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTO_CLOSE_HEAD.APPROVAL_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TO_CLOSE_HEAD\' 中資料行 \'APPROVAL_DATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTO_CLOSE_HEAD.APPROVAL_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MNP {
                get {
                    try {
                        return ((string)(this[this.tableTO_CLOSE_HEAD.MNPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TO_CLOSE_HEAD\' 中資料行 \'MNP\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTO_CLOSE_HEAD.MNPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BILLING_ACCOUNT_ID {
                get {
                    try {
                        return ((string)(this[this.tableTO_CLOSE_HEAD.BILLING_ACCOUNT_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TO_CLOSE_HEAD\' 中資料行 \'BILLING_ACCOUNT_ID\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTO_CLOSE_HEAD.BILLING_ACCOUNT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SUBSCRIBE_NO {
                get {
                    try {
                        return ((string)(this[this.tableTO_CLOSE_HEAD.SUBSCRIBE_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TO_CLOSE_HEAD\' 中資料行 \'SUBSCRIBE_NO\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTO_CLOSE_HEAD.SUBSCRIBE_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTATUSNull() {
                return this.IsNull(this.tableTO_CLOSE_HEAD.STATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTATUSNull() {
                this[this.tableTO_CLOSE_HEAD.STATUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAPPLY_DATENull() {
                return this.IsNull(this.tableTO_CLOSE_HEAD.APPLY_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAPPLY_DATENull() {
                this[this.tableTO_CLOSE_HEAD.APPLY_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTORE_NONull() {
                return this.IsNull(this.tableTO_CLOSE_HEAD.STORE_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTORE_NONull() {
                this[this.tableTO_CLOSE_HEAD.STORE_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTORE_NAMENull() {
                return this.IsNull(this.tableTO_CLOSE_HEAD.STORE_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTORE_NAMENull() {
                this[this.tableTO_CLOSE_HEAD.STORE_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSERVICE_TYPENull() {
                return this.IsNull(this.tableTO_CLOSE_HEAD.SERVICE_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSERVICE_TYPENull() {
                this[this.tableTO_CLOSE_HEAD.SERVICE_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMACHINE_IDNull() {
                return this.IsNull(this.tableTO_CLOSE_HEAD.MACHINE_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMACHINE_IDNull() {
                this[this.tableTO_CLOSE_HEAD.MACHINE_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTOTAL_AMOUNTNull() {
                return this.IsNull(this.tableTO_CLOSE_HEAD.TOTAL_AMOUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTOTAL_AMOUNTNull() {
                this[this.tableTO_CLOSE_HEAD.TOTAL_AMOUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSALE_PERSONNull() {
                return this.IsNull(this.tableTO_CLOSE_HEAD.SALE_PERSONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSALE_PERSONNull() {
                this[this.tableTO_CLOSE_HEAD.SALE_PERSONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCREATE_USERNull() {
                return this.IsNull(this.tableTO_CLOSE_HEAD.CREATE_USERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCREATE_USERNull() {
                this[this.tableTO_CLOSE_HEAD.CREATE_USERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCREATE_DTMNull() {
                return this.IsNull(this.tableTO_CLOSE_HEAD.CREATE_DTMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCREATE_DTMNull() {
                this[this.tableTO_CLOSE_HEAD.CREATE_DTMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODI_USERNull() {
                return this.IsNull(this.tableTO_CLOSE_HEAD.MODI_USERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODI_USERNull() {
                this[this.tableTO_CLOSE_HEAD.MODI_USERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHRS_NONull() {
                return this.IsNull(this.tableTO_CLOSE_HEAD.HRS_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHRS_NONull() {
                this[this.tableTO_CLOSE_HEAD.HRS_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLEASE_NONull() {
                return this.IsNull(this.tableTO_CLOSE_HEAD.LEASE_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLEASE_NONull() {
                this[this.tableTO_CLOSE_HEAD.LEASE_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREMARKNull() {
                return this.IsNull(this.tableTO_CLOSE_HEAD.REMARKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREMARKNull() {
                this[this.tableTO_CLOSE_HEAD.REMARKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODI_DTMNull() {
                return this.IsNull(this.tableTO_CLOSE_HEAD.MODI_DTMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODI_DTMNull() {
                this[this.tableTO_CLOSE_HEAD.MODI_DTMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPOSUUID_MASTERNull() {
                return this.IsNull(this.tableTO_CLOSE_HEAD.POSUUID_MASTERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPOSUUID_MASTERNull() {
                this[this.tableTO_CLOSE_HEAD.POSUUID_MASTERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBUNDLE_IDNull() {
                return this.IsNull(this.tableTO_CLOSE_HEAD.BUNDLE_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBUNDLE_IDNull() {
                this[this.tableTO_CLOSE_HEAD.BUNDLE_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFUN_IDNull() {
                return this.IsNull(this.tableTO_CLOSE_HEAD.FUN_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFUN_IDNull() {
                this[this.tableTO_CLOSE_HEAD.FUN_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsR_RATENull() {
                return this.IsNull(this.tableTO_CLOSE_HEAD.R_RATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetR_RATENull() {
                this[this.tableTO_CLOSE_HEAD.R_RATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATANull() {
                return this.IsNull(this.tableTO_CLOSE_HEAD.DATAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATANull() {
                this[this.tableTO_CLOSE_HEAD.DATAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVOICENull() {
                return this.IsNull(this.tableTO_CLOSE_HEAD.VOICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVOICENull() {
                this[this.tableTO_CLOSE_HEAD.VOICEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRANS_TYPENull() {
                return this.IsNull(this.tableTO_CLOSE_HEAD.TRANS_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRANS_TYPENull() {
                this[this.tableTO_CLOSE_HEAD.TRANS_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAPPROVE_STATUS_POSNull() {
                return this.IsNull(this.tableTO_CLOSE_HEAD.APPROVE_STATUS_POSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAPPROVE_STATUS_POSNull() {
                this[this.tableTO_CLOSE_HEAD.APPROVE_STATUS_POSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCONN_FLAGNull() {
                return this.IsNull(this.tableTO_CLOSE_HEAD.CONN_FLAGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCONN_FLAGNull() {
                this[this.tableTO_CLOSE_HEAD.CONN_FLAGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQUERY_TABLE_NAMENull() {
                return this.IsNull(this.tableTO_CLOSE_HEAD.QUERY_TABLE_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQUERY_TABLE_NAMENull() {
                this[this.tableTO_CLOSE_HEAD.QUERY_TABLE_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBUNDLE_TYPENull() {
                return this.IsNull(this.tableTO_CLOSE_HEAD.BUNDLE_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBUNDLE_TYPENull() {
                this[this.tableTO_CLOSE_HEAD.BUNDLE_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSERVICE_SYS_IDNull() {
                return this.IsNull(this.tableTO_CLOSE_HEAD.SERVICE_SYS_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSERVICE_SYS_IDNull() {
                this[this.tableTO_CLOSE_HEAD.SERVICE_SYS_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAPPROVAL_DATENull() {
                return this.IsNull(this.tableTO_CLOSE_HEAD.APPROVAL_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAPPROVAL_DATENull() {
                this[this.tableTO_CLOSE_HEAD.APPROVAL_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMNPNull() {
                return this.IsNull(this.tableTO_CLOSE_HEAD.MNPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMNPNull() {
                this[this.tableTO_CLOSE_HEAD.MNPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBILLING_ACCOUNT_IDNull() {
                return this.IsNull(this.tableTO_CLOSE_HEAD.BILLING_ACCOUNT_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBILLING_ACCOUNT_IDNull() {
                this[this.tableTO_CLOSE_HEAD.BILLING_ACCOUNT_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUBSCRIBE_NONull() {
                return this.IsNull(this.tableTO_CLOSE_HEAD.SUBSCRIBE_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUBSCRIBE_NONull() {
                this[this.tableTO_CLOSE_HEAD.SUBSCRIBE_NOColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TO_CLOSE_HEADRowChangeEvent : global::System.EventArgs {
            
            private TO_CLOSE_HEADRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TO_CLOSE_HEADRowChangeEvent(TO_CLOSE_HEADRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TO_CLOSE_HEADRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace FET.POS.Model.DTO.SAL05_TO_CLOSE_DTOTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TO_CLOSE_HEADTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TO_CLOSE_HEADTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TO_CLOSE_HEAD";
            tableMapping.ColumnMappings.Add("STATUS", "STATUS");
            tableMapping.ColumnMappings.Add("APPLY_DATE", "APPLY_DATE");
            tableMapping.ColumnMappings.Add("STORE_NO", "STORE_NO");
            tableMapping.ColumnMappings.Add("STORE_NAME", "STORE_NAME");
            tableMapping.ColumnMappings.Add("SERVICE_TYPE", "SERVICE_TYPE");
            tableMapping.ColumnMappings.Add("MACHINE_ID", "MACHINE_ID");
            tableMapping.ColumnMappings.Add("TOTAL_AMOUNT", "TOTAL_AMOUNT");
            tableMapping.ColumnMappings.Add("SALE_PERSON", "SALE_PERSON");
            tableMapping.ColumnMappings.Add("CREATE_USER", "CREATE_USER");
            tableMapping.ColumnMappings.Add("CREATE_DTM", "CREATE_DTM");
            tableMapping.ColumnMappings.Add("POSUUID_DETAIL", "POSUUID_DETAIL");
            tableMapping.ColumnMappings.Add("MODI_USER", "MODI_USER");
            tableMapping.ColumnMappings.Add("HRS_NO", "HRS_NO");
            tableMapping.ColumnMappings.Add("LEASE_NO", "LEASE_NO");
            tableMapping.ColumnMappings.Add("REMARK", "REMARK");
            tableMapping.ColumnMappings.Add("MODI_DTM", "MODI_DTM");
            tableMapping.ColumnMappings.Add("POSUUID_MASTER", "POSUUID_MASTER");
            tableMapping.ColumnMappings.Add("BUNDLE_ID", "BUNDLE_ID");
            tableMapping.ColumnMappings.Add("FUN_ID", "FUN_ID");
            tableMapping.ColumnMappings.Add("R_RATE", "R_RATE");
            tableMapping.ColumnMappings.Add("DATA", "DATA");
            tableMapping.ColumnMappings.Add("VOICE", "VOICE");
            tableMapping.ColumnMappings.Add("TRANS_TYPE", "TRANS_TYPE");
            tableMapping.ColumnMappings.Add("APPROVE_STATUS_POS", "APPROVE_STATUS_POS");
            tableMapping.ColumnMappings.Add("CONN_FLAG", "CONN_FLAG");
            tableMapping.ColumnMappings.Add("QUERY_TABLE_NAME", "QUERY_TABLE_NAME");
            tableMapping.ColumnMappings.Add("BUNDLE_TYPE", "BUNDLE_TYPE");
            tableMapping.ColumnMappings.Add("SERVICE_SYS_ID", "SERVICE_SYS_ID");
            tableMapping.ColumnMappings.Add("APPROVAL_DATE", "APPROVAL_DATE");
            tableMapping.ColumnMappings.Add("MNP", "MNP");
            tableMapping.ColumnMappings.Add("BILLING_ACCOUNT_ID", "BILLING_ACCOUNT_ID");
            tableMapping.ColumnMappings.Add("SUBSCRIBE_NO", "SUBSCRIBE_NO");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"WEBPOS\".\"TO_CLOSE_HEAD\" WHERE (((:IsNull_STATUS = 1 AND \"STATUS\" IS " +
                "NULL) OR (\"STATUS\" = :Original_STATUS)) AND ((:IsNull_APPLY_DATE = 1 AND \"APPLY_" +
                "DATE\" IS NULL) OR (\"APPLY_DATE\" = :Original_APPLY_DATE)) AND ((:IsNull_STORE_NO " +
                "= 1 AND \"STORE_NO\" IS NULL) OR (\"STORE_NO\" = :Original_STORE_NO)) AND ((:IsNull_" +
                "STORE_NAME = 1 AND \"STORE_NAME\" IS NULL) OR (\"STORE_NAME\" = :Original_STORE_NAME" +
                ")) AND ((:IsNull_SERVICE_TYPE = 1 AND \"SERVICE_TYPE\" IS NULL) OR (\"SERVICE_TYPE\"" +
                " = :Original_SERVICE_TYPE)) AND ((:IsNull_MACHINE_ID = 1 AND \"MACHINE_ID\" IS NUL" +
                "L) OR (\"MACHINE_ID\" = :Original_MACHINE_ID)) AND ((:IsNull_TOTAL_AMOUNT = 1 AND " +
                "\"TOTAL_AMOUNT\" IS NULL) OR (\"TOTAL_AMOUNT\" = :Original_TOTAL_AMOUNT)) AND ((:IsN" +
                "ull_SALE_PERSON = 1 AND \"SALE_PERSON\" IS NULL) OR (\"SALE_PERSON\" = :Original_SAL" +
                "E_PERSON)) AND ((:IsNull_CREATE_USER = 1 AND \"CREATE_USER\" IS NULL) OR (\"CREATE_" +
                "USER\" = :Original_CREATE_USER)) AND ((:IsNull_CREATE_DTM = 1 AND \"CREATE_DTM\" IS" +
                " NULL) OR (\"CREATE_DTM\" = :Original_CREATE_DTM)) AND (\"POSUUID_DETAIL\" = :Origin" +
                "al_POSUUID_DETAIL) AND ((:IsNull_MODI_USER = 1 AND \"MODI_USER\" IS NULL) OR (\"MOD" +
                "I_USER\" = :Original_MODI_USER)) AND ((:IsNull_HRS_NO = 1 AND \"HRS_NO\" IS NULL) O" +
                "R (\"HRS_NO\" = :Original_HRS_NO)) AND ((:IsNull_LEASE_NO = 1 AND \"LEASE_NO\" IS NU" +
                "LL) OR (\"LEASE_NO\" = :Original_LEASE_NO)) AND ((:IsNull_REMARK = 1 AND \"REMARK\" " +
                "IS NULL) OR (\"REMARK\" = :Original_REMARK)) AND ((:IsNull_MODI_DTM = 1 AND \"MODI_" +
                "DTM\" IS NULL) OR (\"MODI_DTM\" = :Original_MODI_DTM)) AND ((:IsNull_POSUUID_MASTER" +
                " = 1 AND \"POSUUID_MASTER\" IS NULL) OR (\"POSUUID_MASTER\" = :Original_POSUUID_MAST" +
                "ER)) AND ((:IsNull_BUNDLE_ID = 1 AND \"BUNDLE_ID\" IS NULL) OR (\"BUNDLE_ID\" = :Ori" +
                "ginal_BUNDLE_ID)) AND ((:IsNull_FUN_ID = 1 AND \"FUN_ID\" IS NULL) OR (\"FUN_ID\" = " +
                ":Original_FUN_ID)) AND ((:IsNull_R_RATE = 1 AND \"R_RATE\" IS NULL) OR (\"R_RATE\" =" +
                " :Original_R_RATE)) AND ((:IsNull_DATA = 1 AND \"DATA\" IS NULL) OR (\"DATA\" = :Ori" +
                "ginal_DATA)) AND ((:IsNull_VOICE = 1 AND \"VOICE\" IS NULL) OR (\"VOICE\" = :Origina" +
                "l_VOICE)) AND ((:IsNull_TRANS_TYPE = 1 AND \"TRANS_TYPE\" IS NULL) OR (\"TRANS_TYPE" +
                "\" = :Original_TRANS_TYPE)) AND ((:IsNull_APPROVE_STATUS_POS = 1 AND \"APPROVE_STA" +
                "TUS_POS\" IS NULL) OR (\"APPROVE_STATUS_POS\" = :Original_APPROVE_STATUS_POS)) AND " +
                "((:IsNull_CONN_FLAG = 1 AND \"CONN_FLAG\" IS NULL) OR (\"CONN_FLAG\" = :Original_CON" +
                "N_FLAG)) AND ((:IsNull_QUERY_TABLE_NAME = 1 AND \"QUERY_TABLE_NAME\" IS NULL) OR (" +
                "\"QUERY_TABLE_NAME\" = :Original_QUERY_TABLE_NAME)) AND ((:IsNull_BUNDLE_TYPE = 1 " +
                "AND \"BUNDLE_TYPE\" IS NULL) OR (\"BUNDLE_TYPE\" = :Original_BUNDLE_TYPE)) AND ((:Is" +
                "Null_SERVICE_SYS_ID = 1 AND \"SERVICE_SYS_ID\" IS NULL) OR (\"SERVICE_SYS_ID\" = :Or" +
                "iginal_SERVICE_SYS_ID)) AND ((:IsNull_APPROVAL_DATE = 1 AND \"APPROVAL_DATE\" IS N" +
                "ULL) OR (\"APPROVAL_DATE\" = :Original_APPROVAL_DATE)) AND ((:IsNull_MNP = 1 AND \"" +
                "MNP\" IS NULL) OR (\"MNP\" = :Original_MNP)) AND ((:IsNull_BILLING_ACCOUNT_ID = 1 A" +
                "ND \"BILLING_ACCOUNT_ID\" IS NULL) OR (\"BILLING_ACCOUNT_ID\" = :Original_BILLING_AC" +
                "COUNT_ID)) AND ((:IsNull_SUBSCRIBE_NO = 1 AND \"SUBSCRIBE_NO\" IS NULL) OR (\"SUBSC" +
                "RIBE_NO\" = :Original_SUBSCRIBE_NO)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_STATUS", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "STATUS", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_STATUS", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "STATUS", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_APPLY_DATE", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "APPLY_DATE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_APPLY_DATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "APPLY_DATE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_STORE_NO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "STORE_NO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_STORE_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "STORE_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_STORE_NAME", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "STORE_NAME", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_STORE_NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "STORE_NAME", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_SERVICE_TYPE", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "SERVICE_TYPE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SERVICE_TYPE", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SERVICE_TYPE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_MACHINE_ID", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "MACHINE_ID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MACHINE_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MACHINE_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_TOTAL_AMOUNT", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "TOTAL_AMOUNT", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_TOTAL_AMOUNT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "TOTAL_AMOUNT", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_SALE_PERSON", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "SALE_PERSON", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SALE_PERSON", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "SALE_PERSON", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_CREATE_USER", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "CREATE_USER", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CREATE_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CREATE_USER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_CREATE_DTM", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "CREATE_DTM", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CREATE_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "CREATE_DTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_POSUUID_DETAIL", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "POSUUID_DETAIL", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_MODI_USER", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "MODI_USER", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MODI_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MODI_USER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_HRS_NO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "HRS_NO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_HRS_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "HRS_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_LEASE_NO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "LEASE_NO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LEASE_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LEASE_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_REMARK", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "REMARK", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_REMARK", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "REMARK", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_MODI_DTM", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "MODI_DTM", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MODI_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "MODI_DTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_POSUUID_MASTER", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "POSUUID_MASTER", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_POSUUID_MASTER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "POSUUID_MASTER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_BUNDLE_ID", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "BUNDLE_ID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_BUNDLE_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "BUNDLE_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_FUN_ID", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "FUN_ID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FUN_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "FUN_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_R_RATE", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "R_RATE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_R_RATE", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "R_RATE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_DATA", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "DATA", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_DATA", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DATA", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_VOICE", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "VOICE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_VOICE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "VOICE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_TRANS_TYPE", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "TRANS_TYPE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_TRANS_TYPE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "TRANS_TYPE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_APPROVE_STATUS_POS", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "APPROVE_STATUS_POS", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_APPROVE_STATUS_POS", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "APPROVE_STATUS_POS", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_CONN_FLAG", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "CONN_FLAG", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CONN_FLAG", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CONN_FLAG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_QUERY_TABLE_NAME", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "QUERY_TABLE_NAME", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_QUERY_TABLE_NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "QUERY_TABLE_NAME", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_BUNDLE_TYPE", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "BUNDLE_TYPE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_BUNDLE_TYPE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "BUNDLE_TYPE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_SERVICE_SYS_ID", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "SERVICE_SYS_ID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SERVICE_SYS_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "SERVICE_SYS_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_APPROVAL_DATE", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "APPROVAL_DATE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_APPROVAL_DATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "APPROVAL_DATE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_MNP", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "MNP", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MNP", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MNP", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_BILLING_ACCOUNT_ID", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "BILLING_ACCOUNT_ID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_BILLING_ACCOUNT_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "BILLING_ACCOUNT_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_SUBSCRIBE_NO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "SUBSCRIBE_NO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SUBSCRIBE_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "SUBSCRIBE_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""WEBPOS"".""TO_CLOSE_HEAD"" (""STATUS"", ""APPLY_DATE"", ""STORE_NO"", ""STORE_NAME"", ""SERVICE_TYPE"", ""MACHINE_ID"", ""TOTAL_AMOUNT"", ""SALE_PERSON"", ""CREATE_USER"", ""CREATE_DTM"", ""POSUUID_DETAIL"", ""MODI_USER"", ""HRS_NO"", ""LEASE_NO"", ""REMARK"", ""MODI_DTM"", ""POSUUID_MASTER"", ""BUNDLE_ID"", ""FUN_ID"", ""R_RATE"", ""DATA"", ""VOICE"", ""TRANS_TYPE"", ""APPROVE_STATUS_POS"", ""CONN_FLAG"", ""QUERY_TABLE_NAME"", ""BUNDLE_TYPE"", ""SERVICE_SYS_ID"", ""APPROVAL_DATE"", ""MNP"", ""BILLING_ACCOUNT_ID"", ""SUBSCRIBE_NO"") VALUES (:STATUS, :APPLY_DATE, :STORE_NO, :STORE_NAME, :SERVICE_TYPE, :MACHINE_ID, :TOTAL_AMOUNT, :SALE_PERSON, :CREATE_USER, :CREATE_DTM, :POSUUID_DETAIL, :MODI_USER, :HRS_NO, :LEASE_NO, :REMARK, :MODI_DTM, :POSUUID_MASTER, :BUNDLE_ID, :FUN_ID, :R_RATE, :DATA, :VOICE, :TRANS_TYPE, :APPROVE_STATUS_POS, :CONN_FLAG, :QUERY_TABLE_NAME, :BUNDLE_TYPE, :SERVICE_SYS_ID, :APPROVAL_DATE, :MNP, :BILLING_ACCOUNT_ID, :SUBSCRIBE_NO)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("STATUS", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "STATUS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("APPLY_DATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "APPLY_DATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("STORE_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "STORE_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("STORE_NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "STORE_NAME", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SERVICE_TYPE", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SERVICE_TYPE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MACHINE_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MACHINE_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TOTAL_AMOUNT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "TOTAL_AMOUNT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SALE_PERSON", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "SALE_PERSON", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CREATE_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CREATE_USER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CREATE_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "CREATE_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("POSUUID_DETAIL", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "POSUUID_DETAIL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MODI_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MODI_USER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HRS_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "HRS_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LEASE_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LEASE_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("REMARK", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "REMARK", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MODI_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "MODI_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("POSUUID_MASTER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "POSUUID_MASTER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BUNDLE_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "BUNDLE_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FUN_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "FUN_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("R_RATE", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "R_RATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DATA", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DATA", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("VOICE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "VOICE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TRANS_TYPE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "TRANS_TYPE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("APPROVE_STATUS_POS", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "APPROVE_STATUS_POS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CONN_FLAG", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CONN_FLAG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("QUERY_TABLE_NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "QUERY_TABLE_NAME", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BUNDLE_TYPE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "BUNDLE_TYPE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SERVICE_SYS_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "SERVICE_SYS_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("APPROVAL_DATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "APPROVAL_DATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MNP", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MNP", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BILLING_ACCOUNT_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "BILLING_ACCOUNT_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SUBSCRIBE_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "SUBSCRIBE_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE \"WEBPOS\".\"TO_CLOSE_HEAD\" SET \"STATUS\" = :STATUS, \"APPLY_DATE\" = :APPLY_DAT" +
                "E, \"STORE_NO\" = :STORE_NO, \"STORE_NAME\" = :STORE_NAME, \"SERVICE_TYPE\" = :SERVICE" +
                "_TYPE, \"MACHINE_ID\" = :MACHINE_ID, \"TOTAL_AMOUNT\" = :TOTAL_AMOUNT, \"SALE_PERSON\"" +
                " = :SALE_PERSON, \"CREATE_USER\" = :CREATE_USER, \"CREATE_DTM\" = :CREATE_DTM, \"POSU" +
                "UID_DETAIL\" = :POSUUID_DETAIL, \"MODI_USER\" = :MODI_USER, \"HRS_NO\" = :HRS_NO, \"LE" +
                "ASE_NO\" = :LEASE_NO, \"REMARK\" = :REMARK, \"MODI_DTM\" = :MODI_DTM, \"POSUUID_MASTER" +
                "\" = :POSUUID_MASTER, \"BUNDLE_ID\" = :BUNDLE_ID, \"FUN_ID\" = :FUN_ID, \"R_RATE\" = :R" +
                "_RATE, \"DATA\" = :DATA, \"VOICE\" = :VOICE, \"TRANS_TYPE\" = :TRANS_TYPE, \"APPROVE_ST" +
                "ATUS_POS\" = :APPROVE_STATUS_POS, \"CONN_FLAG\" = :CONN_FLAG, \"QUERY_TABLE_NAME\" = " +
                ":QUERY_TABLE_NAME, \"BUNDLE_TYPE\" = :BUNDLE_TYPE, \"SERVICE_SYS_ID\" = :SERVICE_SYS" +
                "_ID, \"APPROVAL_DATE\" = :APPROVAL_DATE, \"MNP\" = :MNP, \"BILLING_ACCOUNT_ID\" = :BIL" +
                "LING_ACCOUNT_ID, \"SUBSCRIBE_NO\" = :SUBSCRIBE_NO WHERE (((:IsNull_STATUS = 1 AND " +
                "\"STATUS\" IS NULL) OR (\"STATUS\" = :Original_STATUS)) AND ((:IsNull_APPLY_DATE = 1" +
                " AND \"APPLY_DATE\" IS NULL) OR (\"APPLY_DATE\" = :Original_APPLY_DATE)) AND ((:IsNu" +
                "ll_STORE_NO = 1 AND \"STORE_NO\" IS NULL) OR (\"STORE_NO\" = :Original_STORE_NO)) AN" +
                "D ((:IsNull_STORE_NAME = 1 AND \"STORE_NAME\" IS NULL) OR (\"STORE_NAME\" = :Origina" +
                "l_STORE_NAME)) AND ((:IsNull_SERVICE_TYPE = 1 AND \"SERVICE_TYPE\" IS NULL) OR (\"S" +
                "ERVICE_TYPE\" = :Original_SERVICE_TYPE)) AND ((:IsNull_MACHINE_ID = 1 AND \"MACHIN" +
                "E_ID\" IS NULL) OR (\"MACHINE_ID\" = :Original_MACHINE_ID)) AND ((:IsNull_TOTAL_AMO" +
                "UNT = 1 AND \"TOTAL_AMOUNT\" IS NULL) OR (\"TOTAL_AMOUNT\" = :Original_TOTAL_AMOUNT)" +
                ") AND ((:IsNull_SALE_PERSON = 1 AND \"SALE_PERSON\" IS NULL) OR (\"SALE_PERSON\" = :" +
                "Original_SALE_PERSON)) AND ((:IsNull_CREATE_USER = 1 AND \"CREATE_USER\" IS NULL) " +
                "OR (\"CREATE_USER\" = :Original_CREATE_USER)) AND ((:IsNull_CREATE_DTM = 1 AND \"CR" +
                "EATE_DTM\" IS NULL) OR (\"CREATE_DTM\" = :Original_CREATE_DTM)) AND (\"POSUUID_DETAI" +
                "L\" = :Original_POSUUID_DETAIL) AND ((:IsNull_MODI_USER = 1 AND \"MODI_USER\" IS NU" +
                "LL) OR (\"MODI_USER\" = :Original_MODI_USER)) AND ((:IsNull_HRS_NO = 1 AND \"HRS_NO" +
                "\" IS NULL) OR (\"HRS_NO\" = :Original_HRS_NO)) AND ((:IsNull_LEASE_NO = 1 AND \"LEA" +
                "SE_NO\" IS NULL) OR (\"LEASE_NO\" = :Original_LEASE_NO)) AND ((:IsNull_REMARK = 1 A" +
                "ND \"REMARK\" IS NULL) OR (\"REMARK\" = :Original_REMARK)) AND ((:IsNull_MODI_DTM = " +
                "1 AND \"MODI_DTM\" IS NULL) OR (\"MODI_DTM\" = :Original_MODI_DTM)) AND ((:IsNull_PO" +
                "SUUID_MASTER = 1 AND \"POSUUID_MASTER\" IS NULL) OR (\"POSUUID_MASTER\" = :Original_" +
                "POSUUID_MASTER)) AND ((:IsNull_BUNDLE_ID = 1 AND \"BUNDLE_ID\" IS NULL) OR (\"BUNDL" +
                "E_ID\" = :Original_BUNDLE_ID)) AND ((:IsNull_FUN_ID = 1 AND \"FUN_ID\" IS NULL) OR " +
                "(\"FUN_ID\" = :Original_FUN_ID)) AND ((:IsNull_R_RATE = 1 AND \"R_RATE\" IS NULL) OR" +
                " (\"R_RATE\" = :Original_R_RATE)) AND ((:IsNull_DATA = 1 AND \"DATA\" IS NULL) OR (\"" +
                "DATA\" = :Original_DATA)) AND ((:IsNull_VOICE = 1 AND \"VOICE\" IS NULL) OR (\"VOICE" +
                "\" = :Original_VOICE)) AND ((:IsNull_TRANS_TYPE = 1 AND \"TRANS_TYPE\" IS NULL) OR " +
                "(\"TRANS_TYPE\" = :Original_TRANS_TYPE)) AND ((:IsNull_APPROVE_STATUS_POS = 1 AND " +
                "\"APPROVE_STATUS_POS\" IS NULL) OR (\"APPROVE_STATUS_POS\" = :Original_APPROVE_STATU" +
                "S_POS)) AND ((:IsNull_CONN_FLAG = 1 AND \"CONN_FLAG\" IS NULL) OR (\"CONN_FLAG\" = :" +
                "Original_CONN_FLAG)) AND ((:IsNull_QUERY_TABLE_NAME = 1 AND \"QUERY_TABLE_NAME\" I" +
                "S NULL) OR (\"QUERY_TABLE_NAME\" = :Original_QUERY_TABLE_NAME)) AND ((:IsNull_BUND" +
                "LE_TYPE = 1 AND \"BUNDLE_TYPE\" IS NULL) OR (\"BUNDLE_TYPE\" = :Original_BUNDLE_TYPE" +
                ")) AND ((:IsNull_SERVICE_SYS_ID = 1 AND \"SERVICE_SYS_ID\" IS NULL) OR (\"SERVICE_S" +
                "YS_ID\" = :Original_SERVICE_SYS_ID)) AND ((:IsNull_APPROVAL_DATE = 1 AND \"APPROVA" +
                "L_DATE\" IS NULL) OR (\"APPROVAL_DATE\" = :Original_APPROVAL_DATE)) AND ((:IsNull_M" +
                "NP = 1 AND \"MNP\" IS NULL) OR (\"MNP\" = :Original_MNP)) AND ((:IsNull_BILLING_ACCO" +
                "UNT_ID = 1 AND \"BILLING_ACCOUNT_ID\" IS NULL) OR (\"BILLING_ACCOUNT_ID\" = :Origina" +
                "l_BILLING_ACCOUNT_ID)) AND ((:IsNull_SUBSCRIBE_NO = 1 AND \"SUBSCRIBE_NO\" IS NULL" +
                ") OR (\"SUBSCRIBE_NO\" = :Original_SUBSCRIBE_NO)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("STATUS", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "STATUS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("APPLY_DATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "APPLY_DATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("STORE_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "STORE_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("STORE_NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "STORE_NAME", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SERVICE_TYPE", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SERVICE_TYPE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MACHINE_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MACHINE_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TOTAL_AMOUNT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "TOTAL_AMOUNT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SALE_PERSON", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "SALE_PERSON", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CREATE_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CREATE_USER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CREATE_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "CREATE_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("POSUUID_DETAIL", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "POSUUID_DETAIL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MODI_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MODI_USER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HRS_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "HRS_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LEASE_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LEASE_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("REMARK", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "REMARK", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MODI_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "MODI_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("POSUUID_MASTER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "POSUUID_MASTER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BUNDLE_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "BUNDLE_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FUN_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "FUN_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("R_RATE", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "R_RATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DATA", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DATA", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("VOICE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "VOICE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TRANS_TYPE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "TRANS_TYPE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("APPROVE_STATUS_POS", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "APPROVE_STATUS_POS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CONN_FLAG", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CONN_FLAG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("QUERY_TABLE_NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "QUERY_TABLE_NAME", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BUNDLE_TYPE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "BUNDLE_TYPE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SERVICE_SYS_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "SERVICE_SYS_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("APPROVAL_DATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "APPROVAL_DATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MNP", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MNP", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BILLING_ACCOUNT_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "BILLING_ACCOUNT_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SUBSCRIBE_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "SUBSCRIBE_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_STATUS", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "STATUS", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_STATUS", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "STATUS", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_APPLY_DATE", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "APPLY_DATE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_APPLY_DATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "APPLY_DATE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_STORE_NO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "STORE_NO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_STORE_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "STORE_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_STORE_NAME", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "STORE_NAME", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_STORE_NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "STORE_NAME", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_SERVICE_TYPE", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "SERVICE_TYPE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SERVICE_TYPE", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SERVICE_TYPE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_MACHINE_ID", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "MACHINE_ID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MACHINE_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MACHINE_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_TOTAL_AMOUNT", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "TOTAL_AMOUNT", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_TOTAL_AMOUNT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "TOTAL_AMOUNT", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_SALE_PERSON", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "SALE_PERSON", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SALE_PERSON", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "SALE_PERSON", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_CREATE_USER", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "CREATE_USER", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CREATE_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CREATE_USER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_CREATE_DTM", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "CREATE_DTM", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CREATE_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "CREATE_DTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_POSUUID_DETAIL", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "POSUUID_DETAIL", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_MODI_USER", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "MODI_USER", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MODI_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MODI_USER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_HRS_NO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "HRS_NO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_HRS_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "HRS_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_LEASE_NO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "LEASE_NO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LEASE_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LEASE_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_REMARK", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "REMARK", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_REMARK", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "REMARK", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_MODI_DTM", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "MODI_DTM", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MODI_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "MODI_DTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_POSUUID_MASTER", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "POSUUID_MASTER", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_POSUUID_MASTER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "POSUUID_MASTER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_BUNDLE_ID", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "BUNDLE_ID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_BUNDLE_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "BUNDLE_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_FUN_ID", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "FUN_ID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FUN_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "FUN_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_R_RATE", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "R_RATE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_R_RATE", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "R_RATE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_DATA", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "DATA", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_DATA", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DATA", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_VOICE", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "VOICE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_VOICE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "VOICE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_TRANS_TYPE", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "TRANS_TYPE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_TRANS_TYPE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "TRANS_TYPE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_APPROVE_STATUS_POS", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "APPROVE_STATUS_POS", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_APPROVE_STATUS_POS", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "APPROVE_STATUS_POS", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_CONN_FLAG", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "CONN_FLAG", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CONN_FLAG", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CONN_FLAG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_QUERY_TABLE_NAME", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "QUERY_TABLE_NAME", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_QUERY_TABLE_NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "QUERY_TABLE_NAME", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_BUNDLE_TYPE", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "BUNDLE_TYPE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_BUNDLE_TYPE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "BUNDLE_TYPE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_SERVICE_SYS_ID", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "SERVICE_SYS_ID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SERVICE_SYS_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "SERVICE_SYS_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_APPROVAL_DATE", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "APPROVAL_DATE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_APPROVAL_DATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "APPROVAL_DATE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_MNP", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "MNP", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MNP", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MNP", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_BILLING_ACCOUNT_ID", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "BILLING_ACCOUNT_ID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_BILLING_ACCOUNT_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "BILLING_ACCOUNT_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_SUBSCRIBE_NO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "SUBSCRIBE_NO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SUBSCRIBE_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "SUBSCRIBE_NO", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::FET.POS.Model.Properties.Settings.Default.ConnectionString3;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT STATUS, APPLY_DATE, STORE_NO, STORE_NAME, SERVICE_TYPE, MACHINE_ID, TOTAL_AMOUNT, SALE_PERSON, CREATE_USER, CREATE_DTM, POSUUID_DETAIL, MODI_USER, HRS_NO, LEASE_NO, REMARK, MODI_DTM, POSUUID_MASTER, BUNDLE_ID, FUN_ID, R_RATE, DATA, VOICE, TRANS_TYPE, APPROVE_STATUS_POS, CONN_FLAG, QUERY_TABLE_NAME, BUNDLE_TYPE, SERVICE_SYS_ID, APPROVAL_DATE, MNP, BILLING_ACCOUNT_ID, SUBSCRIBE_NO FROM WEBPOS.TO_CLOSE_HEAD";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SAL05_TO_CLOSE_DTO.TO_CLOSE_HEADDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SAL05_TO_CLOSE_DTO.TO_CLOSE_HEADDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SAL05_TO_CLOSE_DTO.TO_CLOSE_HEADDataTable dataTable = new SAL05_TO_CLOSE_DTO.TO_CLOSE_HEADDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SAL05_TO_CLOSE_DTO.TO_CLOSE_HEADDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SAL05_TO_CLOSE_DTO dataSet) {
            return this.Adapter.Update(dataSet, "TO_CLOSE_HEAD");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_STATUS, 
                    global::System.Nullable<global::System.DateTime> Original_APPLY_DATE, 
                    string Original_STORE_NO, 
                    string Original_STORE_NAME, 
                    global::System.Nullable<decimal> Original_SERVICE_TYPE, 
                    string Original_MACHINE_ID, 
                    global::System.Nullable<decimal> Original_TOTAL_AMOUNT, 
                    string Original_SALE_PERSON, 
                    string Original_CREATE_USER, 
                    global::System.Nullable<global::System.DateTime> Original_CREATE_DTM, 
                    string Original_POSUUID_DETAIL, 
                    string Original_MODI_USER, 
                    string Original_HRS_NO, 
                    string Original_LEASE_NO, 
                    string Original_REMARK, 
                    global::System.Nullable<global::System.DateTime> Original_MODI_DTM, 
                    string Original_POSUUID_MASTER, 
                    string Original_BUNDLE_ID, 
                    string Original_FUN_ID, 
                    global::System.Nullable<decimal> Original_R_RATE, 
                    string Original_DATA, 
                    string Original_VOICE, 
                    string Original_TRANS_TYPE, 
                    string Original_APPROVE_STATUS_POS, 
                    string Original_CONN_FLAG, 
                    string Original_QUERY_TABLE_NAME, 
                    string Original_BUNDLE_TYPE, 
                    string Original_SERVICE_SYS_ID, 
                    global::System.Nullable<global::System.DateTime> Original_APPROVAL_DATE, 
                    string Original_MNP, 
                    string Original_BILLING_ACCOUNT_ID, 
                    string Original_SUBSCRIBE_NO) {
            if ((Original_STATUS == null)) {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_STATUS));
            }
            if ((Original_APPLY_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_APPLY_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Original_STORE_NO == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_STORE_NO));
            }
            if ((Original_STORE_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_STORE_NAME));
            }
            if ((Original_SERVICE_TYPE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((decimal)(Original_SERVICE_TYPE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_MACHINE_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_MACHINE_ID));
            }
            if ((Original_TOTAL_AMOUNT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((decimal)(Original_TOTAL_AMOUNT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_SALE_PERSON == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_SALE_PERSON));
            }
            if ((Original_CREATE_USER == null)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_CREATE_USER));
            }
            if ((Original_CREATE_DTM.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((System.DateTime)(Original_CREATE_DTM.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_POSUUID_DETAIL == null)) {
                throw new global::System.ArgumentNullException("Original_POSUUID_DETAIL");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_POSUUID_DETAIL));
            }
            if ((Original_MODI_USER == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_MODI_USER));
            }
            if ((Original_HRS_NO == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_HRS_NO));
            }
            if ((Original_LEASE_NO == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_LEASE_NO));
            }
            if ((Original_REMARK == null)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_REMARK));
            }
            if ((Original_MODI_DTM.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((System.DateTime)(Original_MODI_DTM.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_POSUUID_MASTER == null)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_POSUUID_MASTER));
            }
            if ((Original_BUNDLE_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((string)(Original_BUNDLE_ID));
            }
            if ((Original_FUN_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((string)(Original_FUN_ID));
            }
            if ((Original_R_RATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((decimal)(Original_R_RATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_DATA == null)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((string)(Original_DATA));
            }
            if ((Original_VOICE == null)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((string)(Original_VOICE));
            }
            if ((Original_TRANS_TYPE == null)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((string)(Original_TRANS_TYPE));
            }
            if ((Original_APPROVE_STATUS_POS == null)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((string)(Original_APPROVE_STATUS_POS));
            }
            if ((Original_CONN_FLAG == null)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((string)(Original_CONN_FLAG));
            }
            if ((Original_QUERY_TABLE_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((string)(Original_QUERY_TABLE_NAME));
            }
            if ((Original_BUNDLE_TYPE == null)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((string)(Original_BUNDLE_TYPE));
            }
            if ((Original_SERVICE_SYS_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((string)(Original_SERVICE_SYS_ID));
            }
            if ((Original_APPROVAL_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[56].Value = ((System.DateTime)(Original_APPROVAL_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Original_MNP == null)) {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[58].Value = ((string)(Original_MNP));
            }
            if ((Original_BILLING_ACCOUNT_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[60].Value = ((string)(Original_BILLING_ACCOUNT_ID));
            }
            if ((Original_SUBSCRIBE_NO == null)) {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[62].Value = ((string)(Original_SUBSCRIBE_NO));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string STATUS, 
                    global::System.Nullable<global::System.DateTime> APPLY_DATE, 
                    string STORE_NO, 
                    string STORE_NAME, 
                    global::System.Nullable<decimal> SERVICE_TYPE, 
                    string MACHINE_ID, 
                    global::System.Nullable<decimal> TOTAL_AMOUNT, 
                    string SALE_PERSON, 
                    string CREATE_USER, 
                    global::System.Nullable<global::System.DateTime> CREATE_DTM, 
                    string POSUUID_DETAIL, 
                    string MODI_USER, 
                    string HRS_NO, 
                    string LEASE_NO, 
                    string REMARK, 
                    global::System.Nullable<global::System.DateTime> MODI_DTM, 
                    string POSUUID_MASTER, 
                    string BUNDLE_ID, 
                    string FUN_ID, 
                    global::System.Nullable<decimal> R_RATE, 
                    string DATA, 
                    string VOICE, 
                    string TRANS_TYPE, 
                    string APPROVE_STATUS_POS, 
                    string CONN_FLAG, 
                    string QUERY_TABLE_NAME, 
                    string BUNDLE_TYPE, 
                    string SERVICE_SYS_ID, 
                    global::System.Nullable<global::System.DateTime> APPROVAL_DATE, 
                    string MNP, 
                    string BILLING_ACCOUNT_ID, 
                    string SUBSCRIBE_NO) {
            if ((STATUS == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(STATUS));
            }
            if ((APPLY_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(APPLY_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((STORE_NO == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(STORE_NO));
            }
            if ((STORE_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(STORE_NAME));
            }
            if ((SERVICE_TYPE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(SERVICE_TYPE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((MACHINE_ID == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(MACHINE_ID));
            }
            if ((TOTAL_AMOUNT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(TOTAL_AMOUNT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((SALE_PERSON == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(SALE_PERSON));
            }
            if ((CREATE_USER == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(CREATE_USER));
            }
            if ((CREATE_DTM.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(CREATE_DTM.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((POSUUID_DETAIL == null)) {
                throw new global::System.ArgumentNullException("POSUUID_DETAIL");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(POSUUID_DETAIL));
            }
            if ((MODI_USER == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(MODI_USER));
            }
            if ((HRS_NO == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(HRS_NO));
            }
            if ((LEASE_NO == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(LEASE_NO));
            }
            if ((REMARK == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(REMARK));
            }
            if ((MODI_DTM.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((System.DateTime)(MODI_DTM.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((POSUUID_MASTER == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(POSUUID_MASTER));
            }
            if ((BUNDLE_ID == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(BUNDLE_ID));
            }
            if ((FUN_ID == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(FUN_ID));
            }
            if ((R_RATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((decimal)(R_RATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((DATA == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(DATA));
            }
            if ((VOICE == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(VOICE));
            }
            if ((TRANS_TYPE == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(TRANS_TYPE));
            }
            if ((APPROVE_STATUS_POS == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(APPROVE_STATUS_POS));
            }
            if ((CONN_FLAG == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(CONN_FLAG));
            }
            if ((QUERY_TABLE_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(QUERY_TABLE_NAME));
            }
            if ((BUNDLE_TYPE == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(BUNDLE_TYPE));
            }
            if ((SERVICE_SYS_ID == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(SERVICE_SYS_ID));
            }
            if ((APPROVAL_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((System.DateTime)(APPROVAL_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((MNP == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(MNP));
            }
            if ((BILLING_ACCOUNT_ID == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(BILLING_ACCOUNT_ID));
            }
            if ((SUBSCRIBE_NO == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(SUBSCRIBE_NO));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string STATUS, 
                    global::System.Nullable<global::System.DateTime> APPLY_DATE, 
                    string STORE_NO, 
                    string STORE_NAME, 
                    global::System.Nullable<decimal> SERVICE_TYPE, 
                    string MACHINE_ID, 
                    global::System.Nullable<decimal> TOTAL_AMOUNT, 
                    string SALE_PERSON, 
                    string CREATE_USER, 
                    global::System.Nullable<global::System.DateTime> CREATE_DTM, 
                    string POSUUID_DETAIL, 
                    string MODI_USER, 
                    string HRS_NO, 
                    string LEASE_NO, 
                    string REMARK, 
                    global::System.Nullable<global::System.DateTime> MODI_DTM, 
                    string POSUUID_MASTER, 
                    string BUNDLE_ID, 
                    string FUN_ID, 
                    global::System.Nullable<decimal> R_RATE, 
                    string DATA, 
                    string VOICE, 
                    string TRANS_TYPE, 
                    string APPROVE_STATUS_POS, 
                    string CONN_FLAG, 
                    string QUERY_TABLE_NAME, 
                    string BUNDLE_TYPE, 
                    string SERVICE_SYS_ID, 
                    global::System.Nullable<global::System.DateTime> APPROVAL_DATE, 
                    string MNP, 
                    string BILLING_ACCOUNT_ID, 
                    string SUBSCRIBE_NO, 
                    string Original_STATUS, 
                    global::System.Nullable<global::System.DateTime> Original_APPLY_DATE, 
                    string Original_STORE_NO, 
                    string Original_STORE_NAME, 
                    global::System.Nullable<decimal> Original_SERVICE_TYPE, 
                    string Original_MACHINE_ID, 
                    global::System.Nullable<decimal> Original_TOTAL_AMOUNT, 
                    string Original_SALE_PERSON, 
                    string Original_CREATE_USER, 
                    global::System.Nullable<global::System.DateTime> Original_CREATE_DTM, 
                    string Original_POSUUID_DETAIL, 
                    string Original_MODI_USER, 
                    string Original_HRS_NO, 
                    string Original_LEASE_NO, 
                    string Original_REMARK, 
                    global::System.Nullable<global::System.DateTime> Original_MODI_DTM, 
                    string Original_POSUUID_MASTER, 
                    string Original_BUNDLE_ID, 
                    string Original_FUN_ID, 
                    global::System.Nullable<decimal> Original_R_RATE, 
                    string Original_DATA, 
                    string Original_VOICE, 
                    string Original_TRANS_TYPE, 
                    string Original_APPROVE_STATUS_POS, 
                    string Original_CONN_FLAG, 
                    string Original_QUERY_TABLE_NAME, 
                    string Original_BUNDLE_TYPE, 
                    string Original_SERVICE_SYS_ID, 
                    global::System.Nullable<global::System.DateTime> Original_APPROVAL_DATE, 
                    string Original_MNP, 
                    string Original_BILLING_ACCOUNT_ID, 
                    string Original_SUBSCRIBE_NO) {
            if ((STATUS == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(STATUS));
            }
            if ((APPLY_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(APPLY_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((STORE_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(STORE_NO));
            }
            if ((STORE_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(STORE_NAME));
            }
            if ((SERVICE_TYPE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(SERVICE_TYPE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((MACHINE_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(MACHINE_ID));
            }
            if ((TOTAL_AMOUNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(TOTAL_AMOUNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((SALE_PERSON == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(SALE_PERSON));
            }
            if ((CREATE_USER == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(CREATE_USER));
            }
            if ((CREATE_DTM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(CREATE_DTM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((POSUUID_DETAIL == null)) {
                throw new global::System.ArgumentNullException("POSUUID_DETAIL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(POSUUID_DETAIL));
            }
            if ((MODI_USER == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(MODI_USER));
            }
            if ((HRS_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(HRS_NO));
            }
            if ((LEASE_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(LEASE_NO));
            }
            if ((REMARK == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(REMARK));
            }
            if ((MODI_DTM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(MODI_DTM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((POSUUID_MASTER == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(POSUUID_MASTER));
            }
            if ((BUNDLE_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(BUNDLE_ID));
            }
            if ((FUN_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(FUN_ID));
            }
            if ((R_RATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(R_RATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((DATA == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(DATA));
            }
            if ((VOICE == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(VOICE));
            }
            if ((TRANS_TYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(TRANS_TYPE));
            }
            if ((APPROVE_STATUS_POS == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(APPROVE_STATUS_POS));
            }
            if ((CONN_FLAG == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(CONN_FLAG));
            }
            if ((QUERY_TABLE_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(QUERY_TABLE_NAME));
            }
            if ((BUNDLE_TYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(BUNDLE_TYPE));
            }
            if ((SERVICE_SYS_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(SERVICE_SYS_ID));
            }
            if ((APPROVAL_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((System.DateTime)(APPROVAL_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((MNP == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(MNP));
            }
            if ((BILLING_ACCOUNT_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(BILLING_ACCOUNT_ID));
            }
            if ((SUBSCRIBE_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(SUBSCRIBE_NO));
            }
            if ((Original_STATUS == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_STATUS));
            }
            if ((Original_APPLY_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((System.DateTime)(Original_APPLY_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Original_STORE_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_STORE_NO));
            }
            if ((Original_STORE_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(Original_STORE_NAME));
            }
            if ((Original_SERVICE_TYPE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((decimal)(Original_SERVICE_TYPE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Original_MACHINE_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Original_MACHINE_ID));
            }
            if ((Original_TOTAL_AMOUNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((decimal)(Original_TOTAL_AMOUNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Original_SALE_PERSON == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_SALE_PERSON));
            }
            if ((Original_CREATE_USER == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(Original_CREATE_USER));
            }
            if ((Original_CREATE_DTM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((System.DateTime)(Original_CREATE_DTM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((Original_POSUUID_DETAIL == null)) {
                throw new global::System.ArgumentNullException("Original_POSUUID_DETAIL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(Original_POSUUID_DETAIL));
            }
            if ((Original_MODI_USER == null)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(Original_MODI_USER));
            }
            if ((Original_HRS_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(Original_HRS_NO));
            }
            if ((Original_LEASE_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(Original_LEASE_NO));
            }
            if ((Original_REMARK == null)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[60].Value = ((string)(Original_REMARK));
            }
            if ((Original_MODI_DTM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[62].Value = ((System.DateTime)(Original_MODI_DTM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((Original_POSUUID_MASTER == null)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[64].Value = ((string)(Original_POSUUID_MASTER));
            }
            if ((Original_BUNDLE_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[66].Value = ((string)(Original_BUNDLE_ID));
            }
            if ((Original_FUN_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[68].Value = ((string)(Original_FUN_ID));
            }
            if ((Original_R_RATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[70].Value = ((decimal)(Original_R_RATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((Original_DATA == null)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[72].Value = ((string)(Original_DATA));
            }
            if ((Original_VOICE == null)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[74].Value = ((string)(Original_VOICE));
            }
            if ((Original_TRANS_TYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[76].Value = ((string)(Original_TRANS_TYPE));
            }
            if ((Original_APPROVE_STATUS_POS == null)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[78].Value = ((string)(Original_APPROVE_STATUS_POS));
            }
            if ((Original_CONN_FLAG == null)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[80].Value = ((string)(Original_CONN_FLAG));
            }
            if ((Original_QUERY_TABLE_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[82].Value = ((string)(Original_QUERY_TABLE_NAME));
            }
            if ((Original_BUNDLE_TYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[84].Value = ((string)(Original_BUNDLE_TYPE));
            }
            if ((Original_SERVICE_SYS_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[86].Value = ((string)(Original_SERVICE_SYS_ID));
            }
            if ((Original_APPROVAL_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[88].Value = ((System.DateTime)(Original_APPROVAL_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            if ((Original_MNP == null)) {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[90].Value = ((string)(Original_MNP));
            }
            if ((Original_BILLING_ACCOUNT_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[92].Value = ((string)(Original_BILLING_ACCOUNT_ID));
            }
            if ((Original_SUBSCRIBE_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[94].Value = ((string)(Original_SUBSCRIBE_NO));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string STATUS, 
                    global::System.Nullable<global::System.DateTime> APPLY_DATE, 
                    string STORE_NO, 
                    string STORE_NAME, 
                    global::System.Nullable<decimal> SERVICE_TYPE, 
                    string MACHINE_ID, 
                    global::System.Nullable<decimal> TOTAL_AMOUNT, 
                    string SALE_PERSON, 
                    string CREATE_USER, 
                    global::System.Nullable<global::System.DateTime> CREATE_DTM, 
                    string MODI_USER, 
                    string HRS_NO, 
                    string LEASE_NO, 
                    string REMARK, 
                    global::System.Nullable<global::System.DateTime> MODI_DTM, 
                    string POSUUID_MASTER, 
                    string BUNDLE_ID, 
                    string FUN_ID, 
                    global::System.Nullable<decimal> R_RATE, 
                    string DATA, 
                    string VOICE, 
                    string TRANS_TYPE, 
                    string APPROVE_STATUS_POS, 
                    string CONN_FLAG, 
                    string QUERY_TABLE_NAME, 
                    string BUNDLE_TYPE, 
                    string SERVICE_SYS_ID, 
                    global::System.Nullable<global::System.DateTime> APPROVAL_DATE, 
                    string MNP, 
                    string BILLING_ACCOUNT_ID, 
                    string SUBSCRIBE_NO, 
                    string Original_STATUS, 
                    global::System.Nullable<global::System.DateTime> Original_APPLY_DATE, 
                    string Original_STORE_NO, 
                    string Original_STORE_NAME, 
                    global::System.Nullable<decimal> Original_SERVICE_TYPE, 
                    string Original_MACHINE_ID, 
                    global::System.Nullable<decimal> Original_TOTAL_AMOUNT, 
                    string Original_SALE_PERSON, 
                    string Original_CREATE_USER, 
                    global::System.Nullable<global::System.DateTime> Original_CREATE_DTM, 
                    string Original_POSUUID_DETAIL, 
                    string Original_MODI_USER, 
                    string Original_HRS_NO, 
                    string Original_LEASE_NO, 
                    string Original_REMARK, 
                    global::System.Nullable<global::System.DateTime> Original_MODI_DTM, 
                    string Original_POSUUID_MASTER, 
                    string Original_BUNDLE_ID, 
                    string Original_FUN_ID, 
                    global::System.Nullable<decimal> Original_R_RATE, 
                    string Original_DATA, 
                    string Original_VOICE, 
                    string Original_TRANS_TYPE, 
                    string Original_APPROVE_STATUS_POS, 
                    string Original_CONN_FLAG, 
                    string Original_QUERY_TABLE_NAME, 
                    string Original_BUNDLE_TYPE, 
                    string Original_SERVICE_SYS_ID, 
                    global::System.Nullable<global::System.DateTime> Original_APPROVAL_DATE, 
                    string Original_MNP, 
                    string Original_BILLING_ACCOUNT_ID, 
                    string Original_SUBSCRIBE_NO) {
            return this.Update(STATUS, APPLY_DATE, STORE_NO, STORE_NAME, SERVICE_TYPE, MACHINE_ID, TOTAL_AMOUNT, SALE_PERSON, CREATE_USER, CREATE_DTM, Original_POSUUID_DETAIL, MODI_USER, HRS_NO, LEASE_NO, REMARK, MODI_DTM, POSUUID_MASTER, BUNDLE_ID, FUN_ID, R_RATE, DATA, VOICE, TRANS_TYPE, APPROVE_STATUS_POS, CONN_FLAG, QUERY_TABLE_NAME, BUNDLE_TYPE, SERVICE_SYS_ID, APPROVAL_DATE, MNP, BILLING_ACCOUNT_ID, SUBSCRIBE_NO, Original_STATUS, Original_APPLY_DATE, Original_STORE_NO, Original_STORE_NAME, Original_SERVICE_TYPE, Original_MACHINE_ID, Original_TOTAL_AMOUNT, Original_SALE_PERSON, Original_CREATE_USER, Original_CREATE_DTM, Original_POSUUID_DETAIL, Original_MODI_USER, Original_HRS_NO, Original_LEASE_NO, Original_REMARK, Original_MODI_DTM, Original_POSUUID_MASTER, Original_BUNDLE_ID, Original_FUN_ID, Original_R_RATE, Original_DATA, Original_VOICE, Original_TRANS_TYPE, Original_APPROVE_STATUS_POS, Original_CONN_FLAG, Original_QUERY_TABLE_NAME, Original_BUNDLE_TYPE, Original_SERVICE_SYS_ID, Original_APPROVAL_DATE, Original_MNP, Original_BILLING_ACCOUNT_ID, Original_SUBSCRIBE_NO);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private TO_CLOSE_HEADTableAdapter _tO_CLOSE_HEADTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public TO_CLOSE_HEADTableAdapter TO_CLOSE_HEADTableAdapter {
            get {
                return this._tO_CLOSE_HEADTableAdapter;
            }
            set {
                this._tO_CLOSE_HEADTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._tO_CLOSE_HEADTableAdapter != null) 
                            && (this._tO_CLOSE_HEADTableAdapter.Connection != null))) {
                    return this._tO_CLOSE_HEADTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._tO_CLOSE_HEADTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(SAL05_TO_CLOSE_DTO dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tO_CLOSE_HEADTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TO_CLOSE_HEAD.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tO_CLOSE_HEADTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(SAL05_TO_CLOSE_DTO dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tO_CLOSE_HEADTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TO_CLOSE_HEAD.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tO_CLOSE_HEADTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(SAL05_TO_CLOSE_DTO dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._tO_CLOSE_HEADTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TO_CLOSE_HEAD.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tO_CLOSE_HEADTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(SAL05_TO_CLOSE_DTO dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._tO_CLOSE_HEADTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tO_CLOSE_HEADTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager 未包含連接資訊。請將每個 TableAdapterManager 的 TableAdapter 屬性設成有效的 Table" +
                        "Adapter 執行個體。");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("無法開始交易。目前的資料連接不支援交易或是目前的狀態不允許交易開始。");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._tO_CLOSE_HEADTableAdapter != null)) {
                    revertConnections.Add(this._tO_CLOSE_HEADTableAdapter, this._tO_CLOSE_HEADTableAdapter.Connection);
                    this._tO_CLOSE_HEADTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(workConnection));
                    this._tO_CLOSE_HEADTableAdapter.Transaction = ((global::System.Data.OracleClient.OracleTransaction)(workTransaction));
                    if (this._tO_CLOSE_HEADTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tO_CLOSE_HEADTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tO_CLOSE_HEADTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._tO_CLOSE_HEADTableAdapter != null)) {
                    this._tO_CLOSE_HEADTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(revertConnections[this._tO_CLOSE_HEADTableAdapter]));
                    this._tO_CLOSE_HEADTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591