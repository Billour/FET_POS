//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:2.0.50727.4206
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace FET.POS.Model.DTO {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("OPT05_HqInvoiceAssign_DTO")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class OPT05_HqInvoiceAssign_DTO : global::System.Data.DataSet {
        
        private HQ_INVOICE_ASSIGN_TEMPDataTable tableHQ_INVOICE_ASSIGN_TEMP;
        
        private STORE_INVOICE_ASSIGNDataTable tableSTORE_INVOICE_ASSIGN;
        
        private HQ_INVOICE_ASSIGNDataTable tableHQ_INVOICE_ASSIGN;
        
        private STORE_TERMINATING_MACHINEDataTable tableSTORE_TERMINATING_MACHINE;
        
        private UPLOAD_TEMPDataTable tableUPLOAD_TEMP;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public OPT05_HqInvoiceAssign_DTO() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected OPT05_HqInvoiceAssign_DTO(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["HQ_INVOICE_ASSIGN_TEMP"] != null)) {
                    base.Tables.Add(new HQ_INVOICE_ASSIGN_TEMPDataTable(ds.Tables["HQ_INVOICE_ASSIGN_TEMP"]));
                }
                if ((ds.Tables["STORE_INVOICE_ASSIGN"] != null)) {
                    base.Tables.Add(new STORE_INVOICE_ASSIGNDataTable(ds.Tables["STORE_INVOICE_ASSIGN"]));
                }
                if ((ds.Tables["HQ_INVOICE_ASSIGN"] != null)) {
                    base.Tables.Add(new HQ_INVOICE_ASSIGNDataTable(ds.Tables["HQ_INVOICE_ASSIGN"]));
                }
                if ((ds.Tables["STORE_TERMINATING_MACHINE"] != null)) {
                    base.Tables.Add(new STORE_TERMINATING_MACHINEDataTable(ds.Tables["STORE_TERMINATING_MACHINE"]));
                }
                if ((ds.Tables["UPLOAD_TEMP"] != null)) {
                    base.Tables.Add(new UPLOAD_TEMPDataTable(ds.Tables["UPLOAD_TEMP"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HQ_INVOICE_ASSIGN_TEMPDataTable HQ_INVOICE_ASSIGN_TEMP {
            get {
                return this.tableHQ_INVOICE_ASSIGN_TEMP;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public STORE_INVOICE_ASSIGNDataTable STORE_INVOICE_ASSIGN {
            get {
                return this.tableSTORE_INVOICE_ASSIGN;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HQ_INVOICE_ASSIGNDataTable HQ_INVOICE_ASSIGN {
            get {
                return this.tableHQ_INVOICE_ASSIGN;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public STORE_TERMINATING_MACHINEDataTable STORE_TERMINATING_MACHINE {
            get {
                return this.tableSTORE_TERMINATING_MACHINE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UPLOAD_TEMPDataTable UPLOAD_TEMP {
            get {
                return this.tableUPLOAD_TEMP;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            OPT05_HqInvoiceAssign_DTO cln = ((OPT05_HqInvoiceAssign_DTO)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["HQ_INVOICE_ASSIGN_TEMP"] != null)) {
                    base.Tables.Add(new HQ_INVOICE_ASSIGN_TEMPDataTable(ds.Tables["HQ_INVOICE_ASSIGN_TEMP"]));
                }
                if ((ds.Tables["STORE_INVOICE_ASSIGN"] != null)) {
                    base.Tables.Add(new STORE_INVOICE_ASSIGNDataTable(ds.Tables["STORE_INVOICE_ASSIGN"]));
                }
                if ((ds.Tables["HQ_INVOICE_ASSIGN"] != null)) {
                    base.Tables.Add(new HQ_INVOICE_ASSIGNDataTable(ds.Tables["HQ_INVOICE_ASSIGN"]));
                }
                if ((ds.Tables["STORE_TERMINATING_MACHINE"] != null)) {
                    base.Tables.Add(new STORE_TERMINATING_MACHINEDataTable(ds.Tables["STORE_TERMINATING_MACHINE"]));
                }
                if ((ds.Tables["UPLOAD_TEMP"] != null)) {
                    base.Tables.Add(new UPLOAD_TEMPDataTable(ds.Tables["UPLOAD_TEMP"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableHQ_INVOICE_ASSIGN_TEMP = ((HQ_INVOICE_ASSIGN_TEMPDataTable)(base.Tables["HQ_INVOICE_ASSIGN_TEMP"]));
            if ((initTable == true)) {
                if ((this.tableHQ_INVOICE_ASSIGN_TEMP != null)) {
                    this.tableHQ_INVOICE_ASSIGN_TEMP.InitVars();
                }
            }
            this.tableSTORE_INVOICE_ASSIGN = ((STORE_INVOICE_ASSIGNDataTable)(base.Tables["STORE_INVOICE_ASSIGN"]));
            if ((initTable == true)) {
                if ((this.tableSTORE_INVOICE_ASSIGN != null)) {
                    this.tableSTORE_INVOICE_ASSIGN.InitVars();
                }
            }
            this.tableHQ_INVOICE_ASSIGN = ((HQ_INVOICE_ASSIGNDataTable)(base.Tables["HQ_INVOICE_ASSIGN"]));
            if ((initTable == true)) {
                if ((this.tableHQ_INVOICE_ASSIGN != null)) {
                    this.tableHQ_INVOICE_ASSIGN.InitVars();
                }
            }
            this.tableSTORE_TERMINATING_MACHINE = ((STORE_TERMINATING_MACHINEDataTable)(base.Tables["STORE_TERMINATING_MACHINE"]));
            if ((initTable == true)) {
                if ((this.tableSTORE_TERMINATING_MACHINE != null)) {
                    this.tableSTORE_TERMINATING_MACHINE.InitVars();
                }
            }
            this.tableUPLOAD_TEMP = ((UPLOAD_TEMPDataTable)(base.Tables["UPLOAD_TEMP"]));
            if ((initTable == true)) {
                if ((this.tableUPLOAD_TEMP != null)) {
                    this.tableUPLOAD_TEMP.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "OPT05_HqInvoiceAssign_DTO";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/OPT05_HqInvoiceAssign_DTO.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableHQ_INVOICE_ASSIGN_TEMP = new HQ_INVOICE_ASSIGN_TEMPDataTable();
            base.Tables.Add(this.tableHQ_INVOICE_ASSIGN_TEMP);
            this.tableSTORE_INVOICE_ASSIGN = new STORE_INVOICE_ASSIGNDataTable();
            base.Tables.Add(this.tableSTORE_INVOICE_ASSIGN);
            this.tableHQ_INVOICE_ASSIGN = new HQ_INVOICE_ASSIGNDataTable();
            base.Tables.Add(this.tableHQ_INVOICE_ASSIGN);
            this.tableSTORE_TERMINATING_MACHINE = new STORE_TERMINATING_MACHINEDataTable();
            base.Tables.Add(this.tableSTORE_TERMINATING_MACHINE);
            this.tableUPLOAD_TEMP = new UPLOAD_TEMPDataTable();
            base.Tables.Add(this.tableUPLOAD_TEMP);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeHQ_INVOICE_ASSIGN_TEMP() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSTORE_INVOICE_ASSIGN() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeHQ_INVOICE_ASSIGN() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSTORE_TERMINATING_MACHINE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeUPLOAD_TEMP() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            OPT05_HqInvoiceAssign_DTO ds = new OPT05_HqInvoiceAssign_DTO();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void HQ_INVOICE_ASSIGN_TEMPRowChangeEventHandler(object sender, HQ_INVOICE_ASSIGN_TEMPRowChangeEvent e);
        
        public delegate void STORE_INVOICE_ASSIGNRowChangeEventHandler(object sender, STORE_INVOICE_ASSIGNRowChangeEvent e);
        
        public delegate void HQ_INVOICE_ASSIGNRowChangeEventHandler(object sender, HQ_INVOICE_ASSIGNRowChangeEvent e);
        
        public delegate void STORE_TERMINATING_MACHINERowChangeEventHandler(object sender, STORE_TERMINATING_MACHINERowChangeEvent e);
        
        public delegate void UPLOAD_TEMPRowChangeEventHandler(object sender, UPLOAD_TEMPRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HQ_INVOICE_ASSIGN_TEMPDataTable : global::System.Data.TypedTableBase<HQ_INVOICE_ASSIGN_TEMPRow> {
            
            private global::System.Data.DataColumn columnASSIGN_ID;
            
            private global::System.Data.DataColumn columnBATCH_NO;
            
            private global::System.Data.DataColumn columnUSE_TYPE;
            
            private global::System.Data.DataColumn columnS_USE_YM;
            
            private global::System.Data.DataColumn columnE_USE_YM;
            
            private global::System.Data.DataColumn columnLEADER_CODE;
            
            private global::System.Data.DataColumn columnINIT_NO;
            
            private global::System.Data.DataColumn columnEND_NO;
            
            private global::System.Data.DataColumn columnSHEET_COUNT;
            
            private global::System.Data.DataColumn columnSTORE_NO;
            
            private global::System.Data.DataColumn columnINVOICE_TYPE_ID;
            
            private global::System.Data.DataColumn columnEXCEPTION_CAUSE;
            
            private global::System.Data.DataColumn columnSTATUS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HQ_INVOICE_ASSIGN_TEMPDataTable() {
                this.TableName = "HQ_INVOICE_ASSIGN_TEMP";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HQ_INVOICE_ASSIGN_TEMPDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected HQ_INVOICE_ASSIGN_TEMPDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ASSIGN_IDColumn {
                get {
                    return this.columnASSIGN_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BATCH_NOColumn {
                get {
                    return this.columnBATCH_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USE_TYPEColumn {
                get {
                    return this.columnUSE_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn S_USE_YMColumn {
                get {
                    return this.columnS_USE_YM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn E_USE_YMColumn {
                get {
                    return this.columnE_USE_YM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LEADER_CODEColumn {
                get {
                    return this.columnLEADER_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INIT_NOColumn {
                get {
                    return this.columnINIT_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn END_NOColumn {
                get {
                    return this.columnEND_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHEET_COUNTColumn {
                get {
                    return this.columnSHEET_COUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STORE_NOColumn {
                get {
                    return this.columnSTORE_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INVOICE_TYPE_IDColumn {
                get {
                    return this.columnINVOICE_TYPE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EXCEPTION_CAUSEColumn {
                get {
                    return this.columnEXCEPTION_CAUSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STATUSColumn {
                get {
                    return this.columnSTATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HQ_INVOICE_ASSIGN_TEMPRow this[int index] {
                get {
                    return ((HQ_INVOICE_ASSIGN_TEMPRow)(this.Rows[index]));
                }
            }
            
            public event HQ_INVOICE_ASSIGN_TEMPRowChangeEventHandler HQ_INVOICE_ASSIGN_TEMPRowChanging;
            
            public event HQ_INVOICE_ASSIGN_TEMPRowChangeEventHandler HQ_INVOICE_ASSIGN_TEMPRowChanged;
            
            public event HQ_INVOICE_ASSIGN_TEMPRowChangeEventHandler HQ_INVOICE_ASSIGN_TEMPRowDeleting;
            
            public event HQ_INVOICE_ASSIGN_TEMPRowChangeEventHandler HQ_INVOICE_ASSIGN_TEMPRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddHQ_INVOICE_ASSIGN_TEMPRow(HQ_INVOICE_ASSIGN_TEMPRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HQ_INVOICE_ASSIGN_TEMPRow AddHQ_INVOICE_ASSIGN_TEMPRow(string ASSIGN_ID, string BATCH_NO, string USE_TYPE, string S_USE_YM, string E_USE_YM, string LEADER_CODE, string INIT_NO, string END_NO, decimal SHEET_COUNT, string STORE_NO, string INVOICE_TYPE_ID, string EXCEPTION_CAUSE, string STATUS) {
                HQ_INVOICE_ASSIGN_TEMPRow rowHQ_INVOICE_ASSIGN_TEMPRow = ((HQ_INVOICE_ASSIGN_TEMPRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ASSIGN_ID,
                        BATCH_NO,
                        USE_TYPE,
                        S_USE_YM,
                        E_USE_YM,
                        LEADER_CODE,
                        INIT_NO,
                        END_NO,
                        SHEET_COUNT,
                        STORE_NO,
                        INVOICE_TYPE_ID,
                        EXCEPTION_CAUSE,
                        STATUS};
                rowHQ_INVOICE_ASSIGN_TEMPRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHQ_INVOICE_ASSIGN_TEMPRow);
                return rowHQ_INVOICE_ASSIGN_TEMPRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HQ_INVOICE_ASSIGN_TEMPRow FindByASSIGN_IDBATCH_NO(string ASSIGN_ID, string BATCH_NO) {
                return ((HQ_INVOICE_ASSIGN_TEMPRow)(this.Rows.Find(new object[] {
                            ASSIGN_ID,
                            BATCH_NO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                HQ_INVOICE_ASSIGN_TEMPDataTable cln = ((HQ_INVOICE_ASSIGN_TEMPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HQ_INVOICE_ASSIGN_TEMPDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnASSIGN_ID = base.Columns["ASSIGN_ID"];
                this.columnBATCH_NO = base.Columns["BATCH_NO"];
                this.columnUSE_TYPE = base.Columns["USE_TYPE"];
                this.columnS_USE_YM = base.Columns["S_USE_YM"];
                this.columnE_USE_YM = base.Columns["E_USE_YM"];
                this.columnLEADER_CODE = base.Columns["LEADER_CODE"];
                this.columnINIT_NO = base.Columns["INIT_NO"];
                this.columnEND_NO = base.Columns["END_NO"];
                this.columnSHEET_COUNT = base.Columns["SHEET_COUNT"];
                this.columnSTORE_NO = base.Columns["STORE_NO"];
                this.columnINVOICE_TYPE_ID = base.Columns["INVOICE_TYPE_ID"];
                this.columnEXCEPTION_CAUSE = base.Columns["EXCEPTION_CAUSE"];
                this.columnSTATUS = base.Columns["STATUS"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnASSIGN_ID = new global::System.Data.DataColumn("ASSIGN_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnASSIGN_ID);
                this.columnBATCH_NO = new global::System.Data.DataColumn("BATCH_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBATCH_NO);
                this.columnUSE_TYPE = new global::System.Data.DataColumn("USE_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSE_TYPE);
                this.columnS_USE_YM = new global::System.Data.DataColumn("S_USE_YM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS_USE_YM);
                this.columnE_USE_YM = new global::System.Data.DataColumn("E_USE_YM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE_USE_YM);
                this.columnLEADER_CODE = new global::System.Data.DataColumn("LEADER_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLEADER_CODE);
                this.columnINIT_NO = new global::System.Data.DataColumn("INIT_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINIT_NO);
                this.columnEND_NO = new global::System.Data.DataColumn("END_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEND_NO);
                this.columnSHEET_COUNT = new global::System.Data.DataColumn("SHEET_COUNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHEET_COUNT);
                this.columnSTORE_NO = new global::System.Data.DataColumn("STORE_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTORE_NO);
                this.columnINVOICE_TYPE_ID = new global::System.Data.DataColumn("INVOICE_TYPE_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINVOICE_TYPE_ID);
                this.columnEXCEPTION_CAUSE = new global::System.Data.DataColumn("EXCEPTION_CAUSE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXCEPTION_CAUSE);
                this.columnSTATUS = new global::System.Data.DataColumn("STATUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATUS);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnASSIGN_ID,
                                this.columnBATCH_NO}, true));
                this.columnASSIGN_ID.AllowDBNull = false;
                this.columnASSIGN_ID.MaxLength = 32;
                this.columnBATCH_NO.AllowDBNull = false;
                this.columnBATCH_NO.MaxLength = 32;
                this.columnUSE_TYPE.AllowDBNull = false;
                this.columnUSE_TYPE.MaxLength = 1;
                this.columnS_USE_YM.AllowDBNull = false;
                this.columnS_USE_YM.MaxLength = 7;
                this.columnE_USE_YM.AllowDBNull = false;
                this.columnE_USE_YM.MaxLength = 7;
                this.columnLEADER_CODE.AllowDBNull = false;
                this.columnLEADER_CODE.MaxLength = 2;
                this.columnINIT_NO.AllowDBNull = false;
                this.columnINIT_NO.MaxLength = 8;
                this.columnEND_NO.AllowDBNull = false;
                this.columnEND_NO.MaxLength = 8;
                this.columnSHEET_COUNT.AllowDBNull = false;
                this.columnSTORE_NO.MaxLength = 32;
                this.columnINVOICE_TYPE_ID.MaxLength = 2;
                this.columnEXCEPTION_CAUSE.MaxLength = 200;
                this.columnSTATUS.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HQ_INVOICE_ASSIGN_TEMPRow NewHQ_INVOICE_ASSIGN_TEMPRow() {
                return ((HQ_INVOICE_ASSIGN_TEMPRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HQ_INVOICE_ASSIGN_TEMPRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(HQ_INVOICE_ASSIGN_TEMPRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HQ_INVOICE_ASSIGN_TEMPRowChanged != null)) {
                    this.HQ_INVOICE_ASSIGN_TEMPRowChanged(this, new HQ_INVOICE_ASSIGN_TEMPRowChangeEvent(((HQ_INVOICE_ASSIGN_TEMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HQ_INVOICE_ASSIGN_TEMPRowChanging != null)) {
                    this.HQ_INVOICE_ASSIGN_TEMPRowChanging(this, new HQ_INVOICE_ASSIGN_TEMPRowChangeEvent(((HQ_INVOICE_ASSIGN_TEMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HQ_INVOICE_ASSIGN_TEMPRowDeleted != null)) {
                    this.HQ_INVOICE_ASSIGN_TEMPRowDeleted(this, new HQ_INVOICE_ASSIGN_TEMPRowChangeEvent(((HQ_INVOICE_ASSIGN_TEMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HQ_INVOICE_ASSIGN_TEMPRowDeleting != null)) {
                    this.HQ_INVOICE_ASSIGN_TEMPRowDeleting(this, new HQ_INVOICE_ASSIGN_TEMPRowChangeEvent(((HQ_INVOICE_ASSIGN_TEMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveHQ_INVOICE_ASSIGN_TEMPRow(HQ_INVOICE_ASSIGN_TEMPRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                OPT05_HqInvoiceAssign_DTO ds = new OPT05_HqInvoiceAssign_DTO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HQ_INVOICE_ASSIGN_TEMPDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class STORE_INVOICE_ASSIGNDataTable : global::System.Data.TypedTableBase<STORE_INVOICE_ASSIGNRow> {
            
            private global::System.Data.DataColumn columnMACHINE_ID;
            
            private global::System.Data.DataColumn columnASSIGN_ID;
            
            private global::System.Data.DataColumn columnSTART_NO;
            
            private global::System.Data.DataColumn columnEND_NO;
            
            private global::System.Data.DataColumn columnCURRENT_NO;
            
            private global::System.Data.DataColumn columnSHEET_COUNT;
            
            private global::System.Data.DataColumn columnCREATE_USER;
            
            private global::System.Data.DataColumn columnCREATE_DTM;
            
            private global::System.Data.DataColumn columnMODI_USER;
            
            private global::System.Data.DataColumn columnMODI_DTM;
            
            private global::System.Data.DataColumn columnSTORE_NO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STORE_INVOICE_ASSIGNDataTable() {
                this.TableName = "STORE_INVOICE_ASSIGN";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal STORE_INVOICE_ASSIGNDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected STORE_INVOICE_ASSIGNDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MACHINE_IDColumn {
                get {
                    return this.columnMACHINE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ASSIGN_IDColumn {
                get {
                    return this.columnASSIGN_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn START_NOColumn {
                get {
                    return this.columnSTART_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn END_NOColumn {
                get {
                    return this.columnEND_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CURRENT_NOColumn {
                get {
                    return this.columnCURRENT_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHEET_COUNTColumn {
                get {
                    return this.columnSHEET_COUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_USERColumn {
                get {
                    return this.columnCREATE_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_DTMColumn {
                get {
                    return this.columnCREATE_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODI_USERColumn {
                get {
                    return this.columnMODI_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODI_DTMColumn {
                get {
                    return this.columnMODI_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STORE_NOColumn {
                get {
                    return this.columnSTORE_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STORE_INVOICE_ASSIGNRow this[int index] {
                get {
                    return ((STORE_INVOICE_ASSIGNRow)(this.Rows[index]));
                }
            }
            
            public event STORE_INVOICE_ASSIGNRowChangeEventHandler STORE_INVOICE_ASSIGNRowChanging;
            
            public event STORE_INVOICE_ASSIGNRowChangeEventHandler STORE_INVOICE_ASSIGNRowChanged;
            
            public event STORE_INVOICE_ASSIGNRowChangeEventHandler STORE_INVOICE_ASSIGNRowDeleting;
            
            public event STORE_INVOICE_ASSIGNRowChangeEventHandler STORE_INVOICE_ASSIGNRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSTORE_INVOICE_ASSIGNRow(STORE_INVOICE_ASSIGNRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STORE_INVOICE_ASSIGNRow AddSTORE_INVOICE_ASSIGNRow(string MACHINE_ID, string ASSIGN_ID, string START_NO, string END_NO, string CURRENT_NO, decimal SHEET_COUNT, string CREATE_USER, System.DateTime CREATE_DTM, string MODI_USER, System.DateTime MODI_DTM, string STORE_NO) {
                STORE_INVOICE_ASSIGNRow rowSTORE_INVOICE_ASSIGNRow = ((STORE_INVOICE_ASSIGNRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MACHINE_ID,
                        ASSIGN_ID,
                        START_NO,
                        END_NO,
                        CURRENT_NO,
                        SHEET_COUNT,
                        CREATE_USER,
                        CREATE_DTM,
                        MODI_USER,
                        MODI_DTM,
                        STORE_NO};
                rowSTORE_INVOICE_ASSIGNRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSTORE_INVOICE_ASSIGNRow);
                return rowSTORE_INVOICE_ASSIGNRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STORE_INVOICE_ASSIGNRow FindByMACHINE_IDASSIGN_ID(string MACHINE_ID, string ASSIGN_ID) {
                return ((STORE_INVOICE_ASSIGNRow)(this.Rows.Find(new object[] {
                            MACHINE_ID,
                            ASSIGN_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                STORE_INVOICE_ASSIGNDataTable cln = ((STORE_INVOICE_ASSIGNDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new STORE_INVOICE_ASSIGNDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMACHINE_ID = base.Columns["MACHINE_ID"];
                this.columnASSIGN_ID = base.Columns["ASSIGN_ID"];
                this.columnSTART_NO = base.Columns["START_NO"];
                this.columnEND_NO = base.Columns["END_NO"];
                this.columnCURRENT_NO = base.Columns["CURRENT_NO"];
                this.columnSHEET_COUNT = base.Columns["SHEET_COUNT"];
                this.columnCREATE_USER = base.Columns["CREATE_USER"];
                this.columnCREATE_DTM = base.Columns["CREATE_DTM"];
                this.columnMODI_USER = base.Columns["MODI_USER"];
                this.columnMODI_DTM = base.Columns["MODI_DTM"];
                this.columnSTORE_NO = base.Columns["STORE_NO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMACHINE_ID = new global::System.Data.DataColumn("MACHINE_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMACHINE_ID);
                this.columnASSIGN_ID = new global::System.Data.DataColumn("ASSIGN_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnASSIGN_ID);
                this.columnSTART_NO = new global::System.Data.DataColumn("START_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTART_NO);
                this.columnEND_NO = new global::System.Data.DataColumn("END_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEND_NO);
                this.columnCURRENT_NO = new global::System.Data.DataColumn("CURRENT_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCURRENT_NO);
                this.columnSHEET_COUNT = new global::System.Data.DataColumn("SHEET_COUNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHEET_COUNT);
                this.columnCREATE_USER = new global::System.Data.DataColumn("CREATE_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_USER);
                this.columnCREATE_DTM = new global::System.Data.DataColumn("CREATE_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_DTM);
                this.columnMODI_USER = new global::System.Data.DataColumn("MODI_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODI_USER);
                this.columnMODI_DTM = new global::System.Data.DataColumn("MODI_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODI_DTM);
                this.columnSTORE_NO = new global::System.Data.DataColumn("STORE_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTORE_NO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMACHINE_ID,
                                this.columnASSIGN_ID}, true));
                this.columnMACHINE_ID.AllowDBNull = false;
                this.columnMACHINE_ID.MaxLength = 32;
                this.columnASSIGN_ID.AllowDBNull = false;
                this.columnASSIGN_ID.MaxLength = 32;
                this.columnSTART_NO.MaxLength = 8;
                this.columnEND_NO.MaxLength = 8;
                this.columnCURRENT_NO.MaxLength = 8;
                this.columnCREATE_USER.AllowDBNull = false;
                this.columnCREATE_USER.MaxLength = 50;
                this.columnCREATE_DTM.AllowDBNull = false;
                this.columnMODI_USER.AllowDBNull = false;
                this.columnMODI_USER.MaxLength = 50;
                this.columnMODI_DTM.AllowDBNull = false;
                this.columnSTORE_NO.MaxLength = 32;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STORE_INVOICE_ASSIGNRow NewSTORE_INVOICE_ASSIGNRow() {
                return ((STORE_INVOICE_ASSIGNRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new STORE_INVOICE_ASSIGNRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(STORE_INVOICE_ASSIGNRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.STORE_INVOICE_ASSIGNRowChanged != null)) {
                    this.STORE_INVOICE_ASSIGNRowChanged(this, new STORE_INVOICE_ASSIGNRowChangeEvent(((STORE_INVOICE_ASSIGNRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.STORE_INVOICE_ASSIGNRowChanging != null)) {
                    this.STORE_INVOICE_ASSIGNRowChanging(this, new STORE_INVOICE_ASSIGNRowChangeEvent(((STORE_INVOICE_ASSIGNRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.STORE_INVOICE_ASSIGNRowDeleted != null)) {
                    this.STORE_INVOICE_ASSIGNRowDeleted(this, new STORE_INVOICE_ASSIGNRowChangeEvent(((STORE_INVOICE_ASSIGNRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.STORE_INVOICE_ASSIGNRowDeleting != null)) {
                    this.STORE_INVOICE_ASSIGNRowDeleting(this, new STORE_INVOICE_ASSIGNRowChangeEvent(((STORE_INVOICE_ASSIGNRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSTORE_INVOICE_ASSIGNRow(STORE_INVOICE_ASSIGNRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                OPT05_HqInvoiceAssign_DTO ds = new OPT05_HqInvoiceAssign_DTO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "STORE_INVOICE_ASSIGNDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HQ_INVOICE_ASSIGNDataTable : global::System.Data.TypedTableBase<HQ_INVOICE_ASSIGNRow> {
            
            private global::System.Data.DataColumn columnASSIGN_ID;
            
            private global::System.Data.DataColumn columnUSE_TYPE;
            
            private global::System.Data.DataColumn columnS_USE_YM;
            
            private global::System.Data.DataColumn columnE_USE_YM;
            
            private global::System.Data.DataColumn columnLEADER_CODE;
            
            private global::System.Data.DataColumn columnINIT_NO;
            
            private global::System.Data.DataColumn columnEND_NO;
            
            private global::System.Data.DataColumn columnSHEET_COUNT;
            
            private global::System.Data.DataColumn columnCURRENT_NO;
            
            private global::System.Data.DataColumn columnCREATE_USER;
            
            private global::System.Data.DataColumn columnCREATE_DTM;
            
            private global::System.Data.DataColumn columnMODI_USER;
            
            private global::System.Data.DataColumn columnMODI_DTM;
            
            private global::System.Data.DataColumn columnSTORE_NO;
            
            private global::System.Data.DataColumn columnINVOICE_TYPE_ID;
            
            private global::System.Data.DataColumn columnSTATUS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HQ_INVOICE_ASSIGNDataTable() {
                this.TableName = "HQ_INVOICE_ASSIGN";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HQ_INVOICE_ASSIGNDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected HQ_INVOICE_ASSIGNDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ASSIGN_IDColumn {
                get {
                    return this.columnASSIGN_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USE_TYPEColumn {
                get {
                    return this.columnUSE_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn S_USE_YMColumn {
                get {
                    return this.columnS_USE_YM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn E_USE_YMColumn {
                get {
                    return this.columnE_USE_YM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LEADER_CODEColumn {
                get {
                    return this.columnLEADER_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INIT_NOColumn {
                get {
                    return this.columnINIT_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn END_NOColumn {
                get {
                    return this.columnEND_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHEET_COUNTColumn {
                get {
                    return this.columnSHEET_COUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CURRENT_NOColumn {
                get {
                    return this.columnCURRENT_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_USERColumn {
                get {
                    return this.columnCREATE_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_DTMColumn {
                get {
                    return this.columnCREATE_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODI_USERColumn {
                get {
                    return this.columnMODI_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODI_DTMColumn {
                get {
                    return this.columnMODI_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STORE_NOColumn {
                get {
                    return this.columnSTORE_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INVOICE_TYPE_IDColumn {
                get {
                    return this.columnINVOICE_TYPE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STATUSColumn {
                get {
                    return this.columnSTATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HQ_INVOICE_ASSIGNRow this[int index] {
                get {
                    return ((HQ_INVOICE_ASSIGNRow)(this.Rows[index]));
                }
            }
            
            public event HQ_INVOICE_ASSIGNRowChangeEventHandler HQ_INVOICE_ASSIGNRowChanging;
            
            public event HQ_INVOICE_ASSIGNRowChangeEventHandler HQ_INVOICE_ASSIGNRowChanged;
            
            public event HQ_INVOICE_ASSIGNRowChangeEventHandler HQ_INVOICE_ASSIGNRowDeleting;
            
            public event HQ_INVOICE_ASSIGNRowChangeEventHandler HQ_INVOICE_ASSIGNRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddHQ_INVOICE_ASSIGNRow(HQ_INVOICE_ASSIGNRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HQ_INVOICE_ASSIGNRow AddHQ_INVOICE_ASSIGNRow(
                        string ASSIGN_ID, 
                        string USE_TYPE, 
                        string S_USE_YM, 
                        string E_USE_YM, 
                        string LEADER_CODE, 
                        string INIT_NO, 
                        string END_NO, 
                        decimal SHEET_COUNT, 
                        string CURRENT_NO, 
                        string CREATE_USER, 
                        System.DateTime CREATE_DTM, 
                        string MODI_USER, 
                        System.DateTime MODI_DTM, 
                        string STORE_NO, 
                        string INVOICE_TYPE_ID, 
                        string STATUS) {
                HQ_INVOICE_ASSIGNRow rowHQ_INVOICE_ASSIGNRow = ((HQ_INVOICE_ASSIGNRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ASSIGN_ID,
                        USE_TYPE,
                        S_USE_YM,
                        E_USE_YM,
                        LEADER_CODE,
                        INIT_NO,
                        END_NO,
                        SHEET_COUNT,
                        CURRENT_NO,
                        CREATE_USER,
                        CREATE_DTM,
                        MODI_USER,
                        MODI_DTM,
                        STORE_NO,
                        INVOICE_TYPE_ID,
                        STATUS};
                rowHQ_INVOICE_ASSIGNRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHQ_INVOICE_ASSIGNRow);
                return rowHQ_INVOICE_ASSIGNRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HQ_INVOICE_ASSIGNRow FindByASSIGN_ID(string ASSIGN_ID) {
                return ((HQ_INVOICE_ASSIGNRow)(this.Rows.Find(new object[] {
                            ASSIGN_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                HQ_INVOICE_ASSIGNDataTable cln = ((HQ_INVOICE_ASSIGNDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HQ_INVOICE_ASSIGNDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnASSIGN_ID = base.Columns["ASSIGN_ID"];
                this.columnUSE_TYPE = base.Columns["USE_TYPE"];
                this.columnS_USE_YM = base.Columns["S_USE_YM"];
                this.columnE_USE_YM = base.Columns["E_USE_YM"];
                this.columnLEADER_CODE = base.Columns["LEADER_CODE"];
                this.columnINIT_NO = base.Columns["INIT_NO"];
                this.columnEND_NO = base.Columns["END_NO"];
                this.columnSHEET_COUNT = base.Columns["SHEET_COUNT"];
                this.columnCURRENT_NO = base.Columns["CURRENT_NO"];
                this.columnCREATE_USER = base.Columns["CREATE_USER"];
                this.columnCREATE_DTM = base.Columns["CREATE_DTM"];
                this.columnMODI_USER = base.Columns["MODI_USER"];
                this.columnMODI_DTM = base.Columns["MODI_DTM"];
                this.columnSTORE_NO = base.Columns["STORE_NO"];
                this.columnINVOICE_TYPE_ID = base.Columns["INVOICE_TYPE_ID"];
                this.columnSTATUS = base.Columns["STATUS"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnASSIGN_ID = new global::System.Data.DataColumn("ASSIGN_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnASSIGN_ID);
                this.columnUSE_TYPE = new global::System.Data.DataColumn("USE_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSE_TYPE);
                this.columnS_USE_YM = new global::System.Data.DataColumn("S_USE_YM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS_USE_YM);
                this.columnE_USE_YM = new global::System.Data.DataColumn("E_USE_YM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE_USE_YM);
                this.columnLEADER_CODE = new global::System.Data.DataColumn("LEADER_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLEADER_CODE);
                this.columnINIT_NO = new global::System.Data.DataColumn("INIT_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINIT_NO);
                this.columnEND_NO = new global::System.Data.DataColumn("END_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEND_NO);
                this.columnSHEET_COUNT = new global::System.Data.DataColumn("SHEET_COUNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHEET_COUNT);
                this.columnCURRENT_NO = new global::System.Data.DataColumn("CURRENT_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCURRENT_NO);
                this.columnCREATE_USER = new global::System.Data.DataColumn("CREATE_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_USER);
                this.columnCREATE_DTM = new global::System.Data.DataColumn("CREATE_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_DTM);
                this.columnMODI_USER = new global::System.Data.DataColumn("MODI_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODI_USER);
                this.columnMODI_DTM = new global::System.Data.DataColumn("MODI_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODI_DTM);
                this.columnSTORE_NO = new global::System.Data.DataColumn("STORE_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTORE_NO);
                this.columnINVOICE_TYPE_ID = new global::System.Data.DataColumn("INVOICE_TYPE_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINVOICE_TYPE_ID);
                this.columnSTATUS = new global::System.Data.DataColumn("STATUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATUS);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnASSIGN_ID}, true));
                this.columnASSIGN_ID.AllowDBNull = false;
                this.columnASSIGN_ID.Unique = true;
                this.columnASSIGN_ID.MaxLength = 32;
                this.columnUSE_TYPE.MaxLength = 1;
                this.columnS_USE_YM.MaxLength = 7;
                this.columnE_USE_YM.MaxLength = 7;
                this.columnLEADER_CODE.MaxLength = 2;
                this.columnINIT_NO.MaxLength = 8;
                this.columnEND_NO.MaxLength = 8;
                this.columnCURRENT_NO.MaxLength = 8;
                this.columnCREATE_USER.MaxLength = 50;
                this.columnMODI_USER.MaxLength = 50;
                this.columnSTORE_NO.MaxLength = 32;
                this.columnINVOICE_TYPE_ID.MaxLength = 2;
                this.columnSTATUS.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HQ_INVOICE_ASSIGNRow NewHQ_INVOICE_ASSIGNRow() {
                return ((HQ_INVOICE_ASSIGNRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HQ_INVOICE_ASSIGNRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(HQ_INVOICE_ASSIGNRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HQ_INVOICE_ASSIGNRowChanged != null)) {
                    this.HQ_INVOICE_ASSIGNRowChanged(this, new HQ_INVOICE_ASSIGNRowChangeEvent(((HQ_INVOICE_ASSIGNRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HQ_INVOICE_ASSIGNRowChanging != null)) {
                    this.HQ_INVOICE_ASSIGNRowChanging(this, new HQ_INVOICE_ASSIGNRowChangeEvent(((HQ_INVOICE_ASSIGNRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HQ_INVOICE_ASSIGNRowDeleted != null)) {
                    this.HQ_INVOICE_ASSIGNRowDeleted(this, new HQ_INVOICE_ASSIGNRowChangeEvent(((HQ_INVOICE_ASSIGNRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HQ_INVOICE_ASSIGNRowDeleting != null)) {
                    this.HQ_INVOICE_ASSIGNRowDeleting(this, new HQ_INVOICE_ASSIGNRowChangeEvent(((HQ_INVOICE_ASSIGNRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveHQ_INVOICE_ASSIGNRow(HQ_INVOICE_ASSIGNRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                OPT05_HqInvoiceAssign_DTO ds = new OPT05_HqInvoiceAssign_DTO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HQ_INVOICE_ASSIGNDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class STORE_TERMINATING_MACHINEDataTable : global::System.Data.TypedTableBase<STORE_TERMINATING_MACHINERow> {
            
            private global::System.Data.DataColumn columnMACHINE_ID;
            
            private global::System.Data.DataColumn columnIP_ADDRESS;
            
            private global::System.Data.DataColumn columnHOST_NO;
            
            private global::System.Data.DataColumn columnHOST_NAME;
            
            private global::System.Data.DataColumn columnMAC_ADDRESS;
            
            private global::System.Data.DataColumn columnCREATE_USER;
            
            private global::System.Data.DataColumn columnCREATE_DTM;
            
            private global::System.Data.DataColumn columnMODI_USER;
            
            private global::System.Data.DataColumn columnMODI_DTM;
            
            private global::System.Data.DataColumn columnSTORE_NO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STORE_TERMINATING_MACHINEDataTable() {
                this.TableName = "STORE_TERMINATING_MACHINE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal STORE_TERMINATING_MACHINEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected STORE_TERMINATING_MACHINEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MACHINE_IDColumn {
                get {
                    return this.columnMACHINE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IP_ADDRESSColumn {
                get {
                    return this.columnIP_ADDRESS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HOST_NOColumn {
                get {
                    return this.columnHOST_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HOST_NAMEColumn {
                get {
                    return this.columnHOST_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAC_ADDRESSColumn {
                get {
                    return this.columnMAC_ADDRESS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_USERColumn {
                get {
                    return this.columnCREATE_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_DTMColumn {
                get {
                    return this.columnCREATE_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODI_USERColumn {
                get {
                    return this.columnMODI_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODI_DTMColumn {
                get {
                    return this.columnMODI_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STORE_NOColumn {
                get {
                    return this.columnSTORE_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STORE_TERMINATING_MACHINERow this[int index] {
                get {
                    return ((STORE_TERMINATING_MACHINERow)(this.Rows[index]));
                }
            }
            
            public event STORE_TERMINATING_MACHINERowChangeEventHandler STORE_TERMINATING_MACHINERowChanging;
            
            public event STORE_TERMINATING_MACHINERowChangeEventHandler STORE_TERMINATING_MACHINERowChanged;
            
            public event STORE_TERMINATING_MACHINERowChangeEventHandler STORE_TERMINATING_MACHINERowDeleting;
            
            public event STORE_TERMINATING_MACHINERowChangeEventHandler STORE_TERMINATING_MACHINERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSTORE_TERMINATING_MACHINERow(STORE_TERMINATING_MACHINERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STORE_TERMINATING_MACHINERow AddSTORE_TERMINATING_MACHINERow(string MACHINE_ID, string IP_ADDRESS, string HOST_NO, string HOST_NAME, string MAC_ADDRESS, string CREATE_USER, System.DateTime CREATE_DTM, string MODI_USER, System.DateTime MODI_DTM, string STORE_NO) {
                STORE_TERMINATING_MACHINERow rowSTORE_TERMINATING_MACHINERow = ((STORE_TERMINATING_MACHINERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MACHINE_ID,
                        IP_ADDRESS,
                        HOST_NO,
                        HOST_NAME,
                        MAC_ADDRESS,
                        CREATE_USER,
                        CREATE_DTM,
                        MODI_USER,
                        MODI_DTM,
                        STORE_NO};
                rowSTORE_TERMINATING_MACHINERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSTORE_TERMINATING_MACHINERow);
                return rowSTORE_TERMINATING_MACHINERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STORE_TERMINATING_MACHINERow FindByMACHINE_ID(string MACHINE_ID) {
                return ((STORE_TERMINATING_MACHINERow)(this.Rows.Find(new object[] {
                            MACHINE_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                STORE_TERMINATING_MACHINEDataTable cln = ((STORE_TERMINATING_MACHINEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new STORE_TERMINATING_MACHINEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMACHINE_ID = base.Columns["MACHINE_ID"];
                this.columnIP_ADDRESS = base.Columns["IP_ADDRESS"];
                this.columnHOST_NO = base.Columns["HOST_NO"];
                this.columnHOST_NAME = base.Columns["HOST_NAME"];
                this.columnMAC_ADDRESS = base.Columns["MAC_ADDRESS"];
                this.columnCREATE_USER = base.Columns["CREATE_USER"];
                this.columnCREATE_DTM = base.Columns["CREATE_DTM"];
                this.columnMODI_USER = base.Columns["MODI_USER"];
                this.columnMODI_DTM = base.Columns["MODI_DTM"];
                this.columnSTORE_NO = base.Columns["STORE_NO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMACHINE_ID = new global::System.Data.DataColumn("MACHINE_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMACHINE_ID);
                this.columnIP_ADDRESS = new global::System.Data.DataColumn("IP_ADDRESS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIP_ADDRESS);
                this.columnHOST_NO = new global::System.Data.DataColumn("HOST_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHOST_NO);
                this.columnHOST_NAME = new global::System.Data.DataColumn("HOST_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHOST_NAME);
                this.columnMAC_ADDRESS = new global::System.Data.DataColumn("MAC_ADDRESS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAC_ADDRESS);
                this.columnCREATE_USER = new global::System.Data.DataColumn("CREATE_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_USER);
                this.columnCREATE_DTM = new global::System.Data.DataColumn("CREATE_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_DTM);
                this.columnMODI_USER = new global::System.Data.DataColumn("MODI_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODI_USER);
                this.columnMODI_DTM = new global::System.Data.DataColumn("MODI_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODI_DTM);
                this.columnSTORE_NO = new global::System.Data.DataColumn("STORE_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTORE_NO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMACHINE_ID}, true));
                this.columnMACHINE_ID.AllowDBNull = false;
                this.columnMACHINE_ID.Unique = true;
                this.columnMACHINE_ID.MaxLength = 32;
                this.columnIP_ADDRESS.MaxLength = 50;
                this.columnHOST_NO.MaxLength = 20;
                this.columnHOST_NAME.MaxLength = 50;
                this.columnMAC_ADDRESS.MaxLength = 50;
                this.columnCREATE_USER.MaxLength = 50;
                this.columnMODI_USER.MaxLength = 50;
                this.columnSTORE_NO.MaxLength = 32;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STORE_TERMINATING_MACHINERow NewSTORE_TERMINATING_MACHINERow() {
                return ((STORE_TERMINATING_MACHINERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new STORE_TERMINATING_MACHINERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(STORE_TERMINATING_MACHINERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.STORE_TERMINATING_MACHINERowChanged != null)) {
                    this.STORE_TERMINATING_MACHINERowChanged(this, new STORE_TERMINATING_MACHINERowChangeEvent(((STORE_TERMINATING_MACHINERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.STORE_TERMINATING_MACHINERowChanging != null)) {
                    this.STORE_TERMINATING_MACHINERowChanging(this, new STORE_TERMINATING_MACHINERowChangeEvent(((STORE_TERMINATING_MACHINERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.STORE_TERMINATING_MACHINERowDeleted != null)) {
                    this.STORE_TERMINATING_MACHINERowDeleted(this, new STORE_TERMINATING_MACHINERowChangeEvent(((STORE_TERMINATING_MACHINERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.STORE_TERMINATING_MACHINERowDeleting != null)) {
                    this.STORE_TERMINATING_MACHINERowDeleting(this, new STORE_TERMINATING_MACHINERowChangeEvent(((STORE_TERMINATING_MACHINERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSTORE_TERMINATING_MACHINERow(STORE_TERMINATING_MACHINERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                OPT05_HqInvoiceAssign_DTO ds = new OPT05_HqInvoiceAssign_DTO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "STORE_TERMINATING_MACHINEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UPLOAD_TEMPDataTable : global::System.Data.TypedTableBase<UPLOAD_TEMPRow> {
            
            private global::System.Data.DataColumn columnBATCH_NO;
            
            private global::System.Data.DataColumn columnUSER_ID;
            
            private global::System.Data.DataColumn columnFINC_ID;
            
            private global::System.Data.DataColumn columnSTATUS;
            
            private global::System.Data.DataColumn columnF1;
            
            private global::System.Data.DataColumn columnF2;
            
            private global::System.Data.DataColumn columnF3;
            
            private global::System.Data.DataColumn columnF4;
            
            private global::System.Data.DataColumn columnF5;
            
            private global::System.Data.DataColumn columnF6;
            
            private global::System.Data.DataColumn columnF7;
            
            private global::System.Data.DataColumn columnF8;
            
            private global::System.Data.DataColumn columnF9;
            
            private global::System.Data.DataColumn columnF10;
            
            private global::System.Data.DataColumn columnF11;
            
            private global::System.Data.DataColumn columnF12;
            
            private global::System.Data.DataColumn columnF13;
            
            private global::System.Data.DataColumn columnF14;
            
            private global::System.Data.DataColumn columnF15;
            
            private global::System.Data.DataColumn columnF16;
            
            private global::System.Data.DataColumn columnF17;
            
            private global::System.Data.DataColumn columnF18;
            
            private global::System.Data.DataColumn columnF19;
            
            private global::System.Data.DataColumn columnF20;
            
            private global::System.Data.DataColumn columnF21;
            
            private global::System.Data.DataColumn columnF22;
            
            private global::System.Data.DataColumn columnF23;
            
            private global::System.Data.DataColumn columnF24;
            
            private global::System.Data.DataColumn columnF25;
            
            private global::System.Data.DataColumn columnF26;
            
            private global::System.Data.DataColumn columnF27;
            
            private global::System.Data.DataColumn columnF28;
            
            private global::System.Data.DataColumn columnF29;
            
            private global::System.Data.DataColumn columnF30;
            
            private global::System.Data.DataColumn columnSID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UPLOAD_TEMPDataTable() {
                this.TableName = "UPLOAD_TEMP";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UPLOAD_TEMPDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected UPLOAD_TEMPDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BATCH_NOColumn {
                get {
                    return this.columnBATCH_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USER_IDColumn {
                get {
                    return this.columnUSER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FINC_IDColumn {
                get {
                    return this.columnFINC_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STATUSColumn {
                get {
                    return this.columnSTATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F1Column {
                get {
                    return this.columnF1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F2Column {
                get {
                    return this.columnF2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F3Column {
                get {
                    return this.columnF3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F4Column {
                get {
                    return this.columnF4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F5Column {
                get {
                    return this.columnF5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F6Column {
                get {
                    return this.columnF6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F7Column {
                get {
                    return this.columnF7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F8Column {
                get {
                    return this.columnF8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F9Column {
                get {
                    return this.columnF9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F10Column {
                get {
                    return this.columnF10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F11Column {
                get {
                    return this.columnF11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F12Column {
                get {
                    return this.columnF12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F13Column {
                get {
                    return this.columnF13;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F14Column {
                get {
                    return this.columnF14;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F15Column {
                get {
                    return this.columnF15;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F16Column {
                get {
                    return this.columnF16;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F17Column {
                get {
                    return this.columnF17;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F18Column {
                get {
                    return this.columnF18;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F19Column {
                get {
                    return this.columnF19;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F20Column {
                get {
                    return this.columnF20;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F21Column {
                get {
                    return this.columnF21;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F22Column {
                get {
                    return this.columnF22;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F23Column {
                get {
                    return this.columnF23;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F24Column {
                get {
                    return this.columnF24;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F25Column {
                get {
                    return this.columnF25;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F26Column {
                get {
                    return this.columnF26;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F27Column {
                get {
                    return this.columnF27;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F28Column {
                get {
                    return this.columnF28;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F29Column {
                get {
                    return this.columnF29;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F30Column {
                get {
                    return this.columnF30;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SIDColumn {
                get {
                    return this.columnSID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UPLOAD_TEMPRow this[int index] {
                get {
                    return ((UPLOAD_TEMPRow)(this.Rows[index]));
                }
            }
            
            public event UPLOAD_TEMPRowChangeEventHandler UPLOAD_TEMPRowChanging;
            
            public event UPLOAD_TEMPRowChangeEventHandler UPLOAD_TEMPRowChanged;
            
            public event UPLOAD_TEMPRowChangeEventHandler UPLOAD_TEMPRowDeleting;
            
            public event UPLOAD_TEMPRowChangeEventHandler UPLOAD_TEMPRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddUPLOAD_TEMPRow(UPLOAD_TEMPRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UPLOAD_TEMPRow AddUPLOAD_TEMPRow(
                        string BATCH_NO, 
                        string USER_ID, 
                        string FINC_ID, 
                        string STATUS, 
                        string F1, 
                        string F2, 
                        string F3, 
                        string F4, 
                        string F5, 
                        string F6, 
                        string F7, 
                        string F8, 
                        string F9, 
                        string F10, 
                        string F11, 
                        string F12, 
                        string F13, 
                        string F14, 
                        string F15, 
                        string F16, 
                        string F17, 
                        string F18, 
                        string F19, 
                        string F20, 
                        string F21, 
                        string F22, 
                        string F23, 
                        string F24, 
                        string F25, 
                        string F26, 
                        string F27, 
                        string F28, 
                        string F29, 
                        string F30, 
                        string SID) {
                UPLOAD_TEMPRow rowUPLOAD_TEMPRow = ((UPLOAD_TEMPRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BATCH_NO,
                        USER_ID,
                        FINC_ID,
                        STATUS,
                        F1,
                        F2,
                        F3,
                        F4,
                        F5,
                        F6,
                        F7,
                        F8,
                        F9,
                        F10,
                        F11,
                        F12,
                        F13,
                        F14,
                        F15,
                        F16,
                        F17,
                        F18,
                        F19,
                        F20,
                        F21,
                        F22,
                        F23,
                        F24,
                        F25,
                        F26,
                        F27,
                        F28,
                        F29,
                        F30,
                        SID};
                rowUPLOAD_TEMPRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUPLOAD_TEMPRow);
                return rowUPLOAD_TEMPRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                UPLOAD_TEMPDataTable cln = ((UPLOAD_TEMPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new UPLOAD_TEMPDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBATCH_NO = base.Columns["BATCH_NO"];
                this.columnUSER_ID = base.Columns["USER_ID"];
                this.columnFINC_ID = base.Columns["FINC_ID"];
                this.columnSTATUS = base.Columns["STATUS"];
                this.columnF1 = base.Columns["F1"];
                this.columnF2 = base.Columns["F2"];
                this.columnF3 = base.Columns["F3"];
                this.columnF4 = base.Columns["F4"];
                this.columnF5 = base.Columns["F5"];
                this.columnF6 = base.Columns["F6"];
                this.columnF7 = base.Columns["F7"];
                this.columnF8 = base.Columns["F8"];
                this.columnF9 = base.Columns["F9"];
                this.columnF10 = base.Columns["F10"];
                this.columnF11 = base.Columns["F11"];
                this.columnF12 = base.Columns["F12"];
                this.columnF13 = base.Columns["F13"];
                this.columnF14 = base.Columns["F14"];
                this.columnF15 = base.Columns["F15"];
                this.columnF16 = base.Columns["F16"];
                this.columnF17 = base.Columns["F17"];
                this.columnF18 = base.Columns["F18"];
                this.columnF19 = base.Columns["F19"];
                this.columnF20 = base.Columns["F20"];
                this.columnF21 = base.Columns["F21"];
                this.columnF22 = base.Columns["F22"];
                this.columnF23 = base.Columns["F23"];
                this.columnF24 = base.Columns["F24"];
                this.columnF25 = base.Columns["F25"];
                this.columnF26 = base.Columns["F26"];
                this.columnF27 = base.Columns["F27"];
                this.columnF28 = base.Columns["F28"];
                this.columnF29 = base.Columns["F29"];
                this.columnF30 = base.Columns["F30"];
                this.columnSID = base.Columns["SID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBATCH_NO = new global::System.Data.DataColumn("BATCH_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBATCH_NO);
                this.columnUSER_ID = new global::System.Data.DataColumn("USER_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_ID);
                this.columnFINC_ID = new global::System.Data.DataColumn("FINC_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFINC_ID);
                this.columnSTATUS = new global::System.Data.DataColumn("STATUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATUS);
                this.columnF1 = new global::System.Data.DataColumn("F1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF1);
                this.columnF2 = new global::System.Data.DataColumn("F2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF2);
                this.columnF3 = new global::System.Data.DataColumn("F3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF3);
                this.columnF4 = new global::System.Data.DataColumn("F4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF4);
                this.columnF5 = new global::System.Data.DataColumn("F5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF5);
                this.columnF6 = new global::System.Data.DataColumn("F6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF6);
                this.columnF7 = new global::System.Data.DataColumn("F7", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF7);
                this.columnF8 = new global::System.Data.DataColumn("F8", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF8);
                this.columnF9 = new global::System.Data.DataColumn("F9", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF9);
                this.columnF10 = new global::System.Data.DataColumn("F10", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF10);
                this.columnF11 = new global::System.Data.DataColumn("F11", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF11);
                this.columnF12 = new global::System.Data.DataColumn("F12", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF12);
                this.columnF13 = new global::System.Data.DataColumn("F13", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF13);
                this.columnF14 = new global::System.Data.DataColumn("F14", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF14);
                this.columnF15 = new global::System.Data.DataColumn("F15", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF15);
                this.columnF16 = new global::System.Data.DataColumn("F16", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF16);
                this.columnF17 = new global::System.Data.DataColumn("F17", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF17);
                this.columnF18 = new global::System.Data.DataColumn("F18", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF18);
                this.columnF19 = new global::System.Data.DataColumn("F19", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF19);
                this.columnF20 = new global::System.Data.DataColumn("F20", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF20);
                this.columnF21 = new global::System.Data.DataColumn("F21", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF21);
                this.columnF22 = new global::System.Data.DataColumn("F22", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF22);
                this.columnF23 = new global::System.Data.DataColumn("F23", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF23);
                this.columnF24 = new global::System.Data.DataColumn("F24", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF24);
                this.columnF25 = new global::System.Data.DataColumn("F25", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF25);
                this.columnF26 = new global::System.Data.DataColumn("F26", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF26);
                this.columnF27 = new global::System.Data.DataColumn("F27", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF27);
                this.columnF28 = new global::System.Data.DataColumn("F28", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF28);
                this.columnF29 = new global::System.Data.DataColumn("F29", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF29);
                this.columnF30 = new global::System.Data.DataColumn("F30", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF30);
                this.columnSID = new global::System.Data.DataColumn("SID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSID);
                this.columnBATCH_NO.MaxLength = 32;
                this.columnUSER_ID.MaxLength = 20;
                this.columnFINC_ID.MaxLength = 20;
                this.columnSTATUS.MaxLength = 1;
                this.columnF1.MaxLength = 200;
                this.columnF2.MaxLength = 200;
                this.columnF3.MaxLength = 200;
                this.columnF4.MaxLength = 200;
                this.columnF5.MaxLength = 200;
                this.columnF6.MaxLength = 200;
                this.columnF7.MaxLength = 200;
                this.columnF8.MaxLength = 200;
                this.columnF9.MaxLength = 200;
                this.columnF10.MaxLength = 200;
                this.columnF11.MaxLength = 200;
                this.columnF12.MaxLength = 200;
                this.columnF13.MaxLength = 200;
                this.columnF14.MaxLength = 200;
                this.columnF15.MaxLength = 200;
                this.columnF16.MaxLength = 200;
                this.columnF17.MaxLength = 200;
                this.columnF18.MaxLength = 200;
                this.columnF19.MaxLength = 200;
                this.columnF20.MaxLength = 200;
                this.columnF21.MaxLength = 200;
                this.columnF22.MaxLength = 200;
                this.columnF23.MaxLength = 200;
                this.columnF24.MaxLength = 200;
                this.columnF25.MaxLength = 200;
                this.columnF26.MaxLength = 200;
                this.columnF27.MaxLength = 200;
                this.columnF28.MaxLength = 200;
                this.columnF29.MaxLength = 200;
                this.columnF30.MaxLength = 200;
                this.columnSID.MaxLength = 32;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UPLOAD_TEMPRow NewUPLOAD_TEMPRow() {
                return ((UPLOAD_TEMPRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new UPLOAD_TEMPRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(UPLOAD_TEMPRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.UPLOAD_TEMPRowChanged != null)) {
                    this.UPLOAD_TEMPRowChanged(this, new UPLOAD_TEMPRowChangeEvent(((UPLOAD_TEMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.UPLOAD_TEMPRowChanging != null)) {
                    this.UPLOAD_TEMPRowChanging(this, new UPLOAD_TEMPRowChangeEvent(((UPLOAD_TEMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.UPLOAD_TEMPRowDeleted != null)) {
                    this.UPLOAD_TEMPRowDeleted(this, new UPLOAD_TEMPRowChangeEvent(((UPLOAD_TEMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.UPLOAD_TEMPRowDeleting != null)) {
                    this.UPLOAD_TEMPRowDeleting(this, new UPLOAD_TEMPRowChangeEvent(((UPLOAD_TEMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveUPLOAD_TEMPRow(UPLOAD_TEMPRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                OPT05_HqInvoiceAssign_DTO ds = new OPT05_HqInvoiceAssign_DTO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UPLOAD_TEMPDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class HQ_INVOICE_ASSIGN_TEMPRow : global::System.Data.DataRow {
            
            private HQ_INVOICE_ASSIGN_TEMPDataTable tableHQ_INVOICE_ASSIGN_TEMP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HQ_INVOICE_ASSIGN_TEMPRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHQ_INVOICE_ASSIGN_TEMP = ((HQ_INVOICE_ASSIGN_TEMPDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ASSIGN_ID {
                get {
                    return ((string)(this[this.tableHQ_INVOICE_ASSIGN_TEMP.ASSIGN_IDColumn]));
                }
                set {
                    this[this.tableHQ_INVOICE_ASSIGN_TEMP.ASSIGN_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BATCH_NO {
                get {
                    return ((string)(this[this.tableHQ_INVOICE_ASSIGN_TEMP.BATCH_NOColumn]));
                }
                set {
                    this[this.tableHQ_INVOICE_ASSIGN_TEMP.BATCH_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USE_TYPE {
                get {
                    return ((string)(this[this.tableHQ_INVOICE_ASSIGN_TEMP.USE_TYPEColumn]));
                }
                set {
                    this[this.tableHQ_INVOICE_ASSIGN_TEMP.USE_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string S_USE_YM {
                get {
                    return ((string)(this[this.tableHQ_INVOICE_ASSIGN_TEMP.S_USE_YMColumn]));
                }
                set {
                    this[this.tableHQ_INVOICE_ASSIGN_TEMP.S_USE_YMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string E_USE_YM {
                get {
                    return ((string)(this[this.tableHQ_INVOICE_ASSIGN_TEMP.E_USE_YMColumn]));
                }
                set {
                    this[this.tableHQ_INVOICE_ASSIGN_TEMP.E_USE_YMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LEADER_CODE {
                get {
                    return ((string)(this[this.tableHQ_INVOICE_ASSIGN_TEMP.LEADER_CODEColumn]));
                }
                set {
                    this[this.tableHQ_INVOICE_ASSIGN_TEMP.LEADER_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INIT_NO {
                get {
                    return ((string)(this[this.tableHQ_INVOICE_ASSIGN_TEMP.INIT_NOColumn]));
                }
                set {
                    this[this.tableHQ_INVOICE_ASSIGN_TEMP.INIT_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string END_NO {
                get {
                    return ((string)(this[this.tableHQ_INVOICE_ASSIGN_TEMP.END_NOColumn]));
                }
                set {
                    this[this.tableHQ_INVOICE_ASSIGN_TEMP.END_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SHEET_COUNT {
                get {
                    return ((decimal)(this[this.tableHQ_INVOICE_ASSIGN_TEMP.SHEET_COUNTColumn]));
                }
                set {
                    this[this.tableHQ_INVOICE_ASSIGN_TEMP.SHEET_COUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STORE_NO {
                get {
                    try {
                        return ((string)(this[this.tableHQ_INVOICE_ASSIGN_TEMP.STORE_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'HQ_INVOICE_ASSIGN_TEMP\' 中資料行 \'STORE_NO\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHQ_INVOICE_ASSIGN_TEMP.STORE_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INVOICE_TYPE_ID {
                get {
                    try {
                        return ((string)(this[this.tableHQ_INVOICE_ASSIGN_TEMP.INVOICE_TYPE_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'HQ_INVOICE_ASSIGN_TEMP\' 中資料行 \'INVOICE_TYPE_ID\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHQ_INVOICE_ASSIGN_TEMP.INVOICE_TYPE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EXCEPTION_CAUSE {
                get {
                    try {
                        return ((string)(this[this.tableHQ_INVOICE_ASSIGN_TEMP.EXCEPTION_CAUSEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'HQ_INVOICE_ASSIGN_TEMP\' 中資料行 \'EXCEPTION_CAUSE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHQ_INVOICE_ASSIGN_TEMP.EXCEPTION_CAUSEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STATUS {
                get {
                    try {
                        return ((string)(this[this.tableHQ_INVOICE_ASSIGN_TEMP.STATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'HQ_INVOICE_ASSIGN_TEMP\' 中資料行 \'STATUS\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHQ_INVOICE_ASSIGN_TEMP.STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTORE_NONull() {
                return this.IsNull(this.tableHQ_INVOICE_ASSIGN_TEMP.STORE_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTORE_NONull() {
                this[this.tableHQ_INVOICE_ASSIGN_TEMP.STORE_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINVOICE_TYPE_IDNull() {
                return this.IsNull(this.tableHQ_INVOICE_ASSIGN_TEMP.INVOICE_TYPE_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINVOICE_TYPE_IDNull() {
                this[this.tableHQ_INVOICE_ASSIGN_TEMP.INVOICE_TYPE_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEXCEPTION_CAUSENull() {
                return this.IsNull(this.tableHQ_INVOICE_ASSIGN_TEMP.EXCEPTION_CAUSEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEXCEPTION_CAUSENull() {
                this[this.tableHQ_INVOICE_ASSIGN_TEMP.EXCEPTION_CAUSEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTATUSNull() {
                return this.IsNull(this.tableHQ_INVOICE_ASSIGN_TEMP.STATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTATUSNull() {
                this[this.tableHQ_INVOICE_ASSIGN_TEMP.STATUSColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class STORE_INVOICE_ASSIGNRow : global::System.Data.DataRow {
            
            private STORE_INVOICE_ASSIGNDataTable tableSTORE_INVOICE_ASSIGN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal STORE_INVOICE_ASSIGNRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSTORE_INVOICE_ASSIGN = ((STORE_INVOICE_ASSIGNDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MACHINE_ID {
                get {
                    return ((string)(this[this.tableSTORE_INVOICE_ASSIGN.MACHINE_IDColumn]));
                }
                set {
                    this[this.tableSTORE_INVOICE_ASSIGN.MACHINE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ASSIGN_ID {
                get {
                    return ((string)(this[this.tableSTORE_INVOICE_ASSIGN.ASSIGN_IDColumn]));
                }
                set {
                    this[this.tableSTORE_INVOICE_ASSIGN.ASSIGN_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string START_NO {
                get {
                    try {
                        return ((string)(this[this.tableSTORE_INVOICE_ASSIGN.START_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'STORE_INVOICE_ASSIGN\' 中資料行 \'START_NO\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSTORE_INVOICE_ASSIGN.START_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string END_NO {
                get {
                    try {
                        return ((string)(this[this.tableSTORE_INVOICE_ASSIGN.END_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'STORE_INVOICE_ASSIGN\' 中資料行 \'END_NO\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSTORE_INVOICE_ASSIGN.END_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CURRENT_NO {
                get {
                    try {
                        return ((string)(this[this.tableSTORE_INVOICE_ASSIGN.CURRENT_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'STORE_INVOICE_ASSIGN\' 中資料行 \'CURRENT_NO\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSTORE_INVOICE_ASSIGN.CURRENT_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SHEET_COUNT {
                get {
                    try {
                        return ((decimal)(this[this.tableSTORE_INVOICE_ASSIGN.SHEET_COUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'STORE_INVOICE_ASSIGN\' 中資料行 \'SHEET_COUNT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSTORE_INVOICE_ASSIGN.SHEET_COUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CREATE_USER {
                get {
                    return ((string)(this[this.tableSTORE_INVOICE_ASSIGN.CREATE_USERColumn]));
                }
                set {
                    this[this.tableSTORE_INVOICE_ASSIGN.CREATE_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CREATE_DTM {
                get {
                    return ((global::System.DateTime)(this[this.tableSTORE_INVOICE_ASSIGN.CREATE_DTMColumn]));
                }
                set {
                    this[this.tableSTORE_INVOICE_ASSIGN.CREATE_DTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODI_USER {
                get {
                    return ((string)(this[this.tableSTORE_INVOICE_ASSIGN.MODI_USERColumn]));
                }
                set {
                    this[this.tableSTORE_INVOICE_ASSIGN.MODI_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODI_DTM {
                get {
                    return ((global::System.DateTime)(this[this.tableSTORE_INVOICE_ASSIGN.MODI_DTMColumn]));
                }
                set {
                    this[this.tableSTORE_INVOICE_ASSIGN.MODI_DTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STORE_NO {
                get {
                    try {
                        return ((string)(this[this.tableSTORE_INVOICE_ASSIGN.STORE_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'STORE_INVOICE_ASSIGN\' 中資料行 \'STORE_NO\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSTORE_INVOICE_ASSIGN.STORE_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTART_NONull() {
                return this.IsNull(this.tableSTORE_INVOICE_ASSIGN.START_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTART_NONull() {
                this[this.tableSTORE_INVOICE_ASSIGN.START_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEND_NONull() {
                return this.IsNull(this.tableSTORE_INVOICE_ASSIGN.END_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEND_NONull() {
                this[this.tableSTORE_INVOICE_ASSIGN.END_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCURRENT_NONull() {
                return this.IsNull(this.tableSTORE_INVOICE_ASSIGN.CURRENT_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCURRENT_NONull() {
                this[this.tableSTORE_INVOICE_ASSIGN.CURRENT_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSHEET_COUNTNull() {
                return this.IsNull(this.tableSTORE_INVOICE_ASSIGN.SHEET_COUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSHEET_COUNTNull() {
                this[this.tableSTORE_INVOICE_ASSIGN.SHEET_COUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTORE_NONull() {
                return this.IsNull(this.tableSTORE_INVOICE_ASSIGN.STORE_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTORE_NONull() {
                this[this.tableSTORE_INVOICE_ASSIGN.STORE_NOColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class HQ_INVOICE_ASSIGNRow : global::System.Data.DataRow {
            
            private HQ_INVOICE_ASSIGNDataTable tableHQ_INVOICE_ASSIGN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HQ_INVOICE_ASSIGNRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHQ_INVOICE_ASSIGN = ((HQ_INVOICE_ASSIGNDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ASSIGN_ID {
                get {
                    return ((string)(this[this.tableHQ_INVOICE_ASSIGN.ASSIGN_IDColumn]));
                }
                set {
                    this[this.tableHQ_INVOICE_ASSIGN.ASSIGN_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USE_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableHQ_INVOICE_ASSIGN.USE_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'HQ_INVOICE_ASSIGN\' 中資料行 \'USE_TYPE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHQ_INVOICE_ASSIGN.USE_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string S_USE_YM {
                get {
                    try {
                        return ((string)(this[this.tableHQ_INVOICE_ASSIGN.S_USE_YMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'HQ_INVOICE_ASSIGN\' 中資料行 \'S_USE_YM\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHQ_INVOICE_ASSIGN.S_USE_YMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string E_USE_YM {
                get {
                    try {
                        return ((string)(this[this.tableHQ_INVOICE_ASSIGN.E_USE_YMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'HQ_INVOICE_ASSIGN\' 中資料行 \'E_USE_YM\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHQ_INVOICE_ASSIGN.E_USE_YMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LEADER_CODE {
                get {
                    try {
                        return ((string)(this[this.tableHQ_INVOICE_ASSIGN.LEADER_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'HQ_INVOICE_ASSIGN\' 中資料行 \'LEADER_CODE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHQ_INVOICE_ASSIGN.LEADER_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INIT_NO {
                get {
                    try {
                        return ((string)(this[this.tableHQ_INVOICE_ASSIGN.INIT_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'HQ_INVOICE_ASSIGN\' 中資料行 \'INIT_NO\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHQ_INVOICE_ASSIGN.INIT_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string END_NO {
                get {
                    try {
                        return ((string)(this[this.tableHQ_INVOICE_ASSIGN.END_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'HQ_INVOICE_ASSIGN\' 中資料行 \'END_NO\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHQ_INVOICE_ASSIGN.END_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SHEET_COUNT {
                get {
                    try {
                        return ((decimal)(this[this.tableHQ_INVOICE_ASSIGN.SHEET_COUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'HQ_INVOICE_ASSIGN\' 中資料行 \'SHEET_COUNT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHQ_INVOICE_ASSIGN.SHEET_COUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CURRENT_NO {
                get {
                    try {
                        return ((string)(this[this.tableHQ_INVOICE_ASSIGN.CURRENT_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'HQ_INVOICE_ASSIGN\' 中資料行 \'CURRENT_NO\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHQ_INVOICE_ASSIGN.CURRENT_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CREATE_USER {
                get {
                    try {
                        return ((string)(this[this.tableHQ_INVOICE_ASSIGN.CREATE_USERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'HQ_INVOICE_ASSIGN\' 中資料行 \'CREATE_USER\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHQ_INVOICE_ASSIGN.CREATE_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CREATE_DTM {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHQ_INVOICE_ASSIGN.CREATE_DTMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'HQ_INVOICE_ASSIGN\' 中資料行 \'CREATE_DTM\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHQ_INVOICE_ASSIGN.CREATE_DTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODI_USER {
                get {
                    try {
                        return ((string)(this[this.tableHQ_INVOICE_ASSIGN.MODI_USERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'HQ_INVOICE_ASSIGN\' 中資料行 \'MODI_USER\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHQ_INVOICE_ASSIGN.MODI_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODI_DTM {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHQ_INVOICE_ASSIGN.MODI_DTMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'HQ_INVOICE_ASSIGN\' 中資料行 \'MODI_DTM\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHQ_INVOICE_ASSIGN.MODI_DTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STORE_NO {
                get {
                    try {
                        return ((string)(this[this.tableHQ_INVOICE_ASSIGN.STORE_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'HQ_INVOICE_ASSIGN\' 中資料行 \'STORE_NO\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHQ_INVOICE_ASSIGN.STORE_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INVOICE_TYPE_ID {
                get {
                    try {
                        return ((string)(this[this.tableHQ_INVOICE_ASSIGN.INVOICE_TYPE_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'HQ_INVOICE_ASSIGN\' 中資料行 \'INVOICE_TYPE_ID\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHQ_INVOICE_ASSIGN.INVOICE_TYPE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STATUS {
                get {
                    try {
                        return ((string)(this[this.tableHQ_INVOICE_ASSIGN.STATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'HQ_INVOICE_ASSIGN\' 中資料行 \'STATUS\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHQ_INVOICE_ASSIGN.STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSE_TYPENull() {
                return this.IsNull(this.tableHQ_INVOICE_ASSIGN.USE_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSE_TYPENull() {
                this[this.tableHQ_INVOICE_ASSIGN.USE_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsS_USE_YMNull() {
                return this.IsNull(this.tableHQ_INVOICE_ASSIGN.S_USE_YMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetS_USE_YMNull() {
                this[this.tableHQ_INVOICE_ASSIGN.S_USE_YMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsE_USE_YMNull() {
                return this.IsNull(this.tableHQ_INVOICE_ASSIGN.E_USE_YMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetE_USE_YMNull() {
                this[this.tableHQ_INVOICE_ASSIGN.E_USE_YMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLEADER_CODENull() {
                return this.IsNull(this.tableHQ_INVOICE_ASSIGN.LEADER_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLEADER_CODENull() {
                this[this.tableHQ_INVOICE_ASSIGN.LEADER_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINIT_NONull() {
                return this.IsNull(this.tableHQ_INVOICE_ASSIGN.INIT_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINIT_NONull() {
                this[this.tableHQ_INVOICE_ASSIGN.INIT_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEND_NONull() {
                return this.IsNull(this.tableHQ_INVOICE_ASSIGN.END_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEND_NONull() {
                this[this.tableHQ_INVOICE_ASSIGN.END_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSHEET_COUNTNull() {
                return this.IsNull(this.tableHQ_INVOICE_ASSIGN.SHEET_COUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSHEET_COUNTNull() {
                this[this.tableHQ_INVOICE_ASSIGN.SHEET_COUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCURRENT_NONull() {
                return this.IsNull(this.tableHQ_INVOICE_ASSIGN.CURRENT_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCURRENT_NONull() {
                this[this.tableHQ_INVOICE_ASSIGN.CURRENT_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCREATE_USERNull() {
                return this.IsNull(this.tableHQ_INVOICE_ASSIGN.CREATE_USERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCREATE_USERNull() {
                this[this.tableHQ_INVOICE_ASSIGN.CREATE_USERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCREATE_DTMNull() {
                return this.IsNull(this.tableHQ_INVOICE_ASSIGN.CREATE_DTMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCREATE_DTMNull() {
                this[this.tableHQ_INVOICE_ASSIGN.CREATE_DTMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODI_USERNull() {
                return this.IsNull(this.tableHQ_INVOICE_ASSIGN.MODI_USERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODI_USERNull() {
                this[this.tableHQ_INVOICE_ASSIGN.MODI_USERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODI_DTMNull() {
                return this.IsNull(this.tableHQ_INVOICE_ASSIGN.MODI_DTMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODI_DTMNull() {
                this[this.tableHQ_INVOICE_ASSIGN.MODI_DTMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTORE_NONull() {
                return this.IsNull(this.tableHQ_INVOICE_ASSIGN.STORE_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTORE_NONull() {
                this[this.tableHQ_INVOICE_ASSIGN.STORE_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINVOICE_TYPE_IDNull() {
                return this.IsNull(this.tableHQ_INVOICE_ASSIGN.INVOICE_TYPE_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINVOICE_TYPE_IDNull() {
                this[this.tableHQ_INVOICE_ASSIGN.INVOICE_TYPE_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTATUSNull() {
                return this.IsNull(this.tableHQ_INVOICE_ASSIGN.STATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTATUSNull() {
                this[this.tableHQ_INVOICE_ASSIGN.STATUSColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class STORE_TERMINATING_MACHINERow : global::System.Data.DataRow {
            
            private STORE_TERMINATING_MACHINEDataTable tableSTORE_TERMINATING_MACHINE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal STORE_TERMINATING_MACHINERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSTORE_TERMINATING_MACHINE = ((STORE_TERMINATING_MACHINEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MACHINE_ID {
                get {
                    return ((string)(this[this.tableSTORE_TERMINATING_MACHINE.MACHINE_IDColumn]));
                }
                set {
                    this[this.tableSTORE_TERMINATING_MACHINE.MACHINE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IP_ADDRESS {
                get {
                    try {
                        return ((string)(this[this.tableSTORE_TERMINATING_MACHINE.IP_ADDRESSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'STORE_TERMINATING_MACHINE\' 中資料行 \'IP_ADDRESS\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSTORE_TERMINATING_MACHINE.IP_ADDRESSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HOST_NO {
                get {
                    try {
                        return ((string)(this[this.tableSTORE_TERMINATING_MACHINE.HOST_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'STORE_TERMINATING_MACHINE\' 中資料行 \'HOST_NO\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSTORE_TERMINATING_MACHINE.HOST_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HOST_NAME {
                get {
                    try {
                        return ((string)(this[this.tableSTORE_TERMINATING_MACHINE.HOST_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'STORE_TERMINATING_MACHINE\' 中資料行 \'HOST_NAME\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSTORE_TERMINATING_MACHINE.HOST_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAC_ADDRESS {
                get {
                    try {
                        return ((string)(this[this.tableSTORE_TERMINATING_MACHINE.MAC_ADDRESSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'STORE_TERMINATING_MACHINE\' 中資料行 \'MAC_ADDRESS\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSTORE_TERMINATING_MACHINE.MAC_ADDRESSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CREATE_USER {
                get {
                    try {
                        return ((string)(this[this.tableSTORE_TERMINATING_MACHINE.CREATE_USERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'STORE_TERMINATING_MACHINE\' 中資料行 \'CREATE_USER\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSTORE_TERMINATING_MACHINE.CREATE_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CREATE_DTM {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSTORE_TERMINATING_MACHINE.CREATE_DTMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'STORE_TERMINATING_MACHINE\' 中資料行 \'CREATE_DTM\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSTORE_TERMINATING_MACHINE.CREATE_DTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODI_USER {
                get {
                    try {
                        return ((string)(this[this.tableSTORE_TERMINATING_MACHINE.MODI_USERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'STORE_TERMINATING_MACHINE\' 中資料行 \'MODI_USER\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSTORE_TERMINATING_MACHINE.MODI_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODI_DTM {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSTORE_TERMINATING_MACHINE.MODI_DTMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'STORE_TERMINATING_MACHINE\' 中資料行 \'MODI_DTM\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSTORE_TERMINATING_MACHINE.MODI_DTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STORE_NO {
                get {
                    try {
                        return ((string)(this[this.tableSTORE_TERMINATING_MACHINE.STORE_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'STORE_TERMINATING_MACHINE\' 中資料行 \'STORE_NO\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSTORE_TERMINATING_MACHINE.STORE_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIP_ADDRESSNull() {
                return this.IsNull(this.tableSTORE_TERMINATING_MACHINE.IP_ADDRESSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIP_ADDRESSNull() {
                this[this.tableSTORE_TERMINATING_MACHINE.IP_ADDRESSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHOST_NONull() {
                return this.IsNull(this.tableSTORE_TERMINATING_MACHINE.HOST_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHOST_NONull() {
                this[this.tableSTORE_TERMINATING_MACHINE.HOST_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHOST_NAMENull() {
                return this.IsNull(this.tableSTORE_TERMINATING_MACHINE.HOST_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHOST_NAMENull() {
                this[this.tableSTORE_TERMINATING_MACHINE.HOST_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAC_ADDRESSNull() {
                return this.IsNull(this.tableSTORE_TERMINATING_MACHINE.MAC_ADDRESSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAC_ADDRESSNull() {
                this[this.tableSTORE_TERMINATING_MACHINE.MAC_ADDRESSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCREATE_USERNull() {
                return this.IsNull(this.tableSTORE_TERMINATING_MACHINE.CREATE_USERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCREATE_USERNull() {
                this[this.tableSTORE_TERMINATING_MACHINE.CREATE_USERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCREATE_DTMNull() {
                return this.IsNull(this.tableSTORE_TERMINATING_MACHINE.CREATE_DTMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCREATE_DTMNull() {
                this[this.tableSTORE_TERMINATING_MACHINE.CREATE_DTMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODI_USERNull() {
                return this.IsNull(this.tableSTORE_TERMINATING_MACHINE.MODI_USERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODI_USERNull() {
                this[this.tableSTORE_TERMINATING_MACHINE.MODI_USERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODI_DTMNull() {
                return this.IsNull(this.tableSTORE_TERMINATING_MACHINE.MODI_DTMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODI_DTMNull() {
                this[this.tableSTORE_TERMINATING_MACHINE.MODI_DTMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTORE_NONull() {
                return this.IsNull(this.tableSTORE_TERMINATING_MACHINE.STORE_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTORE_NONull() {
                this[this.tableSTORE_TERMINATING_MACHINE.STORE_NOColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class UPLOAD_TEMPRow : global::System.Data.DataRow {
            
            private UPLOAD_TEMPDataTable tableUPLOAD_TEMP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UPLOAD_TEMPRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUPLOAD_TEMP = ((UPLOAD_TEMPDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BATCH_NO {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.BATCH_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'BATCH_NO\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.BATCH_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USER_ID {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.USER_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'USER_ID\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.USER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FINC_ID {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.FINC_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'FINC_ID\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.FINC_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STATUS {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.STATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'STATUS\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F1 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F1\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F2 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F2\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F3 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F3\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F4 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F4\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F5 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F5\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F6 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F6\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F7 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F7\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F8 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F8\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F9 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F9\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F10 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F10\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F11 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F11\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F12 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F12\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F13 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F13Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F13\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F13Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F14 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F14Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F14\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F14Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F15 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F15Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F15\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F15Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F16 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F16Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F16\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F16Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F17 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F17Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F17\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F17Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F18 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F18Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F18\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F18Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F19 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F19Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F19\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F19Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F20 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F20Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F20\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F20Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F21 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F21Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F21\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F21Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F22 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F22Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F22\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F22Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F23 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F23Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F23\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F23Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F24 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F24Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F24\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F24Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F25 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F25Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F25\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F25Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F26 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F26Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F26\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F26Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F27 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F27Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F27\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F27Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F28 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F28Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F28\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F28Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F29 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F29Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F29\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F29Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F30 {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.F30Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'F30\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.F30Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SID {
                get {
                    try {
                        return ((string)(this[this.tableUPLOAD_TEMP.SIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UPLOAD_TEMP\' 中資料行 \'SID\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUPLOAD_TEMP.SIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBATCH_NONull() {
                return this.IsNull(this.tableUPLOAD_TEMP.BATCH_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBATCH_NONull() {
                this[this.tableUPLOAD_TEMP.BATCH_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSER_IDNull() {
                return this.IsNull(this.tableUPLOAD_TEMP.USER_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSER_IDNull() {
                this[this.tableUPLOAD_TEMP.USER_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFINC_IDNull() {
                return this.IsNull(this.tableUPLOAD_TEMP.FINC_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFINC_IDNull() {
                this[this.tableUPLOAD_TEMP.FINC_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTATUSNull() {
                return this.IsNull(this.tableUPLOAD_TEMP.STATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTATUSNull() {
                this[this.tableUPLOAD_TEMP.STATUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF1Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF1Null() {
                this[this.tableUPLOAD_TEMP.F1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF2Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF2Null() {
                this[this.tableUPLOAD_TEMP.F2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF3Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF3Null() {
                this[this.tableUPLOAD_TEMP.F3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF4Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF4Null() {
                this[this.tableUPLOAD_TEMP.F4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF5Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF5Null() {
                this[this.tableUPLOAD_TEMP.F5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF6Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF6Null() {
                this[this.tableUPLOAD_TEMP.F6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF7Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF7Null() {
                this[this.tableUPLOAD_TEMP.F7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF8Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF8Null() {
                this[this.tableUPLOAD_TEMP.F8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF9Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF9Null() {
                this[this.tableUPLOAD_TEMP.F9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF10Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF10Null() {
                this[this.tableUPLOAD_TEMP.F10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF11Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF11Null() {
                this[this.tableUPLOAD_TEMP.F11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF12Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF12Null() {
                this[this.tableUPLOAD_TEMP.F12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF13Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F13Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF13Null() {
                this[this.tableUPLOAD_TEMP.F13Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF14Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F14Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF14Null() {
                this[this.tableUPLOAD_TEMP.F14Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF15Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F15Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF15Null() {
                this[this.tableUPLOAD_TEMP.F15Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF16Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F16Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF16Null() {
                this[this.tableUPLOAD_TEMP.F16Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF17Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F17Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF17Null() {
                this[this.tableUPLOAD_TEMP.F17Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF18Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F18Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF18Null() {
                this[this.tableUPLOAD_TEMP.F18Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF19Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F19Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF19Null() {
                this[this.tableUPLOAD_TEMP.F19Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF20Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F20Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF20Null() {
                this[this.tableUPLOAD_TEMP.F20Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF21Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F21Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF21Null() {
                this[this.tableUPLOAD_TEMP.F21Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF22Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F22Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF22Null() {
                this[this.tableUPLOAD_TEMP.F22Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF23Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F23Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF23Null() {
                this[this.tableUPLOAD_TEMP.F23Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF24Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F24Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF24Null() {
                this[this.tableUPLOAD_TEMP.F24Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF25Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F25Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF25Null() {
                this[this.tableUPLOAD_TEMP.F25Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF26Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F26Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF26Null() {
                this[this.tableUPLOAD_TEMP.F26Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF27Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F27Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF27Null() {
                this[this.tableUPLOAD_TEMP.F27Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF28Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F28Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF28Null() {
                this[this.tableUPLOAD_TEMP.F28Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF29Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F29Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF29Null() {
                this[this.tableUPLOAD_TEMP.F29Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF30Null() {
                return this.IsNull(this.tableUPLOAD_TEMP.F30Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF30Null() {
                this[this.tableUPLOAD_TEMP.F30Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSIDNull() {
                return this.IsNull(this.tableUPLOAD_TEMP.SIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSIDNull() {
                this[this.tableUPLOAD_TEMP.SIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class HQ_INVOICE_ASSIGN_TEMPRowChangeEvent : global::System.EventArgs {
            
            private HQ_INVOICE_ASSIGN_TEMPRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HQ_INVOICE_ASSIGN_TEMPRowChangeEvent(HQ_INVOICE_ASSIGN_TEMPRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HQ_INVOICE_ASSIGN_TEMPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class STORE_INVOICE_ASSIGNRowChangeEvent : global::System.EventArgs {
            
            private STORE_INVOICE_ASSIGNRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STORE_INVOICE_ASSIGNRowChangeEvent(STORE_INVOICE_ASSIGNRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STORE_INVOICE_ASSIGNRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class HQ_INVOICE_ASSIGNRowChangeEvent : global::System.EventArgs {
            
            private HQ_INVOICE_ASSIGNRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HQ_INVOICE_ASSIGNRowChangeEvent(HQ_INVOICE_ASSIGNRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HQ_INVOICE_ASSIGNRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class STORE_TERMINATING_MACHINERowChangeEvent : global::System.EventArgs {
            
            private STORE_TERMINATING_MACHINERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STORE_TERMINATING_MACHINERowChangeEvent(STORE_TERMINATING_MACHINERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STORE_TERMINATING_MACHINERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class UPLOAD_TEMPRowChangeEvent : global::System.EventArgs {
            
            private UPLOAD_TEMPRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UPLOAD_TEMPRowChangeEvent(UPLOAD_TEMPRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UPLOAD_TEMPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace FET.POS.Model.DTO.OPT05_HqInvoiceAssign_DTOTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class HQ_INVOICE_ASSIGN_TEMPTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public HQ_INVOICE_ASSIGN_TEMPTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "HQ_INVOICE_ASSIGN_TEMP";
            tableMapping.ColumnMappings.Add("ASSIGN_ID", "ASSIGN_ID");
            tableMapping.ColumnMappings.Add("BATCH_NO", "BATCH_NO");
            tableMapping.ColumnMappings.Add("USE_TYPE", "USE_TYPE");
            tableMapping.ColumnMappings.Add("S_USE_YM", "S_USE_YM");
            tableMapping.ColumnMappings.Add("E_USE_YM", "E_USE_YM");
            tableMapping.ColumnMappings.Add("LEADER_CODE", "LEADER_CODE");
            tableMapping.ColumnMappings.Add("INIT_NO", "INIT_NO");
            tableMapping.ColumnMappings.Add("END_NO", "END_NO");
            tableMapping.ColumnMappings.Add("SHEET_COUNT", "SHEET_COUNT");
            tableMapping.ColumnMappings.Add("STORE_NO", "STORE_NO");
            tableMapping.ColumnMappings.Add("INVOICE_TYPE_ID", "INVOICE_TYPE_ID");
            tableMapping.ColumnMappings.Add("EXCEPTION_CAUSE", "EXCEPTION_CAUSE");
            tableMapping.ColumnMappings.Add("STATUS", "STATUS");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""WEBPOS"".""HQ_INVOICE_ASSIGN_TEMP"" WHERE ((""ASSIGN_ID"" = :Original_ASSIGN_ID) AND (""BATCH_NO"" = :Original_BATCH_NO) AND (""USE_TYPE"" = :Original_USE_TYPE) AND (""S_USE_YM"" = :Original_S_USE_YM) AND (""E_USE_YM"" = :Original_E_USE_YM) AND (""LEADER_CODE"" = :Original_LEADER_CODE) AND (""INIT_NO"" = :Original_INIT_NO) AND (""END_NO"" = :Original_END_NO) AND (""SHEET_COUNT"" = :Original_SHEET_COUNT) AND ((:IsNull_STORE_NO = 1 AND ""STORE_NO"" IS NULL) OR (""STORE_NO"" = :Original_STORE_NO)) AND ((:IsNull_INVOICE_TYPE_ID = 1 AND ""INVOICE_TYPE_ID"" IS NULL) OR (""INVOICE_TYPE_ID"" = :Original_INVOICE_TYPE_ID)) AND ((:IsNull_EXCEPTION_CAUSE = 1 AND ""EXCEPTION_CAUSE"" IS NULL) OR (""EXCEPTION_CAUSE"" = :Original_EXCEPTION_CAUSE)) AND ((:IsNull_STATUS = 1 AND ""STATUS"" IS NULL) OR (""STATUS"" = :Original_STATUS)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ASSIGN_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ASSIGN_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_BATCH_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "BATCH_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_USE_TYPE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "USE_TYPE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_S_USE_YM", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "S_USE_YM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_E_USE_YM", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "E_USE_YM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LEADER_CODE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LEADER_CODE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_INIT_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "INIT_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_END_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "END_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SHEET_COUNT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SHEET_COUNT", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_STORE_NO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "STORE_NO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_STORE_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "STORE_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_INVOICE_TYPE_ID", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "INVOICE_TYPE_ID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_INVOICE_TYPE_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "INVOICE_TYPE_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_EXCEPTION_CAUSE", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "EXCEPTION_CAUSE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_EXCEPTION_CAUSE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "EXCEPTION_CAUSE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_STATUS", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "STATUS", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_STATUS", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "STATUS", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""WEBPOS"".""HQ_INVOICE_ASSIGN_TEMP"" (""ASSIGN_ID"", ""BATCH_NO"", ""USE_TYPE"", ""S_USE_YM"", ""E_USE_YM"", ""LEADER_CODE"", ""INIT_NO"", ""END_NO"", ""SHEET_COUNT"", ""STORE_NO"", ""INVOICE_TYPE_ID"", ""EXCEPTION_CAUSE"", ""STATUS"") VALUES (:ASSIGN_ID, :BATCH_NO, :USE_TYPE, :S_USE_YM, :E_USE_YM, :LEADER_CODE, :INIT_NO, :END_NO, :SHEET_COUNT, :STORE_NO, :INVOICE_TYPE_ID, :EXCEPTION_CAUSE, :STATUS)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ASSIGN_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ASSIGN_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BATCH_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "BATCH_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("USE_TYPE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "USE_TYPE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("S_USE_YM", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "S_USE_YM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("E_USE_YM", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "E_USE_YM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LEADER_CODE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LEADER_CODE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("INIT_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "INIT_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("END_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "END_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SHEET_COUNT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SHEET_COUNT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("STORE_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "STORE_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("INVOICE_TYPE_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "INVOICE_TYPE_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("EXCEPTION_CAUSE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "EXCEPTION_CAUSE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("STATUS", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "STATUS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""WEBPOS"".""HQ_INVOICE_ASSIGN_TEMP"" SET ""ASSIGN_ID"" = :ASSIGN_ID, ""BATCH_NO"" = :BATCH_NO, ""USE_TYPE"" = :USE_TYPE, ""S_USE_YM"" = :S_USE_YM, ""E_USE_YM"" = :E_USE_YM, ""LEADER_CODE"" = :LEADER_CODE, ""INIT_NO"" = :INIT_NO, ""END_NO"" = :END_NO, ""SHEET_COUNT"" = :SHEET_COUNT, ""STORE_NO"" = :STORE_NO, ""INVOICE_TYPE_ID"" = :INVOICE_TYPE_ID, ""EXCEPTION_CAUSE"" = :EXCEPTION_CAUSE, ""STATUS"" = :STATUS WHERE ((""ASSIGN_ID"" = :Original_ASSIGN_ID) AND (""BATCH_NO"" = :Original_BATCH_NO) AND (""USE_TYPE"" = :Original_USE_TYPE) AND (""S_USE_YM"" = :Original_S_USE_YM) AND (""E_USE_YM"" = :Original_E_USE_YM) AND (""LEADER_CODE"" = :Original_LEADER_CODE) AND (""INIT_NO"" = :Original_INIT_NO) AND (""END_NO"" = :Original_END_NO) AND (""SHEET_COUNT"" = :Original_SHEET_COUNT) AND ((:IsNull_STORE_NO = 1 AND ""STORE_NO"" IS NULL) OR (""STORE_NO"" = :Original_STORE_NO)) AND ((:IsNull_INVOICE_TYPE_ID = 1 AND ""INVOICE_TYPE_ID"" IS NULL) OR (""INVOICE_TYPE_ID"" = :Original_INVOICE_TYPE_ID)) AND ((:IsNull_EXCEPTION_CAUSE = 1 AND ""EXCEPTION_CAUSE"" IS NULL) OR (""EXCEPTION_CAUSE"" = :Original_EXCEPTION_CAUSE)) AND ((:IsNull_STATUS = 1 AND ""STATUS"" IS NULL) OR (""STATUS"" = :Original_STATUS)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ASSIGN_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ASSIGN_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BATCH_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "BATCH_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("USE_TYPE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "USE_TYPE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("S_USE_YM", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "S_USE_YM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("E_USE_YM", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "E_USE_YM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LEADER_CODE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LEADER_CODE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("INIT_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "INIT_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("END_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "END_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SHEET_COUNT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SHEET_COUNT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("STORE_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "STORE_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("INVOICE_TYPE_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "INVOICE_TYPE_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("EXCEPTION_CAUSE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "EXCEPTION_CAUSE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("STATUS", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "STATUS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ASSIGN_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ASSIGN_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_BATCH_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "BATCH_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_USE_TYPE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "USE_TYPE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_S_USE_YM", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "S_USE_YM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_E_USE_YM", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "E_USE_YM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LEADER_CODE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LEADER_CODE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_INIT_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "INIT_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_END_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "END_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SHEET_COUNT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SHEET_COUNT", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_STORE_NO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "STORE_NO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_STORE_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "STORE_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_INVOICE_TYPE_ID", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "INVOICE_TYPE_ID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_INVOICE_TYPE_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "INVOICE_TYPE_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_EXCEPTION_CAUSE", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "EXCEPTION_CAUSE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_EXCEPTION_CAUSE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "EXCEPTION_CAUSE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_STATUS", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "STATUS", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_STATUS", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "STATUS", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::FET.POS.Model.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ASSIGN_ID, BATCH_NO, USE_TYPE, S_USE_YM, E_USE_YM, LEADER_CODE, INIT_NO, E" +
                "ND_NO, SHEET_COUNT, STORE_NO, INVOICE_TYPE_ID, EXCEPTION_CAUSE, STATUS FROM WEBP" +
                "OS.HQ_INVOICE_ASSIGN_TEMP";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(OPT05_HqInvoiceAssign_DTO.HQ_INVOICE_ASSIGN_TEMPDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual OPT05_HqInvoiceAssign_DTO.HQ_INVOICE_ASSIGN_TEMPDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            OPT05_HqInvoiceAssign_DTO.HQ_INVOICE_ASSIGN_TEMPDataTable dataTable = new OPT05_HqInvoiceAssign_DTO.HQ_INVOICE_ASSIGN_TEMPDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(OPT05_HqInvoiceAssign_DTO.HQ_INVOICE_ASSIGN_TEMPDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(OPT05_HqInvoiceAssign_DTO dataSet) {
            return this.Adapter.Update(dataSet, "HQ_INVOICE_ASSIGN_TEMP");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_ASSIGN_ID, string Original_BATCH_NO, string Original_USE_TYPE, string Original_S_USE_YM, string Original_E_USE_YM, string Original_LEADER_CODE, string Original_INIT_NO, string Original_END_NO, decimal Original_SHEET_COUNT, string Original_STORE_NO, string Original_INVOICE_TYPE_ID, string Original_EXCEPTION_CAUSE, string Original_STATUS) {
            if ((Original_ASSIGN_ID == null)) {
                throw new global::System.ArgumentNullException("Original_ASSIGN_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_ASSIGN_ID));
            }
            if ((Original_BATCH_NO == null)) {
                throw new global::System.ArgumentNullException("Original_BATCH_NO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_BATCH_NO));
            }
            if ((Original_USE_TYPE == null)) {
                throw new global::System.ArgumentNullException("Original_USE_TYPE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_USE_TYPE));
            }
            if ((Original_S_USE_YM == null)) {
                throw new global::System.ArgumentNullException("Original_S_USE_YM");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_S_USE_YM));
            }
            if ((Original_E_USE_YM == null)) {
                throw new global::System.ArgumentNullException("Original_E_USE_YM");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_E_USE_YM));
            }
            if ((Original_LEADER_CODE == null)) {
                throw new global::System.ArgumentNullException("Original_LEADER_CODE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_LEADER_CODE));
            }
            if ((Original_INIT_NO == null)) {
                throw new global::System.ArgumentNullException("Original_INIT_NO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_INIT_NO));
            }
            if ((Original_END_NO == null)) {
                throw new global::System.ArgumentNullException("Original_END_NO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_END_NO));
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_SHEET_COUNT));
            if ((Original_STORE_NO == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_STORE_NO));
            }
            if ((Original_INVOICE_TYPE_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_INVOICE_TYPE_ID));
            }
            if ((Original_EXCEPTION_CAUSE == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_EXCEPTION_CAUSE));
            }
            if ((Original_STATUS == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_STATUS));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string ASSIGN_ID, string BATCH_NO, string USE_TYPE, string S_USE_YM, string E_USE_YM, string LEADER_CODE, string INIT_NO, string END_NO, decimal SHEET_COUNT, string STORE_NO, string INVOICE_TYPE_ID, string EXCEPTION_CAUSE, string STATUS) {
            if ((ASSIGN_ID == null)) {
                throw new global::System.ArgumentNullException("ASSIGN_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ASSIGN_ID));
            }
            if ((BATCH_NO == null)) {
                throw new global::System.ArgumentNullException("BATCH_NO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(BATCH_NO));
            }
            if ((USE_TYPE == null)) {
                throw new global::System.ArgumentNullException("USE_TYPE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(USE_TYPE));
            }
            if ((S_USE_YM == null)) {
                throw new global::System.ArgumentNullException("S_USE_YM");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(S_USE_YM));
            }
            if ((E_USE_YM == null)) {
                throw new global::System.ArgumentNullException("E_USE_YM");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(E_USE_YM));
            }
            if ((LEADER_CODE == null)) {
                throw new global::System.ArgumentNullException("LEADER_CODE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(LEADER_CODE));
            }
            if ((INIT_NO == null)) {
                throw new global::System.ArgumentNullException("INIT_NO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(INIT_NO));
            }
            if ((END_NO == null)) {
                throw new global::System.ArgumentNullException("END_NO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(END_NO));
            }
            this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(SHEET_COUNT));
            if ((STORE_NO == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(STORE_NO));
            }
            if ((INVOICE_TYPE_ID == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(INVOICE_TYPE_ID));
            }
            if ((EXCEPTION_CAUSE == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(EXCEPTION_CAUSE));
            }
            if ((STATUS == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(STATUS));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ASSIGN_ID, 
                    string BATCH_NO, 
                    string USE_TYPE, 
                    string S_USE_YM, 
                    string E_USE_YM, 
                    string LEADER_CODE, 
                    string INIT_NO, 
                    string END_NO, 
                    decimal SHEET_COUNT, 
                    string STORE_NO, 
                    string INVOICE_TYPE_ID, 
                    string EXCEPTION_CAUSE, 
                    string STATUS, 
                    string Original_ASSIGN_ID, 
                    string Original_BATCH_NO, 
                    string Original_USE_TYPE, 
                    string Original_S_USE_YM, 
                    string Original_E_USE_YM, 
                    string Original_LEADER_CODE, 
                    string Original_INIT_NO, 
                    string Original_END_NO, 
                    decimal Original_SHEET_COUNT, 
                    string Original_STORE_NO, 
                    string Original_INVOICE_TYPE_ID, 
                    string Original_EXCEPTION_CAUSE, 
                    string Original_STATUS) {
            if ((ASSIGN_ID == null)) {
                throw new global::System.ArgumentNullException("ASSIGN_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ASSIGN_ID));
            }
            if ((BATCH_NO == null)) {
                throw new global::System.ArgumentNullException("BATCH_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(BATCH_NO));
            }
            if ((USE_TYPE == null)) {
                throw new global::System.ArgumentNullException("USE_TYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(USE_TYPE));
            }
            if ((S_USE_YM == null)) {
                throw new global::System.ArgumentNullException("S_USE_YM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(S_USE_YM));
            }
            if ((E_USE_YM == null)) {
                throw new global::System.ArgumentNullException("E_USE_YM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(E_USE_YM));
            }
            if ((LEADER_CODE == null)) {
                throw new global::System.ArgumentNullException("LEADER_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(LEADER_CODE));
            }
            if ((INIT_NO == null)) {
                throw new global::System.ArgumentNullException("INIT_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(INIT_NO));
            }
            if ((END_NO == null)) {
                throw new global::System.ArgumentNullException("END_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(END_NO));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(SHEET_COUNT));
            if ((STORE_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(STORE_NO));
            }
            if ((INVOICE_TYPE_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(INVOICE_TYPE_ID));
            }
            if ((EXCEPTION_CAUSE == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(EXCEPTION_CAUSE));
            }
            if ((STATUS == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(STATUS));
            }
            if ((Original_ASSIGN_ID == null)) {
                throw new global::System.ArgumentNullException("Original_ASSIGN_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_ASSIGN_ID));
            }
            if ((Original_BATCH_NO == null)) {
                throw new global::System.ArgumentNullException("Original_BATCH_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_BATCH_NO));
            }
            if ((Original_USE_TYPE == null)) {
                throw new global::System.ArgumentNullException("Original_USE_TYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_USE_TYPE));
            }
            if ((Original_S_USE_YM == null)) {
                throw new global::System.ArgumentNullException("Original_S_USE_YM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_S_USE_YM));
            }
            if ((Original_E_USE_YM == null)) {
                throw new global::System.ArgumentNullException("Original_E_USE_YM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_E_USE_YM));
            }
            if ((Original_LEADER_CODE == null)) {
                throw new global::System.ArgumentNullException("Original_LEADER_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_LEADER_CODE));
            }
            if ((Original_INIT_NO == null)) {
                throw new global::System.ArgumentNullException("Original_INIT_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_INIT_NO));
            }
            if ((Original_END_NO == null)) {
                throw new global::System.ArgumentNullException("Original_END_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_END_NO));
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(Original_SHEET_COUNT));
            if ((Original_STORE_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_STORE_NO));
            }
            if ((Original_INVOICE_TYPE_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_INVOICE_TYPE_ID));
            }
            if ((Original_EXCEPTION_CAUSE == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_EXCEPTION_CAUSE));
            }
            if ((Original_STATUS == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_STATUS));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string USE_TYPE, 
                    string S_USE_YM, 
                    string E_USE_YM, 
                    string LEADER_CODE, 
                    string INIT_NO, 
                    string END_NO, 
                    decimal SHEET_COUNT, 
                    string STORE_NO, 
                    string INVOICE_TYPE_ID, 
                    string EXCEPTION_CAUSE, 
                    string STATUS, 
                    string Original_ASSIGN_ID, 
                    string Original_BATCH_NO, 
                    string Original_USE_TYPE, 
                    string Original_S_USE_YM, 
                    string Original_E_USE_YM, 
                    string Original_LEADER_CODE, 
                    string Original_INIT_NO, 
                    string Original_END_NO, 
                    decimal Original_SHEET_COUNT, 
                    string Original_STORE_NO, 
                    string Original_INVOICE_TYPE_ID, 
                    string Original_EXCEPTION_CAUSE, 
                    string Original_STATUS) {
            return this.Update(Original_ASSIGN_ID, Original_BATCH_NO, USE_TYPE, S_USE_YM, E_USE_YM, LEADER_CODE, INIT_NO, END_NO, SHEET_COUNT, STORE_NO, INVOICE_TYPE_ID, EXCEPTION_CAUSE, STATUS, Original_ASSIGN_ID, Original_BATCH_NO, Original_USE_TYPE, Original_S_USE_YM, Original_E_USE_YM, Original_LEADER_CODE, Original_INIT_NO, Original_END_NO, Original_SHEET_COUNT, Original_STORE_NO, Original_INVOICE_TYPE_ID, Original_EXCEPTION_CAUSE, Original_STATUS);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class STORE_INVOICE_ASSIGNTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public STORE_INVOICE_ASSIGNTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "STORE_INVOICE_ASSIGN";
            tableMapping.ColumnMappings.Add("MACHINE_ID", "MACHINE_ID");
            tableMapping.ColumnMappings.Add("ASSIGN_ID", "ASSIGN_ID");
            tableMapping.ColumnMappings.Add("START_NO", "START_NO");
            tableMapping.ColumnMappings.Add("END_NO", "END_NO");
            tableMapping.ColumnMappings.Add("CURRENT_NO", "CURRENT_NO");
            tableMapping.ColumnMappings.Add("SHEET_COUNT", "SHEET_COUNT");
            tableMapping.ColumnMappings.Add("CREATE_USER", "CREATE_USER");
            tableMapping.ColumnMappings.Add("CREATE_DTM", "CREATE_DTM");
            tableMapping.ColumnMappings.Add("MODI_USER", "MODI_USER");
            tableMapping.ColumnMappings.Add("MODI_DTM", "MODI_DTM");
            tableMapping.ColumnMappings.Add("STORE_NO", "STORE_NO");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""WEBPOS"".""STORE_INVOICE_ASSIGN"" WHERE ((""MACHINE_ID"" = :Original_MACHINE_ID) AND (""ASSIGN_ID"" = :Original_ASSIGN_ID) AND ((:IsNull_START_NO = 1 AND ""START_NO"" IS NULL) OR (""START_NO"" = :Original_START_NO)) AND ((:IsNull_END_NO = 1 AND ""END_NO"" IS NULL) OR (""END_NO"" = :Original_END_NO)) AND ((:IsNull_CURRENT_NO = 1 AND ""CURRENT_NO"" IS NULL) OR (""CURRENT_NO"" = :Original_CURRENT_NO)) AND ((:IsNull_SHEET_COUNT = 1 AND ""SHEET_COUNT"" IS NULL) OR (""SHEET_COUNT"" = :Original_SHEET_COUNT)) AND (""CREATE_USER"" = :Original_CREATE_USER) AND (""CREATE_DTM"" = :Original_CREATE_DTM) AND (""MODI_USER"" = :Original_MODI_USER) AND (""MODI_DTM"" = :Original_MODI_DTM) AND ((:IsNull_STORE_NO = 1 AND ""STORE_NO"" IS NULL) OR (""STORE_NO"" = :Original_STORE_NO)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MACHINE_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MACHINE_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ASSIGN_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ASSIGN_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_START_NO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "START_NO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_START_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "START_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_END_NO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "END_NO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_END_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "END_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_CURRENT_NO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "CURRENT_NO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CURRENT_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CURRENT_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_SHEET_COUNT", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "SHEET_COUNT", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SHEET_COUNT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SHEET_COUNT", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CREATE_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CREATE_USER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CREATE_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "CREATE_DTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MODI_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MODI_USER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MODI_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "MODI_DTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_STORE_NO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "STORE_NO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_STORE_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "STORE_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""WEBPOS"".""STORE_INVOICE_ASSIGN"" (""MACHINE_ID"", ""ASSIGN_ID"", ""START_NO"", ""END_NO"", ""CURRENT_NO"", ""SHEET_COUNT"", ""CREATE_USER"", ""CREATE_DTM"", ""MODI_USER"", ""MODI_DTM"", ""STORE_NO"") VALUES (:MACHINE_ID, :ASSIGN_ID, :START_NO, :END_NO, :CURRENT_NO, :SHEET_COUNT, :CREATE_USER, :CREATE_DTM, :MODI_USER, :MODI_DTM, :STORE_NO)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MACHINE_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MACHINE_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ASSIGN_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ASSIGN_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("START_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "START_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("END_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "END_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CURRENT_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CURRENT_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SHEET_COUNT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SHEET_COUNT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CREATE_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CREATE_USER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CREATE_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "CREATE_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MODI_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MODI_USER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MODI_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "MODI_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("STORE_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "STORE_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""WEBPOS"".""STORE_INVOICE_ASSIGN"" SET ""MACHINE_ID"" = :MACHINE_ID, ""ASSIGN_ID"" = :ASSIGN_ID, ""START_NO"" = :START_NO, ""END_NO"" = :END_NO, ""CURRENT_NO"" = :CURRENT_NO, ""SHEET_COUNT"" = :SHEET_COUNT, ""CREATE_USER"" = :CREATE_USER, ""CREATE_DTM"" = :CREATE_DTM, ""MODI_USER"" = :MODI_USER, ""MODI_DTM"" = :MODI_DTM, ""STORE_NO"" = :STORE_NO WHERE ((""MACHINE_ID"" = :Original_MACHINE_ID) AND (""ASSIGN_ID"" = :Original_ASSIGN_ID) AND ((:IsNull_START_NO = 1 AND ""START_NO"" IS NULL) OR (""START_NO"" = :Original_START_NO)) AND ((:IsNull_END_NO = 1 AND ""END_NO"" IS NULL) OR (""END_NO"" = :Original_END_NO)) AND ((:IsNull_CURRENT_NO = 1 AND ""CURRENT_NO"" IS NULL) OR (""CURRENT_NO"" = :Original_CURRENT_NO)) AND ((:IsNull_SHEET_COUNT = 1 AND ""SHEET_COUNT"" IS NULL) OR (""SHEET_COUNT"" = :Original_SHEET_COUNT)) AND (""CREATE_USER"" = :Original_CREATE_USER) AND (""CREATE_DTM"" = :Original_CREATE_DTM) AND (""MODI_USER"" = :Original_MODI_USER) AND (""MODI_DTM"" = :Original_MODI_DTM) AND ((:IsNull_STORE_NO = 1 AND ""STORE_NO"" IS NULL) OR (""STORE_NO"" = :Original_STORE_NO)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MACHINE_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MACHINE_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ASSIGN_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ASSIGN_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("START_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "START_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("END_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "END_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CURRENT_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CURRENT_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SHEET_COUNT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SHEET_COUNT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CREATE_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CREATE_USER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CREATE_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "CREATE_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MODI_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MODI_USER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MODI_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "MODI_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("STORE_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "STORE_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MACHINE_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MACHINE_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ASSIGN_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ASSIGN_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_START_NO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "START_NO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_START_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "START_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_END_NO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "END_NO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_END_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "END_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_CURRENT_NO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "CURRENT_NO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CURRENT_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CURRENT_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_SHEET_COUNT", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "SHEET_COUNT", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SHEET_COUNT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SHEET_COUNT", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CREATE_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CREATE_USER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CREATE_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "CREATE_DTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MODI_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MODI_USER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MODI_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "MODI_DTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_STORE_NO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "STORE_NO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_STORE_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "STORE_NO", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::FET.POS.Model.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MACHINE_ID, ASSIGN_ID, START_NO, END_NO, CURRENT_NO, SHEET_COUNT, CREATE_U" +
                "SER, CREATE_DTM, MODI_USER, MODI_DTM, STORE_NO FROM WEBPOS.STORE_INVOICE_ASSIGN";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(OPT05_HqInvoiceAssign_DTO.STORE_INVOICE_ASSIGNDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual OPT05_HqInvoiceAssign_DTO.STORE_INVOICE_ASSIGNDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            OPT05_HqInvoiceAssign_DTO.STORE_INVOICE_ASSIGNDataTable dataTable = new OPT05_HqInvoiceAssign_DTO.STORE_INVOICE_ASSIGNDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(OPT05_HqInvoiceAssign_DTO.STORE_INVOICE_ASSIGNDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(OPT05_HqInvoiceAssign_DTO dataSet) {
            return this.Adapter.Update(dataSet, "STORE_INVOICE_ASSIGN");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_MACHINE_ID, string Original_ASSIGN_ID, string Original_START_NO, string Original_END_NO, string Original_CURRENT_NO, global::System.Nullable<decimal> Original_SHEET_COUNT, string Original_CREATE_USER, System.DateTime Original_CREATE_DTM, string Original_MODI_USER, System.DateTime Original_MODI_DTM, string Original_STORE_NO) {
            if ((Original_MACHINE_ID == null)) {
                throw new global::System.ArgumentNullException("Original_MACHINE_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_MACHINE_ID));
            }
            if ((Original_ASSIGN_ID == null)) {
                throw new global::System.ArgumentNullException("Original_ASSIGN_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_ASSIGN_ID));
            }
            if ((Original_START_NO == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_START_NO));
            }
            if ((Original_END_NO == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_END_NO));
            }
            if ((Original_CURRENT_NO == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_CURRENT_NO));
            }
            if ((Original_SHEET_COUNT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((decimal)(Original_SHEET_COUNT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_CREATE_USER == null)) {
                throw new global::System.ArgumentNullException("Original_CREATE_USER");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_CREATE_USER));
            }
            this.Adapter.DeleteCommand.Parameters[11].Value = ((System.DateTime)(Original_CREATE_DTM));
            if ((Original_MODI_USER == null)) {
                throw new global::System.ArgumentNullException("Original_MODI_USER");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_MODI_USER));
            }
            this.Adapter.DeleteCommand.Parameters[13].Value = ((System.DateTime)(Original_MODI_DTM));
            if ((Original_STORE_NO == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_STORE_NO));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MACHINE_ID, string ASSIGN_ID, string START_NO, string END_NO, string CURRENT_NO, global::System.Nullable<decimal> SHEET_COUNT, string CREATE_USER, System.DateTime CREATE_DTM, string MODI_USER, System.DateTime MODI_DTM, string STORE_NO) {
            if ((MACHINE_ID == null)) {
                throw new global::System.ArgumentNullException("MACHINE_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MACHINE_ID));
            }
            if ((ASSIGN_ID == null)) {
                throw new global::System.ArgumentNullException("ASSIGN_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ASSIGN_ID));
            }
            if ((START_NO == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(START_NO));
            }
            if ((END_NO == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(END_NO));
            }
            if ((CURRENT_NO == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(CURRENT_NO));
            }
            if ((SHEET_COUNT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(SHEET_COUNT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((CREATE_USER == null)) {
                throw new global::System.ArgumentNullException("CREATE_USER");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(CREATE_USER));
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(CREATE_DTM));
            if ((MODI_USER == null)) {
                throw new global::System.ArgumentNullException("MODI_USER");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(MODI_USER));
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(MODI_DTM));
            if ((STORE_NO == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(STORE_NO));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string MACHINE_ID, 
                    string ASSIGN_ID, 
                    string START_NO, 
                    string END_NO, 
                    string CURRENT_NO, 
                    global::System.Nullable<decimal> SHEET_COUNT, 
                    string CREATE_USER, 
                    System.DateTime CREATE_DTM, 
                    string MODI_USER, 
                    System.DateTime MODI_DTM, 
                    string STORE_NO, 
                    string Original_MACHINE_ID, 
                    string Original_ASSIGN_ID, 
                    string Original_START_NO, 
                    string Original_END_NO, 
                    string Original_CURRENT_NO, 
                    global::System.Nullable<decimal> Original_SHEET_COUNT, 
                    string Original_CREATE_USER, 
                    System.DateTime Original_CREATE_DTM, 
                    string Original_MODI_USER, 
                    System.DateTime Original_MODI_DTM, 
                    string Original_STORE_NO) {
            if ((MACHINE_ID == null)) {
                throw new global::System.ArgumentNullException("MACHINE_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MACHINE_ID));
            }
            if ((ASSIGN_ID == null)) {
                throw new global::System.ArgumentNullException("ASSIGN_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ASSIGN_ID));
            }
            if ((START_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(START_NO));
            }
            if ((END_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(END_NO));
            }
            if ((CURRENT_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(CURRENT_NO));
            }
            if ((SHEET_COUNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(SHEET_COUNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((CREATE_USER == null)) {
                throw new global::System.ArgumentNullException("CREATE_USER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(CREATE_USER));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(CREATE_DTM));
            if ((MODI_USER == null)) {
                throw new global::System.ArgumentNullException("MODI_USER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(MODI_USER));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(MODI_DTM));
            if ((STORE_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(STORE_NO));
            }
            if ((Original_MACHINE_ID == null)) {
                throw new global::System.ArgumentNullException("Original_MACHINE_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_MACHINE_ID));
            }
            if ((Original_ASSIGN_ID == null)) {
                throw new global::System.ArgumentNullException("Original_ASSIGN_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_ASSIGN_ID));
            }
            if ((Original_START_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_START_NO));
            }
            if ((Original_END_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_END_NO));
            }
            if ((Original_CURRENT_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_CURRENT_NO));
            }
            if ((Original_SHEET_COUNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(Original_SHEET_COUNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_CREATE_USER == null)) {
                throw new global::System.ArgumentNullException("Original_CREATE_USER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_CREATE_USER));
            }
            this.Adapter.UpdateCommand.Parameters[22].Value = ((System.DateTime)(Original_CREATE_DTM));
            if ((Original_MODI_USER == null)) {
                throw new global::System.ArgumentNullException("Original_MODI_USER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_MODI_USER));
            }
            this.Adapter.UpdateCommand.Parameters[24].Value = ((System.DateTime)(Original_MODI_DTM));
            if ((Original_STORE_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_STORE_NO));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string START_NO, 
                    string END_NO, 
                    string CURRENT_NO, 
                    global::System.Nullable<decimal> SHEET_COUNT, 
                    string CREATE_USER, 
                    System.DateTime CREATE_DTM, 
                    string MODI_USER, 
                    System.DateTime MODI_DTM, 
                    string STORE_NO, 
                    string Original_MACHINE_ID, 
                    string Original_ASSIGN_ID, 
                    string Original_START_NO, 
                    string Original_END_NO, 
                    string Original_CURRENT_NO, 
                    global::System.Nullable<decimal> Original_SHEET_COUNT, 
                    string Original_CREATE_USER, 
                    System.DateTime Original_CREATE_DTM, 
                    string Original_MODI_USER, 
                    System.DateTime Original_MODI_DTM, 
                    string Original_STORE_NO) {
            return this.Update(Original_MACHINE_ID, Original_ASSIGN_ID, START_NO, END_NO, CURRENT_NO, SHEET_COUNT, CREATE_USER, CREATE_DTM, MODI_USER, MODI_DTM, STORE_NO, Original_MACHINE_ID, Original_ASSIGN_ID, Original_START_NO, Original_END_NO, Original_CURRENT_NO, Original_SHEET_COUNT, Original_CREATE_USER, Original_CREATE_DTM, Original_MODI_USER, Original_MODI_DTM, Original_STORE_NO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class HQ_INVOICE_ASSIGNTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public HQ_INVOICE_ASSIGNTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "HQ_INVOICE_ASSIGN";
            tableMapping.ColumnMappings.Add("ASSIGN_ID", "ASSIGN_ID");
            tableMapping.ColumnMappings.Add("USE_TYPE", "USE_TYPE");
            tableMapping.ColumnMappings.Add("S_USE_YM", "S_USE_YM");
            tableMapping.ColumnMappings.Add("E_USE_YM", "E_USE_YM");
            tableMapping.ColumnMappings.Add("LEADER_CODE", "LEADER_CODE");
            tableMapping.ColumnMappings.Add("INIT_NO", "INIT_NO");
            tableMapping.ColumnMappings.Add("END_NO", "END_NO");
            tableMapping.ColumnMappings.Add("SHEET_COUNT", "SHEET_COUNT");
            tableMapping.ColumnMappings.Add("CURRENT_NO", "CURRENT_NO");
            tableMapping.ColumnMappings.Add("CREATE_USER", "CREATE_USER");
            tableMapping.ColumnMappings.Add("CREATE_DTM", "CREATE_DTM");
            tableMapping.ColumnMappings.Add("MODI_USER", "MODI_USER");
            tableMapping.ColumnMappings.Add("MODI_DTM", "MODI_DTM");
            tableMapping.ColumnMappings.Add("STORE_NO", "STORE_NO");
            tableMapping.ColumnMappings.Add("INVOICE_TYPE_ID", "INVOICE_TYPE_ID");
            tableMapping.ColumnMappings.Add("STATUS", "STATUS");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""WEBPOS"".""HQ_INVOICE_ASSIGN"" WHERE ((""ASSIGN_ID"" = :Original_ASSIGN_ID) AND ((:IsNull_USE_TYPE = 1 AND ""USE_TYPE"" IS NULL) OR (""USE_TYPE"" = :Original_USE_TYPE)) AND ((:IsNull_S_USE_YM = 1 AND ""S_USE_YM"" IS NULL) OR (""S_USE_YM"" = :Original_S_USE_YM)) AND ((:IsNull_E_USE_YM = 1 AND ""E_USE_YM"" IS NULL) OR (""E_USE_YM"" = :Original_E_USE_YM)) AND ((:IsNull_LEADER_CODE = 1 AND ""LEADER_CODE"" IS NULL) OR (""LEADER_CODE"" = :Original_LEADER_CODE)) AND ((:IsNull_INIT_NO = 1 AND ""INIT_NO"" IS NULL) OR (""INIT_NO"" = :Original_INIT_NO)) AND ((:IsNull_END_NO = 1 AND ""END_NO"" IS NULL) OR (""END_NO"" = :Original_END_NO)) AND ((:IsNull_SHEET_COUNT = 1 AND ""SHEET_COUNT"" IS NULL) OR (""SHEET_COUNT"" = :Original_SHEET_COUNT)) AND ((:IsNull_CURRENT_NO = 1 AND ""CURRENT_NO"" IS NULL) OR (""CURRENT_NO"" = :Original_CURRENT_NO)) AND ((:IsNull_CREATE_USER = 1 AND ""CREATE_USER"" IS NULL) OR (""CREATE_USER"" = :Original_CREATE_USER)) AND ((:IsNull_CREATE_DTM = 1 AND ""CREATE_DTM"" IS NULL) OR (""CREATE_DTM"" = :Original_CREATE_DTM)) AND ((:IsNull_MODI_USER = 1 AND ""MODI_USER"" IS NULL) OR (""MODI_USER"" = :Original_MODI_USER)) AND ((:IsNull_MODI_DTM = 1 AND ""MODI_DTM"" IS NULL) OR (""MODI_DTM"" = :Original_MODI_DTM)) AND ((:IsNull_STORE_NO = 1 AND ""STORE_NO"" IS NULL) OR (""STORE_NO"" = :Original_STORE_NO)) AND ((:IsNull_INVOICE_TYPE_ID = 1 AND ""INVOICE_TYPE_ID"" IS NULL) OR (""INVOICE_TYPE_ID"" = :Original_INVOICE_TYPE_ID)) AND ((:IsNull_STATUS = 1 AND ""STATUS"" IS NULL) OR (""STATUS"" = :Original_STATUS)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ASSIGN_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ASSIGN_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_USE_TYPE", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "USE_TYPE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_USE_TYPE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "USE_TYPE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_S_USE_YM", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "S_USE_YM", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_S_USE_YM", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "S_USE_YM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_E_USE_YM", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "E_USE_YM", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_E_USE_YM", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "E_USE_YM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_LEADER_CODE", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "LEADER_CODE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LEADER_CODE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LEADER_CODE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_INIT_NO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "INIT_NO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_INIT_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "INIT_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_END_NO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "END_NO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_END_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "END_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_SHEET_COUNT", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "SHEET_COUNT", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SHEET_COUNT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SHEET_COUNT", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_CURRENT_NO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "CURRENT_NO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CURRENT_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CURRENT_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_CREATE_USER", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "CREATE_USER", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CREATE_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CREATE_USER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_CREATE_DTM", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "CREATE_DTM", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CREATE_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "CREATE_DTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_MODI_USER", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "MODI_USER", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MODI_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MODI_USER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_MODI_DTM", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "MODI_DTM", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MODI_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "MODI_DTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_STORE_NO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "STORE_NO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_STORE_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "STORE_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_INVOICE_TYPE_ID", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "INVOICE_TYPE_ID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_INVOICE_TYPE_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "INVOICE_TYPE_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_STATUS", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "STATUS", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_STATUS", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "STATUS", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""WEBPOS"".""HQ_INVOICE_ASSIGN"" (""ASSIGN_ID"", ""USE_TYPE"", ""S_USE_YM"", ""E_USE_YM"", ""LEADER_CODE"", ""INIT_NO"", ""END_NO"", ""SHEET_COUNT"", ""CURRENT_NO"", ""CREATE_USER"", ""CREATE_DTM"", ""MODI_USER"", ""MODI_DTM"", ""STORE_NO"", ""INVOICE_TYPE_ID"", ""STATUS"") VALUES (:ASSIGN_ID, :USE_TYPE, :S_USE_YM, :E_USE_YM, :LEADER_CODE, :INIT_NO, :END_NO, :SHEET_COUNT, :CURRENT_NO, :CREATE_USER, :CREATE_DTM, :MODI_USER, :MODI_DTM, :STORE_NO, :INVOICE_TYPE_ID, :STATUS)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ASSIGN_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ASSIGN_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("USE_TYPE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "USE_TYPE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("S_USE_YM", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "S_USE_YM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("E_USE_YM", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "E_USE_YM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LEADER_CODE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LEADER_CODE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("INIT_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "INIT_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("END_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "END_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SHEET_COUNT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SHEET_COUNT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CURRENT_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CURRENT_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CREATE_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CREATE_USER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CREATE_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "CREATE_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MODI_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MODI_USER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MODI_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "MODI_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("STORE_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "STORE_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("INVOICE_TYPE_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "INVOICE_TYPE_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("STATUS", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "STATUS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE \"WEBPOS\".\"HQ_INVOICE_ASSIGN\" SET \"ASSIGN_ID\" = :ASSIGN_ID, \"USE_TYPE\" = :U" +
                "SE_TYPE, \"S_USE_YM\" = :S_USE_YM, \"E_USE_YM\" = :E_USE_YM, \"LEADER_CODE\" = :LEADER" +
                "_CODE, \"INIT_NO\" = :INIT_NO, \"END_NO\" = :END_NO, \"SHEET_COUNT\" = :SHEET_COUNT, \"" +
                "CURRENT_NO\" = :CURRENT_NO, \"CREATE_USER\" = :CREATE_USER, \"CREATE_DTM\" = :CREATE_" +
                "DTM, \"MODI_USER\" = :MODI_USER, \"MODI_DTM\" = :MODI_DTM, \"STORE_NO\" = :STORE_NO, \"" +
                "INVOICE_TYPE_ID\" = :INVOICE_TYPE_ID, \"STATUS\" = :STATUS WHERE ((\"ASSIGN_ID\" = :O" +
                "riginal_ASSIGN_ID) AND ((:IsNull_USE_TYPE = 1 AND \"USE_TYPE\" IS NULL) OR (\"USE_T" +
                "YPE\" = :Original_USE_TYPE)) AND ((:IsNull_S_USE_YM = 1 AND \"S_USE_YM\" IS NULL) O" +
                "R (\"S_USE_YM\" = :Original_S_USE_YM)) AND ((:IsNull_E_USE_YM = 1 AND \"E_USE_YM\" I" +
                "S NULL) OR (\"E_USE_YM\" = :Original_E_USE_YM)) AND ((:IsNull_LEADER_CODE = 1 AND " +
                "\"LEADER_CODE\" IS NULL) OR (\"LEADER_CODE\" = :Original_LEADER_CODE)) AND ((:IsNull" +
                "_INIT_NO = 1 AND \"INIT_NO\" IS NULL) OR (\"INIT_NO\" = :Original_INIT_NO)) AND ((:I" +
                "sNull_END_NO = 1 AND \"END_NO\" IS NULL) OR (\"END_NO\" = :Original_END_NO)) AND ((:" +
                "IsNull_SHEET_COUNT = 1 AND \"SHEET_COUNT\" IS NULL) OR (\"SHEET_COUNT\" = :Original_" +
                "SHEET_COUNT)) AND ((:IsNull_CURRENT_NO = 1 AND \"CURRENT_NO\" IS NULL) OR (\"CURREN" +
                "T_NO\" = :Original_CURRENT_NO)) AND ((:IsNull_CREATE_USER = 1 AND \"CREATE_USER\" I" +
                "S NULL) OR (\"CREATE_USER\" = :Original_CREATE_USER)) AND ((:IsNull_CREATE_DTM = 1" +
                " AND \"CREATE_DTM\" IS NULL) OR (\"CREATE_DTM\" = :Original_CREATE_DTM)) AND ((:IsNu" +
                "ll_MODI_USER = 1 AND \"MODI_USER\" IS NULL) OR (\"MODI_USER\" = :Original_MODI_USER)" +
                ") AND ((:IsNull_MODI_DTM = 1 AND \"MODI_DTM\" IS NULL) OR (\"MODI_DTM\" = :Original_" +
                "MODI_DTM)) AND ((:IsNull_STORE_NO = 1 AND \"STORE_NO\" IS NULL) OR (\"STORE_NO\" = :" +
                "Original_STORE_NO)) AND ((:IsNull_INVOICE_TYPE_ID = 1 AND \"INVOICE_TYPE_ID\" IS N" +
                "ULL) OR (\"INVOICE_TYPE_ID\" = :Original_INVOICE_TYPE_ID)) AND ((:IsNull_STATUS = " +
                "1 AND \"STATUS\" IS NULL) OR (\"STATUS\" = :Original_STATUS)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ASSIGN_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ASSIGN_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("USE_TYPE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "USE_TYPE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("S_USE_YM", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "S_USE_YM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("E_USE_YM", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "E_USE_YM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LEADER_CODE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LEADER_CODE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("INIT_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "INIT_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("END_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "END_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SHEET_COUNT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SHEET_COUNT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CURRENT_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CURRENT_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CREATE_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CREATE_USER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CREATE_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "CREATE_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MODI_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MODI_USER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MODI_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "MODI_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("STORE_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "STORE_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("INVOICE_TYPE_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "INVOICE_TYPE_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("STATUS", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "STATUS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ASSIGN_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ASSIGN_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_USE_TYPE", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "USE_TYPE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_USE_TYPE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "USE_TYPE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_S_USE_YM", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "S_USE_YM", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_S_USE_YM", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "S_USE_YM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_E_USE_YM", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "E_USE_YM", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_E_USE_YM", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "E_USE_YM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_LEADER_CODE", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "LEADER_CODE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LEADER_CODE", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LEADER_CODE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_INIT_NO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "INIT_NO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_INIT_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "INIT_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_END_NO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "END_NO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_END_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "END_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_SHEET_COUNT", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "SHEET_COUNT", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SHEET_COUNT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SHEET_COUNT", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_CURRENT_NO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "CURRENT_NO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CURRENT_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CURRENT_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_CREATE_USER", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "CREATE_USER", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CREATE_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CREATE_USER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_CREATE_DTM", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "CREATE_DTM", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CREATE_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "CREATE_DTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_MODI_USER", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "MODI_USER", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MODI_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MODI_USER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_MODI_DTM", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "MODI_DTM", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MODI_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "MODI_DTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_STORE_NO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "STORE_NO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_STORE_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "STORE_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_INVOICE_TYPE_ID", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "INVOICE_TYPE_ID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_INVOICE_TYPE_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "INVOICE_TYPE_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_STATUS", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "STATUS", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_STATUS", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "STATUS", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::FET.POS.Model.Properties.Settings.Default.ConnectionString3;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ASSIGN_ID, USE_TYPE, S_USE_YM, E_USE_YM, LEADER_CODE, INIT_NO, END_NO, SHE" +
                "ET_COUNT, CURRENT_NO, CREATE_USER, CREATE_DTM, MODI_USER, MODI_DTM, STORE_NO, IN" +
                "VOICE_TYPE_ID, STATUS FROM WEBPOS.HQ_INVOICE_ASSIGN";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(OPT05_HqInvoiceAssign_DTO.HQ_INVOICE_ASSIGNDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual OPT05_HqInvoiceAssign_DTO.HQ_INVOICE_ASSIGNDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            OPT05_HqInvoiceAssign_DTO.HQ_INVOICE_ASSIGNDataTable dataTable = new OPT05_HqInvoiceAssign_DTO.HQ_INVOICE_ASSIGNDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(OPT05_HqInvoiceAssign_DTO.HQ_INVOICE_ASSIGNDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(OPT05_HqInvoiceAssign_DTO dataSet) {
            return this.Adapter.Update(dataSet, "HQ_INVOICE_ASSIGN");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_ASSIGN_ID, 
                    string Original_USE_TYPE, 
                    string Original_S_USE_YM, 
                    string Original_E_USE_YM, 
                    string Original_LEADER_CODE, 
                    string Original_INIT_NO, 
                    string Original_END_NO, 
                    global::System.Nullable<decimal> Original_SHEET_COUNT, 
                    string Original_CURRENT_NO, 
                    string Original_CREATE_USER, 
                    global::System.Nullable<global::System.DateTime> Original_CREATE_DTM, 
                    string Original_MODI_USER, 
                    global::System.Nullable<global::System.DateTime> Original_MODI_DTM, 
                    string Original_STORE_NO, 
                    string Original_INVOICE_TYPE_ID, 
                    string Original_STATUS) {
            if ((Original_ASSIGN_ID == null)) {
                throw new global::System.ArgumentNullException("Original_ASSIGN_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_ASSIGN_ID));
            }
            if ((Original_USE_TYPE == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_USE_TYPE));
            }
            if ((Original_S_USE_YM == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_S_USE_YM));
            }
            if ((Original_E_USE_YM == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_E_USE_YM));
            }
            if ((Original_LEADER_CODE == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_LEADER_CODE));
            }
            if ((Original_INIT_NO == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_INIT_NO));
            }
            if ((Original_END_NO == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_END_NO));
            }
            if ((Original_SHEET_COUNT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((decimal)(Original_SHEET_COUNT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_CURRENT_NO == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_CURRENT_NO));
            }
            if ((Original_CREATE_USER == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_CREATE_USER));
            }
            if ((Original_CREATE_DTM.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((System.DateTime)(Original_CREATE_DTM.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_MODI_USER == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_MODI_USER));
            }
            if ((Original_MODI_DTM.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((System.DateTime)(Original_MODI_DTM.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_STORE_NO == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_STORE_NO));
            }
            if ((Original_INVOICE_TYPE_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_INVOICE_TYPE_ID));
            }
            if ((Original_STATUS == null)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_STATUS));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string ASSIGN_ID, 
                    string USE_TYPE, 
                    string S_USE_YM, 
                    string E_USE_YM, 
                    string LEADER_CODE, 
                    string INIT_NO, 
                    string END_NO, 
                    global::System.Nullable<decimal> SHEET_COUNT, 
                    string CURRENT_NO, 
                    string CREATE_USER, 
                    global::System.Nullable<global::System.DateTime> CREATE_DTM, 
                    string MODI_USER, 
                    global::System.Nullable<global::System.DateTime> MODI_DTM, 
                    string STORE_NO, 
                    string INVOICE_TYPE_ID, 
                    string STATUS) {
            if ((ASSIGN_ID == null)) {
                throw new global::System.ArgumentNullException("ASSIGN_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ASSIGN_ID));
            }
            if ((USE_TYPE == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(USE_TYPE));
            }
            if ((S_USE_YM == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(S_USE_YM));
            }
            if ((E_USE_YM == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(E_USE_YM));
            }
            if ((LEADER_CODE == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(LEADER_CODE));
            }
            if ((INIT_NO == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(INIT_NO));
            }
            if ((END_NO == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(END_NO));
            }
            if ((SHEET_COUNT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(SHEET_COUNT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((CURRENT_NO == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(CURRENT_NO));
            }
            if ((CREATE_USER == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(CREATE_USER));
            }
            if ((CREATE_DTM.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(CREATE_DTM.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((MODI_USER == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(MODI_USER));
            }
            if ((MODI_DTM.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((System.DateTime)(MODI_DTM.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((STORE_NO == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(STORE_NO));
            }
            if ((INVOICE_TYPE_ID == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(INVOICE_TYPE_ID));
            }
            if ((STATUS == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(STATUS));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ASSIGN_ID, 
                    string USE_TYPE, 
                    string S_USE_YM, 
                    string E_USE_YM, 
                    string LEADER_CODE, 
                    string INIT_NO, 
                    string END_NO, 
                    global::System.Nullable<decimal> SHEET_COUNT, 
                    string CURRENT_NO, 
                    string CREATE_USER, 
                    global::System.Nullable<global::System.DateTime> CREATE_DTM, 
                    string MODI_USER, 
                    global::System.Nullable<global::System.DateTime> MODI_DTM, 
                    string STORE_NO, 
                    string INVOICE_TYPE_ID, 
                    string STATUS, 
                    string Original_ASSIGN_ID, 
                    string Original_USE_TYPE, 
                    string Original_S_USE_YM, 
                    string Original_E_USE_YM, 
                    string Original_LEADER_CODE, 
                    string Original_INIT_NO, 
                    string Original_END_NO, 
                    global::System.Nullable<decimal> Original_SHEET_COUNT, 
                    string Original_CURRENT_NO, 
                    string Original_CREATE_USER, 
                    global::System.Nullable<global::System.DateTime> Original_CREATE_DTM, 
                    string Original_MODI_USER, 
                    global::System.Nullable<global::System.DateTime> Original_MODI_DTM, 
                    string Original_STORE_NO, 
                    string Original_INVOICE_TYPE_ID, 
                    string Original_STATUS) {
            if ((ASSIGN_ID == null)) {
                throw new global::System.ArgumentNullException("ASSIGN_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ASSIGN_ID));
            }
            if ((USE_TYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(USE_TYPE));
            }
            if ((S_USE_YM == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(S_USE_YM));
            }
            if ((E_USE_YM == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(E_USE_YM));
            }
            if ((LEADER_CODE == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(LEADER_CODE));
            }
            if ((INIT_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(INIT_NO));
            }
            if ((END_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(END_NO));
            }
            if ((SHEET_COUNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(SHEET_COUNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((CURRENT_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(CURRENT_NO));
            }
            if ((CREATE_USER == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(CREATE_USER));
            }
            if ((CREATE_DTM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(CREATE_DTM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((MODI_USER == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(MODI_USER));
            }
            if ((MODI_DTM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(MODI_DTM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((STORE_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(STORE_NO));
            }
            if ((INVOICE_TYPE_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(INVOICE_TYPE_ID));
            }
            if ((STATUS == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(STATUS));
            }
            if ((Original_ASSIGN_ID == null)) {
                throw new global::System.ArgumentNullException("Original_ASSIGN_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_ASSIGN_ID));
            }
            if ((Original_USE_TYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_USE_TYPE));
            }
            if ((Original_S_USE_YM == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_S_USE_YM));
            }
            if ((Original_E_USE_YM == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_E_USE_YM));
            }
            if ((Original_LEADER_CODE == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_LEADER_CODE));
            }
            if ((Original_INIT_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_INIT_NO));
            }
            if ((Original_END_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_END_NO));
            }
            if ((Original_SHEET_COUNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((decimal)(Original_SHEET_COUNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_CURRENT_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_CURRENT_NO));
            }
            if ((Original_CREATE_USER == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_CREATE_USER));
            }
            if ((Original_CREATE_DTM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((System.DateTime)(Original_CREATE_DTM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_MODI_USER == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_MODI_USER));
            }
            if ((Original_MODI_DTM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((System.DateTime)(Original_MODI_DTM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_STORE_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_STORE_NO));
            }
            if ((Original_INVOICE_TYPE_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(Original_INVOICE_TYPE_ID));
            }
            if ((Original_STATUS == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Original_STATUS));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string USE_TYPE, 
                    string S_USE_YM, 
                    string E_USE_YM, 
                    string LEADER_CODE, 
                    string INIT_NO, 
                    string END_NO, 
                    global::System.Nullable<decimal> SHEET_COUNT, 
                    string CURRENT_NO, 
                    string CREATE_USER, 
                    global::System.Nullable<global::System.DateTime> CREATE_DTM, 
                    string MODI_USER, 
                    global::System.Nullable<global::System.DateTime> MODI_DTM, 
                    string STORE_NO, 
                    string INVOICE_TYPE_ID, 
                    string STATUS, 
                    string Original_ASSIGN_ID, 
                    string Original_USE_TYPE, 
                    string Original_S_USE_YM, 
                    string Original_E_USE_YM, 
                    string Original_LEADER_CODE, 
                    string Original_INIT_NO, 
                    string Original_END_NO, 
                    global::System.Nullable<decimal> Original_SHEET_COUNT, 
                    string Original_CURRENT_NO, 
                    string Original_CREATE_USER, 
                    global::System.Nullable<global::System.DateTime> Original_CREATE_DTM, 
                    string Original_MODI_USER, 
                    global::System.Nullable<global::System.DateTime> Original_MODI_DTM, 
                    string Original_STORE_NO, 
                    string Original_INVOICE_TYPE_ID, 
                    string Original_STATUS) {
            return this.Update(Original_ASSIGN_ID, USE_TYPE, S_USE_YM, E_USE_YM, LEADER_CODE, INIT_NO, END_NO, SHEET_COUNT, CURRENT_NO, CREATE_USER, CREATE_DTM, MODI_USER, MODI_DTM, STORE_NO, INVOICE_TYPE_ID, STATUS, Original_ASSIGN_ID, Original_USE_TYPE, Original_S_USE_YM, Original_E_USE_YM, Original_LEADER_CODE, Original_INIT_NO, Original_END_NO, Original_SHEET_COUNT, Original_CURRENT_NO, Original_CREATE_USER, Original_CREATE_DTM, Original_MODI_USER, Original_MODI_DTM, Original_STORE_NO, Original_INVOICE_TYPE_ID, Original_STATUS);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class STORE_TERMINATING_MACHINETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public STORE_TERMINATING_MACHINETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "STORE_TERMINATING_MACHINE";
            tableMapping.ColumnMappings.Add("MACHINE_ID", "MACHINE_ID");
            tableMapping.ColumnMappings.Add("IP_ADDRESS", "IP_ADDRESS");
            tableMapping.ColumnMappings.Add("HOST_NO", "HOST_NO");
            tableMapping.ColumnMappings.Add("HOST_NAME", "HOST_NAME");
            tableMapping.ColumnMappings.Add("MAC_ADDRESS", "MAC_ADDRESS");
            tableMapping.ColumnMappings.Add("CREATE_USER", "CREATE_USER");
            tableMapping.ColumnMappings.Add("CREATE_DTM", "CREATE_DTM");
            tableMapping.ColumnMappings.Add("MODI_USER", "MODI_USER");
            tableMapping.ColumnMappings.Add("MODI_DTM", "MODI_DTM");
            tableMapping.ColumnMappings.Add("STORE_NO", "STORE_NO");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""WEBPOS"".""STORE_TERMINATING_MACHINE"" WHERE ((""MACHINE_ID"" = :Original_MACHINE_ID) AND ((:IsNull_IP_ADDRESS = 1 AND ""IP_ADDRESS"" IS NULL) OR (""IP_ADDRESS"" = :Original_IP_ADDRESS)) AND ((:IsNull_HOST_NO = 1 AND ""HOST_NO"" IS NULL) OR (""HOST_NO"" = :Original_HOST_NO)) AND ((:IsNull_HOST_NAME = 1 AND ""HOST_NAME"" IS NULL) OR (""HOST_NAME"" = :Original_HOST_NAME)) AND ((:IsNull_MAC_ADDRESS = 1 AND ""MAC_ADDRESS"" IS NULL) OR (""MAC_ADDRESS"" = :Original_MAC_ADDRESS)) AND ((:IsNull_CREATE_USER = 1 AND ""CREATE_USER"" IS NULL) OR (""CREATE_USER"" = :Original_CREATE_USER)) AND ((:IsNull_CREATE_DTM = 1 AND ""CREATE_DTM"" IS NULL) OR (""CREATE_DTM"" = :Original_CREATE_DTM)) AND ((:IsNull_MODI_USER = 1 AND ""MODI_USER"" IS NULL) OR (""MODI_USER"" = :Original_MODI_USER)) AND ((:IsNull_MODI_DTM = 1 AND ""MODI_DTM"" IS NULL) OR (""MODI_DTM"" = :Original_MODI_DTM)) AND ((:IsNull_STORE_NO = 1 AND ""STORE_NO"" IS NULL) OR (""STORE_NO"" = :Original_STORE_NO)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MACHINE_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MACHINE_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_IP_ADDRESS", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "IP_ADDRESS", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_IP_ADDRESS", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "IP_ADDRESS", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_HOST_NO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "HOST_NO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_HOST_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "HOST_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_HOST_NAME", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "HOST_NAME", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_HOST_NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "HOST_NAME", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_MAC_ADDRESS", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "MAC_ADDRESS", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MAC_ADDRESS", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MAC_ADDRESS", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_CREATE_USER", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "CREATE_USER", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CREATE_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CREATE_USER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_CREATE_DTM", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "CREATE_DTM", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CREATE_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "CREATE_DTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_MODI_USER", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "MODI_USER", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MODI_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MODI_USER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_MODI_DTM", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "MODI_DTM", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MODI_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "MODI_DTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_STORE_NO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "STORE_NO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_STORE_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "STORE_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""WEBPOS"".""STORE_TERMINATING_MACHINE"" (""MACHINE_ID"", ""IP_ADDRESS"", ""HOST_NO"", ""HOST_NAME"", ""MAC_ADDRESS"", ""CREATE_USER"", ""CREATE_DTM"", ""MODI_USER"", ""MODI_DTM"", ""STORE_NO"") VALUES (:MACHINE_ID, :IP_ADDRESS, :HOST_NO, :HOST_NAME, :MAC_ADDRESS, :CREATE_USER, :CREATE_DTM, :MODI_USER, :MODI_DTM, :STORE_NO)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MACHINE_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MACHINE_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IP_ADDRESS", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "IP_ADDRESS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HOST_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "HOST_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HOST_NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "HOST_NAME", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MAC_ADDRESS", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MAC_ADDRESS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CREATE_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CREATE_USER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CREATE_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "CREATE_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MODI_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MODI_USER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MODI_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "MODI_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("STORE_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "STORE_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""WEBPOS"".""STORE_TERMINATING_MACHINE"" SET ""MACHINE_ID"" = :MACHINE_ID, ""IP_ADDRESS"" = :IP_ADDRESS, ""HOST_NO"" = :HOST_NO, ""HOST_NAME"" = :HOST_NAME, ""MAC_ADDRESS"" = :MAC_ADDRESS, ""CREATE_USER"" = :CREATE_USER, ""CREATE_DTM"" = :CREATE_DTM, ""MODI_USER"" = :MODI_USER, ""MODI_DTM"" = :MODI_DTM, ""STORE_NO"" = :STORE_NO WHERE ((""MACHINE_ID"" = :Original_MACHINE_ID) AND ((:IsNull_IP_ADDRESS = 1 AND ""IP_ADDRESS"" IS NULL) OR (""IP_ADDRESS"" = :Original_IP_ADDRESS)) AND ((:IsNull_HOST_NO = 1 AND ""HOST_NO"" IS NULL) OR (""HOST_NO"" = :Original_HOST_NO)) AND ((:IsNull_HOST_NAME = 1 AND ""HOST_NAME"" IS NULL) OR (""HOST_NAME"" = :Original_HOST_NAME)) AND ((:IsNull_MAC_ADDRESS = 1 AND ""MAC_ADDRESS"" IS NULL) OR (""MAC_ADDRESS"" = :Original_MAC_ADDRESS)) AND ((:IsNull_CREATE_USER = 1 AND ""CREATE_USER"" IS NULL) OR (""CREATE_USER"" = :Original_CREATE_USER)) AND ((:IsNull_CREATE_DTM = 1 AND ""CREATE_DTM"" IS NULL) OR (""CREATE_DTM"" = :Original_CREATE_DTM)) AND ((:IsNull_MODI_USER = 1 AND ""MODI_USER"" IS NULL) OR (""MODI_USER"" = :Original_MODI_USER)) AND ((:IsNull_MODI_DTM = 1 AND ""MODI_DTM"" IS NULL) OR (""MODI_DTM"" = :Original_MODI_DTM)) AND ((:IsNull_STORE_NO = 1 AND ""STORE_NO"" IS NULL) OR (""STORE_NO"" = :Original_STORE_NO)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MACHINE_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MACHINE_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IP_ADDRESS", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "IP_ADDRESS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HOST_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "HOST_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HOST_NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "HOST_NAME", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MAC_ADDRESS", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MAC_ADDRESS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CREATE_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CREATE_USER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CREATE_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "CREATE_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MODI_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MODI_USER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MODI_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "MODI_DTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("STORE_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "STORE_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MACHINE_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MACHINE_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_IP_ADDRESS", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "IP_ADDRESS", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_IP_ADDRESS", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "IP_ADDRESS", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_HOST_NO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "HOST_NO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_HOST_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "HOST_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_HOST_NAME", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "HOST_NAME", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_HOST_NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "HOST_NAME", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_MAC_ADDRESS", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "MAC_ADDRESS", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MAC_ADDRESS", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MAC_ADDRESS", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_CREATE_USER", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "CREATE_USER", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CREATE_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CREATE_USER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_CREATE_DTM", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "CREATE_DTM", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CREATE_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "CREATE_DTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_MODI_USER", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "MODI_USER", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MODI_USER", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MODI_USER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_MODI_DTM", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "MODI_DTM", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MODI_DTM", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "MODI_DTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_STORE_NO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "STORE_NO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_STORE_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "STORE_NO", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::FET.POS.Model.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MACHINE_ID, IP_ADDRESS, HOST_NO, HOST_NAME, MAC_ADDRESS, CREATE_USER, CREA" +
                "TE_DTM, MODI_USER, MODI_DTM, STORE_NO FROM WEBPOS.STORE_TERMINATING_MACHINE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(OPT05_HqInvoiceAssign_DTO.STORE_TERMINATING_MACHINEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual OPT05_HqInvoiceAssign_DTO.STORE_TERMINATING_MACHINEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            OPT05_HqInvoiceAssign_DTO.STORE_TERMINATING_MACHINEDataTable dataTable = new OPT05_HqInvoiceAssign_DTO.STORE_TERMINATING_MACHINEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(OPT05_HqInvoiceAssign_DTO.STORE_TERMINATING_MACHINEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(OPT05_HqInvoiceAssign_DTO dataSet) {
            return this.Adapter.Update(dataSet, "STORE_TERMINATING_MACHINE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_MACHINE_ID, string Original_IP_ADDRESS, string Original_HOST_NO, string Original_HOST_NAME, string Original_MAC_ADDRESS, string Original_CREATE_USER, global::System.Nullable<global::System.DateTime> Original_CREATE_DTM, string Original_MODI_USER, global::System.Nullable<global::System.DateTime> Original_MODI_DTM, string Original_STORE_NO) {
            if ((Original_MACHINE_ID == null)) {
                throw new global::System.ArgumentNullException("Original_MACHINE_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_MACHINE_ID));
            }
            if ((Original_IP_ADDRESS == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_IP_ADDRESS));
            }
            if ((Original_HOST_NO == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_HOST_NO));
            }
            if ((Original_HOST_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_HOST_NAME));
            }
            if ((Original_MAC_ADDRESS == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_MAC_ADDRESS));
            }
            if ((Original_CREATE_USER == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_CREATE_USER));
            }
            if ((Original_CREATE_DTM.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_CREATE_DTM.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_MODI_USER == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_MODI_USER));
            }
            if ((Original_MODI_DTM.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((System.DateTime)(Original_MODI_DTM.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_STORE_NO == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_STORE_NO));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MACHINE_ID, string IP_ADDRESS, string HOST_NO, string HOST_NAME, string MAC_ADDRESS, string CREATE_USER, global::System.Nullable<global::System.DateTime> CREATE_DTM, string MODI_USER, global::System.Nullable<global::System.DateTime> MODI_DTM, string STORE_NO) {
            if ((MACHINE_ID == null)) {
                throw new global::System.ArgumentNullException("MACHINE_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MACHINE_ID));
            }
            if ((IP_ADDRESS == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(IP_ADDRESS));
            }
            if ((HOST_NO == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(HOST_NO));
            }
            if ((HOST_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(HOST_NAME));
            }
            if ((MAC_ADDRESS == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(MAC_ADDRESS));
            }
            if ((CREATE_USER == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(CREATE_USER));
            }
            if ((CREATE_DTM.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(CREATE_DTM.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((MODI_USER == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(MODI_USER));
            }
            if ((MODI_DTM.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(MODI_DTM.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((STORE_NO == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(STORE_NO));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string MACHINE_ID, 
                    string IP_ADDRESS, 
                    string HOST_NO, 
                    string HOST_NAME, 
                    string MAC_ADDRESS, 
                    string CREATE_USER, 
                    global::System.Nullable<global::System.DateTime> CREATE_DTM, 
                    string MODI_USER, 
                    global::System.Nullable<global::System.DateTime> MODI_DTM, 
                    string STORE_NO, 
                    string Original_MACHINE_ID, 
                    string Original_IP_ADDRESS, 
                    string Original_HOST_NO, 
                    string Original_HOST_NAME, 
                    string Original_MAC_ADDRESS, 
                    string Original_CREATE_USER, 
                    global::System.Nullable<global::System.DateTime> Original_CREATE_DTM, 
                    string Original_MODI_USER, 
                    global::System.Nullable<global::System.DateTime> Original_MODI_DTM, 
                    string Original_STORE_NO) {
            if ((MACHINE_ID == null)) {
                throw new global::System.ArgumentNullException("MACHINE_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MACHINE_ID));
            }
            if ((IP_ADDRESS == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(IP_ADDRESS));
            }
            if ((HOST_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(HOST_NO));
            }
            if ((HOST_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(HOST_NAME));
            }
            if ((MAC_ADDRESS == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(MAC_ADDRESS));
            }
            if ((CREATE_USER == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(CREATE_USER));
            }
            if ((CREATE_DTM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(CREATE_DTM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((MODI_USER == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(MODI_USER));
            }
            if ((MODI_DTM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(MODI_DTM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((STORE_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(STORE_NO));
            }
            if ((Original_MACHINE_ID == null)) {
                throw new global::System.ArgumentNullException("Original_MACHINE_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_MACHINE_ID));
            }
            if ((Original_IP_ADDRESS == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_IP_ADDRESS));
            }
            if ((Original_HOST_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_HOST_NO));
            }
            if ((Original_HOST_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_HOST_NAME));
            }
            if ((Original_MAC_ADDRESS == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_MAC_ADDRESS));
            }
            if ((Original_CREATE_USER == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_CREATE_USER));
            }
            if ((Original_CREATE_DTM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((System.DateTime)(Original_CREATE_DTM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_MODI_USER == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_MODI_USER));
            }
            if ((Original_MODI_DTM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((System.DateTime)(Original_MODI_DTM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_STORE_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_STORE_NO));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string IP_ADDRESS, 
                    string HOST_NO, 
                    string HOST_NAME, 
                    string MAC_ADDRESS, 
                    string CREATE_USER, 
                    global::System.Nullable<global::System.DateTime> CREATE_DTM, 
                    string MODI_USER, 
                    global::System.Nullable<global::System.DateTime> MODI_DTM, 
                    string STORE_NO, 
                    string Original_MACHINE_ID, 
                    string Original_IP_ADDRESS, 
                    string Original_HOST_NO, 
                    string Original_HOST_NAME, 
                    string Original_MAC_ADDRESS, 
                    string Original_CREATE_USER, 
                    global::System.Nullable<global::System.DateTime> Original_CREATE_DTM, 
                    string Original_MODI_USER, 
                    global::System.Nullable<global::System.DateTime> Original_MODI_DTM, 
                    string Original_STORE_NO) {
            return this.Update(Original_MACHINE_ID, IP_ADDRESS, HOST_NO, HOST_NAME, MAC_ADDRESS, CREATE_USER, CREATE_DTM, MODI_USER, MODI_DTM, STORE_NO, Original_MACHINE_ID, Original_IP_ADDRESS, Original_HOST_NO, Original_HOST_NAME, Original_MAC_ADDRESS, Original_CREATE_USER, Original_CREATE_DTM, Original_MODI_USER, Original_MODI_DTM, Original_STORE_NO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class UPLOAD_TEMPTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UPLOAD_TEMPTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "UPLOAD_TEMP";
            tableMapping.ColumnMappings.Add("BATCH_NO", "BATCH_NO");
            tableMapping.ColumnMappings.Add("USER_ID", "USER_ID");
            tableMapping.ColumnMappings.Add("FINC_ID", "FINC_ID");
            tableMapping.ColumnMappings.Add("STATUS", "STATUS");
            tableMapping.ColumnMappings.Add("F1", "F1");
            tableMapping.ColumnMappings.Add("F2", "F2");
            tableMapping.ColumnMappings.Add("F3", "F3");
            tableMapping.ColumnMappings.Add("F4", "F4");
            tableMapping.ColumnMappings.Add("F5", "F5");
            tableMapping.ColumnMappings.Add("F6", "F6");
            tableMapping.ColumnMappings.Add("F7", "F7");
            tableMapping.ColumnMappings.Add("F8", "F8");
            tableMapping.ColumnMappings.Add("F9", "F9");
            tableMapping.ColumnMappings.Add("F10", "F10");
            tableMapping.ColumnMappings.Add("F11", "F11");
            tableMapping.ColumnMappings.Add("F12", "F12");
            tableMapping.ColumnMappings.Add("F13", "F13");
            tableMapping.ColumnMappings.Add("F14", "F14");
            tableMapping.ColumnMappings.Add("F15", "F15");
            tableMapping.ColumnMappings.Add("F16", "F16");
            tableMapping.ColumnMappings.Add("F17", "F17");
            tableMapping.ColumnMappings.Add("F18", "F18");
            tableMapping.ColumnMappings.Add("F19", "F19");
            tableMapping.ColumnMappings.Add("F20", "F20");
            tableMapping.ColumnMappings.Add("F21", "F21");
            tableMapping.ColumnMappings.Add("F22", "F22");
            tableMapping.ColumnMappings.Add("F23", "F23");
            tableMapping.ColumnMappings.Add("F24", "F24");
            tableMapping.ColumnMappings.Add("F25", "F25");
            tableMapping.ColumnMappings.Add("F26", "F26");
            tableMapping.ColumnMappings.Add("F27", "F27");
            tableMapping.ColumnMappings.Add("F28", "F28");
            tableMapping.ColumnMappings.Add("F29", "F29");
            tableMapping.ColumnMappings.Add("F30", "F30");
            tableMapping.ColumnMappings.Add("SID", "SID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""WEBPOS"".""UPLOAD_TEMP"" (""BATCH_NO"", ""USER_ID"", ""FINC_ID"", ""STATUS"", ""F1"", ""F2"", ""F3"", ""F4"", ""F5"", ""F6"", ""F7"", ""F8"", ""F9"", ""F10"", ""F11"", ""F12"", ""F13"", ""F14"", ""F15"", ""F16"", ""F17"", ""F18"", ""F19"", ""F20"", ""F21"", ""F22"", ""F23"", ""F24"", ""F25"", ""F26"", ""F27"", ""F28"", ""F29"", ""F30"", ""SID"") VALUES (:BATCH_NO, :USER_ID, :FINC_ID, :STATUS, :F1, :F2, :F3, :F4, :F5, :F6, :F7, :F8, :F9, :F10, :F11, :F12, :F13, :F14, :F15, :F16, :F17, :F18, :F19, :F20, :F21, :F22, :F23, :F24, :F25, :F26, :F27, :F28, :F29, :F30, :SID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BATCH_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "BATCH_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("USER_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "USER_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FINC_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "FINC_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("STATUS", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "STATUS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F1", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F2", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F3", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F3", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F4", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F4", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F5", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F5", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F6", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F6", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F7", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F7", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F8", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F8", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F9", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F9", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F10", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F10", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F11", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F11", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F12", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F12", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F13", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F13", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F14", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F14", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F15", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F15", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F16", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F16", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F17", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F17", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F18", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F18", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F19", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F19", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F20", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F20", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F21", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F21", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F22", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F22", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F23", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F23", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F24", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F24", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F25", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F25", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F26", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F26", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F27", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F27", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F28", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F28", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F29", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F29", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("F30", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "F30", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "SID", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::FET.POS.Model.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT BATCH_NO, USER_ID, FINC_ID, STATUS, F1, F2, F3, F4, F5, F6, F7, F8, F9, F1" +
                "0, F11, F12, F13, F14, F15, F16, F17, F18, F19, F20, F21, F22, F23, F24, F25, F2" +
                "6, F27, F28, F29, F30, SID FROM WEBPOS.UPLOAD_TEMP";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(OPT05_HqInvoiceAssign_DTO.UPLOAD_TEMPDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual OPT05_HqInvoiceAssign_DTO.UPLOAD_TEMPDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            OPT05_HqInvoiceAssign_DTO.UPLOAD_TEMPDataTable dataTable = new OPT05_HqInvoiceAssign_DTO.UPLOAD_TEMPDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(OPT05_HqInvoiceAssign_DTO.UPLOAD_TEMPDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(OPT05_HqInvoiceAssign_DTO dataSet) {
            return this.Adapter.Update(dataSet, "UPLOAD_TEMP");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string BATCH_NO, 
                    string USER_ID, 
                    string FINC_ID, 
                    string STATUS, 
                    string F1, 
                    string F2, 
                    string F3, 
                    string F4, 
                    string F5, 
                    string F6, 
                    string F7, 
                    string F8, 
                    string F9, 
                    string F10, 
                    string F11, 
                    string F12, 
                    string F13, 
                    string F14, 
                    string F15, 
                    string F16, 
                    string F17, 
                    string F18, 
                    string F19, 
                    string F20, 
                    string F21, 
                    string F22, 
                    string F23, 
                    string F24, 
                    string F25, 
                    string F26, 
                    string F27, 
                    string F28, 
                    string F29, 
                    string F30, 
                    string SID) {
            if ((BATCH_NO == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(BATCH_NO));
            }
            if ((USER_ID == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(USER_ID));
            }
            if ((FINC_ID == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(FINC_ID));
            }
            if ((STATUS == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(STATUS));
            }
            if ((F1 == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(F1));
            }
            if ((F2 == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(F2));
            }
            if ((F3 == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(F3));
            }
            if ((F4 == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(F4));
            }
            if ((F5 == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(F5));
            }
            if ((F6 == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(F6));
            }
            if ((F7 == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(F7));
            }
            if ((F8 == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(F8));
            }
            if ((F9 == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(F9));
            }
            if ((F10 == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(F10));
            }
            if ((F11 == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(F11));
            }
            if ((F12 == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(F12));
            }
            if ((F13 == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(F13));
            }
            if ((F14 == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(F14));
            }
            if ((F15 == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(F15));
            }
            if ((F16 == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(F16));
            }
            if ((F17 == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(F17));
            }
            if ((F18 == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(F18));
            }
            if ((F19 == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(F19));
            }
            if ((F20 == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(F20));
            }
            if ((F21 == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(F21));
            }
            if ((F22 == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(F22));
            }
            if ((F23 == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(F23));
            }
            if ((F24 == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(F24));
            }
            if ((F25 == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(F25));
            }
            if ((F26 == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(F26));
            }
            if ((F27 == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(F27));
            }
            if ((F28 == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(F28));
            }
            if ((F29 == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(F29));
            }
            if ((F30 == null)) {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(F30));
            }
            if ((SID == null)) {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(SID));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private HQ_INVOICE_ASSIGN_TEMPTableAdapter _hQ_INVOICE_ASSIGN_TEMPTableAdapter;
        
        private STORE_INVOICE_ASSIGNTableAdapter _sTORE_INVOICE_ASSIGNTableAdapter;
        
        private HQ_INVOICE_ASSIGNTableAdapter _hQ_INVOICE_ASSIGNTableAdapter;
        
        private STORE_TERMINATING_MACHINETableAdapter _sTORE_TERMINATING_MACHINETableAdapter;
        
        private UPLOAD_TEMPTableAdapter _uPLOAD_TEMPTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public HQ_INVOICE_ASSIGN_TEMPTableAdapter HQ_INVOICE_ASSIGN_TEMPTableAdapter {
            get {
                return this._hQ_INVOICE_ASSIGN_TEMPTableAdapter;
            }
            set {
                this._hQ_INVOICE_ASSIGN_TEMPTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public STORE_INVOICE_ASSIGNTableAdapter STORE_INVOICE_ASSIGNTableAdapter {
            get {
                return this._sTORE_INVOICE_ASSIGNTableAdapter;
            }
            set {
                this._sTORE_INVOICE_ASSIGNTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public HQ_INVOICE_ASSIGNTableAdapter HQ_INVOICE_ASSIGNTableAdapter {
            get {
                return this._hQ_INVOICE_ASSIGNTableAdapter;
            }
            set {
                this._hQ_INVOICE_ASSIGNTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public STORE_TERMINATING_MACHINETableAdapter STORE_TERMINATING_MACHINETableAdapter {
            get {
                return this._sTORE_TERMINATING_MACHINETableAdapter;
            }
            set {
                this._sTORE_TERMINATING_MACHINETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public UPLOAD_TEMPTableAdapter UPLOAD_TEMPTableAdapter {
            get {
                return this._uPLOAD_TEMPTableAdapter;
            }
            set {
                this._uPLOAD_TEMPTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._hQ_INVOICE_ASSIGN_TEMPTableAdapter != null) 
                            && (this._hQ_INVOICE_ASSIGN_TEMPTableAdapter.Connection != null))) {
                    return this._hQ_INVOICE_ASSIGN_TEMPTableAdapter.Connection;
                }
                if (((this._sTORE_INVOICE_ASSIGNTableAdapter != null) 
                            && (this._sTORE_INVOICE_ASSIGNTableAdapter.Connection != null))) {
                    return this._sTORE_INVOICE_ASSIGNTableAdapter.Connection;
                }
                if (((this._hQ_INVOICE_ASSIGNTableAdapter != null) 
                            && (this._hQ_INVOICE_ASSIGNTableAdapter.Connection != null))) {
                    return this._hQ_INVOICE_ASSIGNTableAdapter.Connection;
                }
                if (((this._sTORE_TERMINATING_MACHINETableAdapter != null) 
                            && (this._sTORE_TERMINATING_MACHINETableAdapter.Connection != null))) {
                    return this._sTORE_TERMINATING_MACHINETableAdapter.Connection;
                }
                if (((this._uPLOAD_TEMPTableAdapter != null) 
                            && (this._uPLOAD_TEMPTableAdapter.Connection != null))) {
                    return this._uPLOAD_TEMPTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._hQ_INVOICE_ASSIGN_TEMPTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sTORE_INVOICE_ASSIGNTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._hQ_INVOICE_ASSIGNTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sTORE_TERMINATING_MACHINETableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._uPLOAD_TEMPTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(OPT05_HqInvoiceAssign_DTO dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._sTORE_TERMINATING_MACHINETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.STORE_TERMINATING_MACHINE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sTORE_TERMINATING_MACHINETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._uPLOAD_TEMPTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.UPLOAD_TEMP.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._uPLOAD_TEMPTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._hQ_INVOICE_ASSIGNTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.HQ_INVOICE_ASSIGN.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._hQ_INVOICE_ASSIGNTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._hQ_INVOICE_ASSIGN_TEMPTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.HQ_INVOICE_ASSIGN_TEMP.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._hQ_INVOICE_ASSIGN_TEMPTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sTORE_INVOICE_ASSIGNTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.STORE_INVOICE_ASSIGN.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sTORE_INVOICE_ASSIGNTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(OPT05_HqInvoiceAssign_DTO dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._sTORE_TERMINATING_MACHINETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.STORE_TERMINATING_MACHINE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sTORE_TERMINATING_MACHINETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._uPLOAD_TEMPTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.UPLOAD_TEMP.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._uPLOAD_TEMPTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._hQ_INVOICE_ASSIGNTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.HQ_INVOICE_ASSIGN.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._hQ_INVOICE_ASSIGNTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._hQ_INVOICE_ASSIGN_TEMPTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.HQ_INVOICE_ASSIGN_TEMP.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._hQ_INVOICE_ASSIGN_TEMPTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sTORE_INVOICE_ASSIGNTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.STORE_INVOICE_ASSIGN.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sTORE_INVOICE_ASSIGNTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(OPT05_HqInvoiceAssign_DTO dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._sTORE_INVOICE_ASSIGNTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.STORE_INVOICE_ASSIGN.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sTORE_INVOICE_ASSIGNTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._hQ_INVOICE_ASSIGN_TEMPTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.HQ_INVOICE_ASSIGN_TEMP.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._hQ_INVOICE_ASSIGN_TEMPTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._hQ_INVOICE_ASSIGNTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.HQ_INVOICE_ASSIGN.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._hQ_INVOICE_ASSIGNTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._uPLOAD_TEMPTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.UPLOAD_TEMP.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._uPLOAD_TEMPTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sTORE_TERMINATING_MACHINETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.STORE_TERMINATING_MACHINE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sTORE_TERMINATING_MACHINETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(OPT05_HqInvoiceAssign_DTO dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._hQ_INVOICE_ASSIGN_TEMPTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._hQ_INVOICE_ASSIGN_TEMPTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._sTORE_INVOICE_ASSIGNTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sTORE_INVOICE_ASSIGNTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._hQ_INVOICE_ASSIGNTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._hQ_INVOICE_ASSIGNTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._sTORE_TERMINATING_MACHINETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sTORE_TERMINATING_MACHINETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._uPLOAD_TEMPTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._uPLOAD_TEMPTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager 未包含連接資訊。請將每個 TableAdapterManager 的 TableAdapter 屬性設成有效的 Table" +
                        "Adapter 執行個體。");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("無法開始交易。目前的資料連接不支援交易或是目前的狀態不允許交易開始。");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._hQ_INVOICE_ASSIGN_TEMPTableAdapter != null)) {
                    revertConnections.Add(this._hQ_INVOICE_ASSIGN_TEMPTableAdapter, this._hQ_INVOICE_ASSIGN_TEMPTableAdapter.Connection);
                    this._hQ_INVOICE_ASSIGN_TEMPTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(workConnection));
                    this._hQ_INVOICE_ASSIGN_TEMPTableAdapter.Transaction = ((global::System.Data.OracleClient.OracleTransaction)(workTransaction));
                    if (this._hQ_INVOICE_ASSIGN_TEMPTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._hQ_INVOICE_ASSIGN_TEMPTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._hQ_INVOICE_ASSIGN_TEMPTableAdapter.Adapter);
                    }
                }
                if ((this._sTORE_INVOICE_ASSIGNTableAdapter != null)) {
                    revertConnections.Add(this._sTORE_INVOICE_ASSIGNTableAdapter, this._sTORE_INVOICE_ASSIGNTableAdapter.Connection);
                    this._sTORE_INVOICE_ASSIGNTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(workConnection));
                    this._sTORE_INVOICE_ASSIGNTableAdapter.Transaction = ((global::System.Data.OracleClient.OracleTransaction)(workTransaction));
                    if (this._sTORE_INVOICE_ASSIGNTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sTORE_INVOICE_ASSIGNTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sTORE_INVOICE_ASSIGNTableAdapter.Adapter);
                    }
                }
                if ((this._hQ_INVOICE_ASSIGNTableAdapter != null)) {
                    revertConnections.Add(this._hQ_INVOICE_ASSIGNTableAdapter, this._hQ_INVOICE_ASSIGNTableAdapter.Connection);
                    this._hQ_INVOICE_ASSIGNTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(workConnection));
                    this._hQ_INVOICE_ASSIGNTableAdapter.Transaction = ((global::System.Data.OracleClient.OracleTransaction)(workTransaction));
                    if (this._hQ_INVOICE_ASSIGNTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._hQ_INVOICE_ASSIGNTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._hQ_INVOICE_ASSIGNTableAdapter.Adapter);
                    }
                }
                if ((this._sTORE_TERMINATING_MACHINETableAdapter != null)) {
                    revertConnections.Add(this._sTORE_TERMINATING_MACHINETableAdapter, this._sTORE_TERMINATING_MACHINETableAdapter.Connection);
                    this._sTORE_TERMINATING_MACHINETableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(workConnection));
                    this._sTORE_TERMINATING_MACHINETableAdapter.Transaction = ((global::System.Data.OracleClient.OracleTransaction)(workTransaction));
                    if (this._sTORE_TERMINATING_MACHINETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sTORE_TERMINATING_MACHINETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sTORE_TERMINATING_MACHINETableAdapter.Adapter);
                    }
                }
                if ((this._uPLOAD_TEMPTableAdapter != null)) {
                    revertConnections.Add(this._uPLOAD_TEMPTableAdapter, this._uPLOAD_TEMPTableAdapter.Connection);
                    this._uPLOAD_TEMPTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(workConnection));
                    this._uPLOAD_TEMPTableAdapter.Transaction = ((global::System.Data.OracleClient.OracleTransaction)(workTransaction));
                    if (this._uPLOAD_TEMPTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._uPLOAD_TEMPTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._uPLOAD_TEMPTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._hQ_INVOICE_ASSIGN_TEMPTableAdapter != null)) {
                    this._hQ_INVOICE_ASSIGN_TEMPTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(revertConnections[this._hQ_INVOICE_ASSIGN_TEMPTableAdapter]));
                    this._hQ_INVOICE_ASSIGN_TEMPTableAdapter.Transaction = null;
                }
                if ((this._sTORE_INVOICE_ASSIGNTableAdapter != null)) {
                    this._sTORE_INVOICE_ASSIGNTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(revertConnections[this._sTORE_INVOICE_ASSIGNTableAdapter]));
                    this._sTORE_INVOICE_ASSIGNTableAdapter.Transaction = null;
                }
                if ((this._hQ_INVOICE_ASSIGNTableAdapter != null)) {
                    this._hQ_INVOICE_ASSIGNTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(revertConnections[this._hQ_INVOICE_ASSIGNTableAdapter]));
                    this._hQ_INVOICE_ASSIGNTableAdapter.Transaction = null;
                }
                if ((this._sTORE_TERMINATING_MACHINETableAdapter != null)) {
                    this._sTORE_TERMINATING_MACHINETableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(revertConnections[this._sTORE_TERMINATING_MACHINETableAdapter]));
                    this._sTORE_TERMINATING_MACHINETableAdapter.Transaction = null;
                }
                if ((this._uPLOAD_TEMPTableAdapter != null)) {
                    this._uPLOAD_TEMPTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(revertConnections[this._uPLOAD_TEMPTableAdapter]));
                    this._uPLOAD_TEMPTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591