//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:2.0.50727.4206
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace FET.POS.Model.DTO {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("LOG04_SysPara_DTO")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class LOG04_SysPara_DTO : global::System.Data.DataSet {
        
        private SYS_PARADataTable tableSYS_PARA;
        
        private SYS_PARA_TYPEDataTable tableSYS_PARA_TYPE;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public LOG04_SysPara_DTO() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected LOG04_SysPara_DTO(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["SYS_PARA"] != null)) {
                    base.Tables.Add(new SYS_PARADataTable(ds.Tables["SYS_PARA"]));
                }
                if ((ds.Tables["SYS_PARA_TYPE"] != null)) {
                    base.Tables.Add(new SYS_PARA_TYPEDataTable(ds.Tables["SYS_PARA_TYPE"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SYS_PARADataTable SYS_PARA {
            get {
                return this.tableSYS_PARA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SYS_PARA_TYPEDataTable SYS_PARA_TYPE {
            get {
                return this.tableSYS_PARA_TYPE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            LOG04_SysPara_DTO cln = ((LOG04_SysPara_DTO)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["SYS_PARA"] != null)) {
                    base.Tables.Add(new SYS_PARADataTable(ds.Tables["SYS_PARA"]));
                }
                if ((ds.Tables["SYS_PARA_TYPE"] != null)) {
                    base.Tables.Add(new SYS_PARA_TYPEDataTable(ds.Tables["SYS_PARA_TYPE"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableSYS_PARA = ((SYS_PARADataTable)(base.Tables["SYS_PARA"]));
            if ((initTable == true)) {
                if ((this.tableSYS_PARA != null)) {
                    this.tableSYS_PARA.InitVars();
                }
            }
            this.tableSYS_PARA_TYPE = ((SYS_PARA_TYPEDataTable)(base.Tables["SYS_PARA_TYPE"]));
            if ((initTable == true)) {
                if ((this.tableSYS_PARA_TYPE != null)) {
                    this.tableSYS_PARA_TYPE.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "LOG04_SysPara_DTO";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/LOG04_SysPara_DTO.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSYS_PARA = new SYS_PARADataTable();
            base.Tables.Add(this.tableSYS_PARA);
            this.tableSYS_PARA_TYPE = new SYS_PARA_TYPEDataTable();
            base.Tables.Add(this.tableSYS_PARA_TYPE);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSYS_PARA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSYS_PARA_TYPE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            LOG04_SysPara_DTO ds = new LOG04_SysPara_DTO();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void SYS_PARARowChangeEventHandler(object sender, SYS_PARARowChangeEvent e);
        
        public delegate void SYS_PARA_TYPERowChangeEventHandler(object sender, SYS_PARA_TYPERowChangeEvent e);
        

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SYS_PARADataTable : global::System.Data.TypedTableBase<SYS_PARARow> {
            
            private global::System.Data.DataColumn columnPARA_ID;
            
            private global::System.Data.DataColumn columnPARA_KEY;
            
            private global::System.Data.DataColumn columnPARA_VALUE;
            
            private global::System.Data.DataColumn columnPARA_NAME;
            
            private global::System.Data.DataColumn columnPARA_DESC;
            
            private global::System.Data.DataColumn columnCREATE_USER;
            
            private global::System.Data.DataColumn columnCREATE_DTM;
            
            private global::System.Data.DataColumn columnMODI_USER;
            
            private global::System.Data.DataColumn columnMODI_DTM;
            
            private global::System.Data.DataColumn columnSYS_PARA_TYPE_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SYS_PARADataTable() {
                this.TableName = "SYS_PARA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SYS_PARADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SYS_PARADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PARA_IDColumn {
                get {
                    return this.columnPARA_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PARA_KEYColumn {
                get {
                    return this.columnPARA_KEY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PARA_VALUEColumn {
                get {
                    return this.columnPARA_VALUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PARA_NAMEColumn {
                get {
                    return this.columnPARA_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PARA_DESCColumn {
                get {
                    return this.columnPARA_DESC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_USERColumn {
                get {
                    return this.columnCREATE_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_DTMColumn {
                get {
                    return this.columnCREATE_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODI_USERColumn {
                get {
                    return this.columnMODI_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODI_DTMColumn {
                get {
                    return this.columnMODI_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SYS_PARA_TYPE_IDColumn {
                get {
                    return this.columnSYS_PARA_TYPE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SYS_PARARow this[int index] {
                get {
                    return ((SYS_PARARow)(this.Rows[index]));
                }
            }
            
            public event SYS_PARARowChangeEventHandler SYS_PARARowChanging;
            
            public event SYS_PARARowChangeEventHandler SYS_PARARowChanged;
            
            public event SYS_PARARowChangeEventHandler SYS_PARARowDeleting;
            
            public event SYS_PARARowChangeEventHandler SYS_PARARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSYS_PARARow(SYS_PARARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SYS_PARARow AddSYS_PARARow(string PARA_ID, string PARA_KEY, string PARA_VALUE, string PARA_NAME, string PARA_DESC, string CREATE_USER, System.DateTime CREATE_DTM, string MODI_USER, System.DateTime MODI_DTM, string SYS_PARA_TYPE_ID) {
                SYS_PARARow rowSYS_PARARow = ((SYS_PARARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PARA_ID,
                        PARA_KEY,
                        PARA_VALUE,
                        PARA_NAME,
                        PARA_DESC,
                        CREATE_USER,
                        CREATE_DTM,
                        MODI_USER,
                        MODI_DTM,
                        SYS_PARA_TYPE_ID};
                rowSYS_PARARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSYS_PARARow);
                return rowSYS_PARARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SYS_PARARow FindByPARA_IDSYS_PARA_TYPE_ID(string PARA_ID, string SYS_PARA_TYPE_ID) {
                return ((SYS_PARARow)(this.Rows.Find(new object[] {
                            PARA_ID,
                            SYS_PARA_TYPE_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SYS_PARADataTable cln = ((SYS_PARADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SYS_PARADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPARA_ID = base.Columns["PARA_ID"];
                this.columnPARA_KEY = base.Columns["PARA_KEY"];
                this.columnPARA_VALUE = base.Columns["PARA_VALUE"];
                this.columnPARA_NAME = base.Columns["PARA_NAME"];
                this.columnPARA_DESC = base.Columns["PARA_DESC"];
                this.columnCREATE_USER = base.Columns["CREATE_USER"];
                this.columnCREATE_DTM = base.Columns["CREATE_DTM"];
                this.columnMODI_USER = base.Columns["MODI_USER"];
                this.columnMODI_DTM = base.Columns["MODI_DTM"];
                this.columnSYS_PARA_TYPE_ID = base.Columns["SYS_PARA_TYPE_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPARA_ID = new global::System.Data.DataColumn("PARA_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPARA_ID);
                this.columnPARA_KEY = new global::System.Data.DataColumn("PARA_KEY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPARA_KEY);
                this.columnPARA_VALUE = new global::System.Data.DataColumn("PARA_VALUE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPARA_VALUE);
                this.columnPARA_NAME = new global::System.Data.DataColumn("PARA_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPARA_NAME);
                this.columnPARA_DESC = new global::System.Data.DataColumn("PARA_DESC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPARA_DESC);
                this.columnCREATE_USER = new global::System.Data.DataColumn("CREATE_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_USER);
                this.columnCREATE_DTM = new global::System.Data.DataColumn("CREATE_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_DTM);
                this.columnMODI_USER = new global::System.Data.DataColumn("MODI_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODI_USER);
                this.columnMODI_DTM = new global::System.Data.DataColumn("MODI_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODI_DTM);
                this.columnSYS_PARA_TYPE_ID = new global::System.Data.DataColumn("SYS_PARA_TYPE_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSYS_PARA_TYPE_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPARA_ID,
                                this.columnSYS_PARA_TYPE_ID}, true));
                this.columnPARA_ID.AllowDBNull = false;
                this.columnPARA_ID.MaxLength = 32;
                this.columnPARA_KEY.AllowDBNull = false;
                this.columnPARA_KEY.MaxLength = 50;
                this.columnPARA_VALUE.AllowDBNull = false;
                this.columnPARA_VALUE.MaxLength = 250;
                this.columnPARA_NAME.AllowDBNull = false;
                this.columnPARA_NAME.MaxLength = 250;
                this.columnPARA_DESC.MaxLength = 250;
                this.columnCREATE_USER.AllowDBNull = false;
                this.columnCREATE_USER.MaxLength = 50;
                this.columnCREATE_DTM.AllowDBNull = false;
                this.columnMODI_USER.AllowDBNull = false;
                this.columnMODI_USER.MaxLength = 50;
                this.columnMODI_DTM.AllowDBNull = false;
                this.columnSYS_PARA_TYPE_ID.AllowDBNull = false;
                this.columnSYS_PARA_TYPE_ID.MaxLength = 32;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SYS_PARARow NewSYS_PARARow() {
                return ((SYS_PARARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SYS_PARARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SYS_PARARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SYS_PARARowChanged != null)) {
                    this.SYS_PARARowChanged(this, new SYS_PARARowChangeEvent(((SYS_PARARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SYS_PARARowChanging != null)) {
                    this.SYS_PARARowChanging(this, new SYS_PARARowChangeEvent(((SYS_PARARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SYS_PARARowDeleted != null)) {
                    this.SYS_PARARowDeleted(this, new SYS_PARARowChangeEvent(((SYS_PARARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SYS_PARARowDeleting != null)) {
                    this.SYS_PARARowDeleting(this, new SYS_PARARowChangeEvent(((SYS_PARARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSYS_PARARow(SYS_PARARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LOG04_SysPara_DTO ds = new LOG04_SysPara_DTO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SYS_PARADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SYS_PARA_TYPEDataTable : global::System.Data.TypedTableBase<SYS_PARA_TYPERow> {
            
            private global::System.Data.DataColumn columnSYS_PARA_TYPE_ID;
            
            private global::System.Data.DataColumn columnSYS_PARA_TYPE_NAME;
            
            private global::System.Data.DataColumn columnCREATE_USER;
            
            private global::System.Data.DataColumn columnCREATE_DTM;
            
            private global::System.Data.DataColumn columnMODI_USER;
            
            private global::System.Data.DataColumn columnMODI_DTM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SYS_PARA_TYPEDataTable() {
                this.TableName = "SYS_PARA_TYPE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SYS_PARA_TYPEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SYS_PARA_TYPEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SYS_PARA_TYPE_IDColumn {
                get {
                    return this.columnSYS_PARA_TYPE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SYS_PARA_TYPE_NAMEColumn {
                get {
                    return this.columnSYS_PARA_TYPE_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_USERColumn {
                get {
                    return this.columnCREATE_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_DTMColumn {
                get {
                    return this.columnCREATE_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODI_USERColumn {
                get {
                    return this.columnMODI_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODI_DTMColumn {
                get {
                    return this.columnMODI_DTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SYS_PARA_TYPERow this[int index] {
                get {
                    return ((SYS_PARA_TYPERow)(this.Rows[index]));
                }
            }
            
            public event SYS_PARA_TYPERowChangeEventHandler SYS_PARA_TYPERowChanging;
            
            public event SYS_PARA_TYPERowChangeEventHandler SYS_PARA_TYPERowChanged;
            
            public event SYS_PARA_TYPERowChangeEventHandler SYS_PARA_TYPERowDeleting;
            
            public event SYS_PARA_TYPERowChangeEventHandler SYS_PARA_TYPERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSYS_PARA_TYPERow(SYS_PARA_TYPERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SYS_PARA_TYPERow AddSYS_PARA_TYPERow(string SYS_PARA_TYPE_ID, string SYS_PARA_TYPE_NAME, string CREATE_USER, System.DateTime CREATE_DTM, string MODI_USER, System.DateTime MODI_DTM) {
                SYS_PARA_TYPERow rowSYS_PARA_TYPERow = ((SYS_PARA_TYPERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SYS_PARA_TYPE_ID,
                        SYS_PARA_TYPE_NAME,
                        CREATE_USER,
                        CREATE_DTM,
                        MODI_USER,
                        MODI_DTM};
                rowSYS_PARA_TYPERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSYS_PARA_TYPERow);
                return rowSYS_PARA_TYPERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SYS_PARA_TYPERow FindBySYS_PARA_TYPE_ID(string SYS_PARA_TYPE_ID) {
                return ((SYS_PARA_TYPERow)(this.Rows.Find(new object[] {
                            SYS_PARA_TYPE_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SYS_PARA_TYPEDataTable cln = ((SYS_PARA_TYPEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SYS_PARA_TYPEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSYS_PARA_TYPE_ID = base.Columns["SYS_PARA_TYPE_ID"];
                this.columnSYS_PARA_TYPE_NAME = base.Columns["SYS_PARA_TYPE_NAME"];
                this.columnCREATE_USER = base.Columns["CREATE_USER"];
                this.columnCREATE_DTM = base.Columns["CREATE_DTM"];
                this.columnMODI_USER = base.Columns["MODI_USER"];
                this.columnMODI_DTM = base.Columns["MODI_DTM"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSYS_PARA_TYPE_ID = new global::System.Data.DataColumn("SYS_PARA_TYPE_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSYS_PARA_TYPE_ID);
                this.columnSYS_PARA_TYPE_NAME = new global::System.Data.DataColumn("SYS_PARA_TYPE_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSYS_PARA_TYPE_NAME);
                this.columnCREATE_USER = new global::System.Data.DataColumn("CREATE_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_USER);
                this.columnCREATE_DTM = new global::System.Data.DataColumn("CREATE_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_DTM);
                this.columnMODI_USER = new global::System.Data.DataColumn("MODI_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODI_USER);
                this.columnMODI_DTM = new global::System.Data.DataColumn("MODI_DTM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODI_DTM);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSYS_PARA_TYPE_ID}, true));
                this.columnSYS_PARA_TYPE_ID.AllowDBNull = false;
                this.columnSYS_PARA_TYPE_ID.Unique = true;
                this.columnSYS_PARA_TYPE_ID.MaxLength = 32;
                this.columnSYS_PARA_TYPE_NAME.MaxLength = 50;
                this.columnCREATE_USER.AllowDBNull = false;
                this.columnCREATE_USER.MaxLength = 50;
                this.columnCREATE_DTM.AllowDBNull = false;
                this.columnMODI_USER.AllowDBNull = false;
                this.columnMODI_USER.MaxLength = 50;
                this.columnMODI_DTM.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SYS_PARA_TYPERow NewSYS_PARA_TYPERow() {
                return ((SYS_PARA_TYPERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SYS_PARA_TYPERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SYS_PARA_TYPERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SYS_PARA_TYPERowChanged != null)) {
                    this.SYS_PARA_TYPERowChanged(this, new SYS_PARA_TYPERowChangeEvent(((SYS_PARA_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SYS_PARA_TYPERowChanging != null)) {
                    this.SYS_PARA_TYPERowChanging(this, new SYS_PARA_TYPERowChangeEvent(((SYS_PARA_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SYS_PARA_TYPERowDeleted != null)) {
                    this.SYS_PARA_TYPERowDeleted(this, new SYS_PARA_TYPERowChangeEvent(((SYS_PARA_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SYS_PARA_TYPERowDeleting != null)) {
                    this.SYS_PARA_TYPERowDeleting(this, new SYS_PARA_TYPERowChangeEvent(((SYS_PARA_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSYS_PARA_TYPERow(SYS_PARA_TYPERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LOG04_SysPara_DTO ds = new LOG04_SysPara_DTO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SYS_PARA_TYPEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SYS_PARARow : global::System.Data.DataRow {
            
            private SYS_PARADataTable tableSYS_PARA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SYS_PARARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSYS_PARA = ((SYS_PARADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PARA_ID {
                get {
                    return ((string)(this[this.tableSYS_PARA.PARA_IDColumn]));
                }
                set {
                    this[this.tableSYS_PARA.PARA_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PARA_KEY {
                get {
                    return ((string)(this[this.tableSYS_PARA.PARA_KEYColumn]));
                }
                set {
                    this[this.tableSYS_PARA.PARA_KEYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PARA_VALUE {
                get {
                    return ((string)(this[this.tableSYS_PARA.PARA_VALUEColumn]));
                }
                set {
                    this[this.tableSYS_PARA.PARA_VALUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PARA_NAME {
                get {
                    return ((string)(this[this.tableSYS_PARA.PARA_NAMEColumn]));
                }
                set {
                    this[this.tableSYS_PARA.PARA_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PARA_DESC {
                get {
                    try {
                        return ((string)(this[this.tableSYS_PARA.PARA_DESCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SYS_PARA\' 中資料行 \'PARA_DESC\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSYS_PARA.PARA_DESCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CREATE_USER {
                get {
                    return ((string)(this[this.tableSYS_PARA.CREATE_USERColumn]));
                }
                set {
                    this[this.tableSYS_PARA.CREATE_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CREATE_DTM {
                get {
                    return ((global::System.DateTime)(this[this.tableSYS_PARA.CREATE_DTMColumn]));
                }
                set {
                    this[this.tableSYS_PARA.CREATE_DTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODI_USER {
                get {
                    return ((string)(this[this.tableSYS_PARA.MODI_USERColumn]));
                }
                set {
                    this[this.tableSYS_PARA.MODI_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODI_DTM {
                get {
                    return ((global::System.DateTime)(this[this.tableSYS_PARA.MODI_DTMColumn]));
                }
                set {
                    this[this.tableSYS_PARA.MODI_DTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SYS_PARA_TYPE_ID {
                get {
                    return ((string)(this[this.tableSYS_PARA.SYS_PARA_TYPE_IDColumn]));
                }
                set {
                    this[this.tableSYS_PARA.SYS_PARA_TYPE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPARA_DESCNull() {
                return this.IsNull(this.tableSYS_PARA.PARA_DESCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPARA_DESCNull() {
                this[this.tableSYS_PARA.PARA_DESCColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SYS_PARA_TYPERow : global::System.Data.DataRow {
            
            private SYS_PARA_TYPEDataTable tableSYS_PARA_TYPE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SYS_PARA_TYPERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSYS_PARA_TYPE = ((SYS_PARA_TYPEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SYS_PARA_TYPE_ID {
                get {
                    return ((string)(this[this.tableSYS_PARA_TYPE.SYS_PARA_TYPE_IDColumn]));
                }
                set {
                    this[this.tableSYS_PARA_TYPE.SYS_PARA_TYPE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SYS_PARA_TYPE_NAME {
                get {
                    try {
                        return ((string)(this[this.tableSYS_PARA_TYPE.SYS_PARA_TYPE_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SYS_PARA_TYPE\' 中資料行 \'SYS_PARA_TYPE_NAME\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSYS_PARA_TYPE.SYS_PARA_TYPE_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CREATE_USER {
                get {
                    return ((string)(this[this.tableSYS_PARA_TYPE.CREATE_USERColumn]));
                }
                set {
                    this[this.tableSYS_PARA_TYPE.CREATE_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CREATE_DTM {
                get {
                    return ((global::System.DateTime)(this[this.tableSYS_PARA_TYPE.CREATE_DTMColumn]));
                }
                set {
                    this[this.tableSYS_PARA_TYPE.CREATE_DTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODI_USER {
                get {
                    return ((string)(this[this.tableSYS_PARA_TYPE.MODI_USERColumn]));
                }
                set {
                    this[this.tableSYS_PARA_TYPE.MODI_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODI_DTM {
                get {
                    return ((global::System.DateTime)(this[this.tableSYS_PARA_TYPE.MODI_DTMColumn]));
                }
                set {
                    this[this.tableSYS_PARA_TYPE.MODI_DTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSYS_PARA_TYPE_NAMENull() {
                return this.IsNull(this.tableSYS_PARA_TYPE.SYS_PARA_TYPE_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSYS_PARA_TYPE_NAMENull() {
                this[this.tableSYS_PARA_TYPE.SYS_PARA_TYPE_NAMEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SYS_PARARowChangeEvent : global::System.EventArgs {
            
            private SYS_PARARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SYS_PARARowChangeEvent(SYS_PARARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SYS_PARARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SYS_PARA_TYPERowChangeEvent : global::System.EventArgs {
            
            private SYS_PARA_TYPERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SYS_PARA_TYPERowChangeEvent(SYS_PARA_TYPERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SYS_PARA_TYPERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591